{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles, Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Select, TextField, TableContainer, Table, TableHead, TableRow, TableBody, Paper, Chip } from \"@material-ui/core\";\nimport { useState } from \"react\"; // utils\n\nimport fetcher from '../../../utils/fetcher'; // library\n\nimport useSWR, { useSWRConfig } from 'swr';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useSnackbar } from 'notistack';\nimport Moment from 'react-moment'; // icons\n\nimport { Delete, PanTool } from \"@material-ui/icons\"; // styles\n\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport useStyles from '../Partials/CommonStyles';\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useCommonStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst Contract = () => {\n  _s();\n\n  // styles config\n  const commonClasses = useCommonStyles();\n  const classes = useStyles();\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // swr config\n\n  const {\n    mutate\n  } = useSWRConfig();\n  const CLIENT_API = 'api/client/name';\n  const CONTRACT_API = 'api/contract/'; // state\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [deleteId, setDeleteId] = useState(null);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [selectValue, setSelectValue] = useState(''); // hook form\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      contract_sign_date: '2021-11-12',\n      contract_end_date: '2021-11-12'\n    }\n  }); // FETCH DATA\n\n  const {\n    data: clients,\n    error: clientError\n  } = useSWR(CLIENT_API, fetcher);\n  const {\n    data: contracts,\n    error: contractError\n  } = useSWR(CONTRACT_API, fetcher);\n  if (clientError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 29\n  }, this);\n  if (!clients) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 26\n  }, this);\n  if (contractError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 31\n  }, this);\n  if (!contracts) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 28\n  }, this);\n\n  const onSubmit = data => {\n    // console.log(data);\n    if (!isEditMode) axios.post(CONTRACT_API, data).then(({\n      data\n    }) => {\n      mutate(CONTRACT_API);\n      setOpenDialog(false);\n      enqueueSnackbar(data.success_msg, {\n        variant: 'success'\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleEdit = row => {\n    reset({\n      payment_status: row.payment_status,\n      contract_sign_date: '2021-11-12',\n      contract_end_date: '2021-11-15'\n    });\n    console.log(row);\n    setOpenDialog(true);\n    setIsEditMode(true); // setValue\n  };\n\n  const handleDelete = () => {\n    axios.delete(CONTRACT_API + deleteId).then(({\n      data\n    }) => {\n      console.log(data);\n      mutate(CONTRACT_API);\n      setOpenDeleteDialog(false);\n      enqueueSnackbar(data.success_msg, {\n        variant: 'success'\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      onClick: () => setOpenDialog(true),\n      children: \"Add Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => {},\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: isEditMode ? 'Update Contract' : 'Add Contract'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"label\",\n            className: commonClasses.formControl,\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(\"client_id\", {\n              required: \"Client is required!\"\n            }),\n            labelId: \"label\",\n            id: \"select\",\n            variant: \"outlined\",\n            fullWidth: true // defaultValue={selectValue}  \n            ,\n            children: clients && (clients === null || clients === void 0 ? void 0 : clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: [\" \", client.company_name, \" \"]\n            }, client._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            ...register('payment_status'),\n            label: \"Payment Status\",\n            fullWidth: true,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"paid\",\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"notpaid\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('contract_sign_date', {\n              required: 'Contract Sign Date is required!'\n            }),\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            label: \"Contract Sign Date\",\n            type: \"date\" // defaultValue=\"2020-01-01\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('contract_end_date', {\n              required: 'Contract End Date is required!'\n            }),\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            label: \"Contract End Date\",\n            type: \"date\" // defaultValue=\"2022-01-01\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {},\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: isEditMode ? 'Update' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpenDialog(false),\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Payment Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Contract Sign Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Contract End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: contracts && (contracts === null || contracts === void 0 ? void 0 : contracts.map(row => {\n            var _row$client_id;\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row === null || row === void 0 ? void 0 : (_row$client_id = row.client_id) === null || _row$client_id === void 0 ? void 0 : _row$client_id.company_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.payment_status === 'paid' ? /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"medium\",\n                  label: row.payment_status,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"medium\",\n                  label: row.payment_status,\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"MMMM Do YYYY\",\n                  children: row.contract_sign_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  fromNow: true,\n                  children: row.contract_end_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                className: classes.icon,\n                children: [/*#__PURE__*/_jsxDEV(PanTool, {\n                  fontSize: \"small\",\n                  onClick: () => {\n                    handleEdit(row);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Delete, {\n                  fontSize: \"medium\",\n                  onClick: () => {\n                    setDeleteId(row._id);\n                    setOpenDeleteDialog(true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDelete, {\n      handleDelete: handleDelete,\n      setOpenDeleteDialog: setOpenDeleteDialog,\n      openDeleteDialog: openDeleteDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contract, \"0RbemKdYU/ju0PvbK2BgmTSM+3w=\", false, function () {\n  return [useCommonStyles, useStyles, useSnackbar, useSWRConfig, useForm, useSWR, useSWR];\n});\n\n_c = Contract;\nexport default Contract;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contract\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx"],"names":["makeStyles","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","MenuItem","Select","TextField","TableContainer","Table","TableHead","TableRow","TableBody","Paper","Chip","useState","fetcher","useSWR","useSWRConfig","useForm","axios","useSnackbar","Moment","Delete","PanTool","StyledTableCell","useStyles","ConfirmDelete","useCommonStyles","theme","formControl","margin","spacing","Contract","commonClasses","classes","enqueueSnackbar","mutate","CLIENT_API","CONTRACT_API","openDialog","setOpenDialog","isEditMode","setIsEditMode","deleteId","setDeleteId","openDeleteDialog","setOpenDeleteDialog","selectValue","setSelectValue","register","handleSubmit","setValue","reset","formState","errors","defaultValues","contract_sign_date","contract_end_date","data","clients","error","clientError","contracts","contractError","onSubmit","post","then","success_msg","variant","catch","err","console","log","handleEdit","row","payment_status","handleDelete","delete","required","map","client","_id","company_name","marginTop","client_id","icon"],"mappings":"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","sourcesContent":["import { makeStyles,Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField, TableContainer, Table, TableHead, TableRow, TableBody, Paper, Chip } from \"@material-ui/core\"\nimport { useState } from \"react\";\n// utils\nimport fetcher from '../../../utils/fetcher';\n// library\nimport useSWR, { useSWRConfig } from 'swr';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useSnackbar } from 'notistack';\nimport Moment from 'react-moment';\n// icons\nimport { Delete, PanTool } from \"@material-ui/icons\";\n// styles\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport useStyles from '../Partials/CommonStyles'\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\n\nconst useCommonStyles = makeStyles((theme) => ({\n    formControl:{\n        margin:theme.spacing(1)\n    }\n}))\n\ninterface ContractType{\n    client_id:string,\n    contract_end_date:string,\n    contract_sign_date:string,\n    payment_status:string,\n}\ninterface ClientType{\n    _id:string,\n    company_name:string,\n}\n\nconst Contract = () => {\n\n    // styles config\n    const commonClasses = useCommonStyles();\n    const classes = useStyles();\n    const { enqueueSnackbar } = useSnackbar();\n\n    // swr config\n    const { mutate } = useSWRConfig();\n    const CLIENT_API = 'api/client/name';\n    const CONTRACT_API = 'api/contract/';\n    \n    // state\n    const [openDialog,setOpenDialog] = useState<boolean>(false);\n    const [isEditMode,setIsEditMode] = useState<boolean>(false);\n    const [deleteId,setDeleteId] = useState<string>(null);\n    const [openDeleteDialog,setOpenDeleteDialog] = useState<boolean>(false);\n    const [selectValue,setSelectValue] = useState<string>('');\n\n    // hook form\n    const { register, handleSubmit, setValue, reset, formState: { errors } } = useForm<ContractType>({\n        defaultValues: {\n            contract_sign_date: '2021-11-12',\n            contract_end_date: '2021-11-12',\n        }\n    });\n    \n    // FETCH DATA\n    const { data: clients, error: clientError } = useSWR(CLIENT_API, fetcher);\n    const { data: contracts, error: contractError } = useSWR(CONTRACT_API, fetcher);\n\n    if (clientError) return <div>failed to load</div>\n    if (!clients) return <div>loading...</div>\n    if (contractError) return <div>failed to load</div>\n    if (!contracts) return <div>loading...</div>\n\n\n    const onSubmit = (data: ContractType) => {\n        // console.log(data);\n        if(!isEditMode)\n            axios.post(CONTRACT_API, data)\n                .then(({ data }) => { mutate(CONTRACT_API);setOpenDialog(false); enqueueSnackbar(data.success_msg,{variant:'success'}) })\n                .catch((err) => { console.log(err); })\n    }\n\n    const handleEdit = (row: ContractType) => {\n        reset({\n            payment_status: row.payment_status,\n            contract_sign_date: '2021-11-12',\n            contract_end_date: '2021-11-15',});\n        console.log(row);\n        setOpenDialog(true);\n        setIsEditMode(true);\n        // setValue\n    }\n\n    const handleDelete = () => {\n        axios.delete(CONTRACT_API + deleteId)\n            .then(({ data }) => { console.log(data); mutate(CONTRACT_API); setOpenDeleteDialog(false); enqueueSnackbar(data.success_msg,{variant:'success'})})\n            .catch((err) => { console.log(err);})\n    }\n\n\n    return (\n        <Box m={5}>\n            \n            <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpenDialog(true)}>Add Contract</Button>\n            \n            {/* add/update dialog/model */}\n            <Dialog open={openDialog} onClose={() => {}} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">\n                    {isEditMode ? 'Update Contract' : 'Add Contract'}\n                </DialogTitle>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n\n                        <InputLabel id=\"label\" className={commonClasses.formControl}>Client</InputLabel>\n                        \n                        <Select {...register(\"client_id\", { required: \"Client is required!\" })}\n                            labelId=\"label\" id=\"select\" variant=\"outlined\" fullWidth\n                            // defaultValue={selectValue}  \n                        >\n                            {clients && clients?.map(client => (\n                                <MenuItem key={client._id} value={client._id}> {client.company_name} </MenuItem>\n                            ))}\n                        </Select>\n{/*                         \n                        <InputLabel id=\"payment\" className={commonClasses.formControl}>Payment Status</InputLabel> */}\n                        <TextField select {...register('payment_status')}\n                            label=\"Payment Status\" fullWidth variant=\"outlined\">\n                            <MenuItem value=\"paid\">Paid</MenuItem>\n                            <MenuItem value=\"notpaid\">Not Paid</MenuItem>\n                        </TextField>\n\n                        <TextField\n                            {...register('contract_sign_date',{required:'Contract Sign Date is required!'})}\n                            fullWidth\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            label=\"Contract Sign Date\"\n                            type=\"date\"\n                            // defaultValue=\"2020-01-01\"\n                        \n                        />\n                        <TextField\n                            {...register('contract_end_date', { required: 'Contract End Date is required!' })}\n                            fullWidth\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            label=\"Contract End Date\"\n                            type=\"date\"\n                            // defaultValue=\"2022-01-01\"\n                        />\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => {}} color=\"primary\" variant=\"contained\" type=\"submit\">\n                            {isEditMode ? 'Update' : 'Save'}\n                        </Button>\n                        <Button onClick={() => setOpenDialog(false)} color=\"secondary\" variant=\"contained\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n            {/* add/update dialog/model */}\n\n\n            {/* table */}\n            <TableContainer component={Paper} style={{ marginTop: '20px' }}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align=\"left\">Company Name</StyledTableCell>\n                            <StyledTableCell align=\"left\">Payment Status</StyledTableCell>\n                            <StyledTableCell align=\"left\">Contract Sign Date</StyledTableCell>\n                            <StyledTableCell align=\"left\">Contract End Date</StyledTableCell>\n                            <StyledTableCell align=\"left\">Actions</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n\n                        {contracts && contracts?.map((row) => (\n                            <TableRow key={row._id}>\n                                <StyledTableCell align=\"left\">{row?.client_id?.company_name}</StyledTableCell>\n                                <StyledTableCell align=\"left\">\n                                    {row.payment_status === 'paid' ? \n                                        <Chip size=\"medium\" label={row.payment_status} color=\"primary\" />\n                                        : \n                                        <Chip size=\"medium\" label={row.payment_status} color=\"secondary\" />\n                                    }\n                                </StyledTableCell>\n                                <StyledTableCell align=\"left\">\n                                    <Moment format=\"MMMM Do YYYY\">{row.contract_sign_date}</Moment>\n                                </StyledTableCell>\n                                <StyledTableCell align=\"left\">\n                                    <Moment fromNow>{row.contract_end_date}</Moment>\n                                </StyledTableCell>\n                                <StyledTableCell align=\"left\" className={classes.icon}>\n                                    <PanTool fontSize=\"small\" onClick={() => {handleEdit(row)}} />\n                                    <Delete fontSize=\"medium\" onClick={() => {setDeleteId(row._id);setOpenDeleteDialog(true);}} />\n                                </StyledTableCell>\n                            </TableRow>\n                        ))}\n\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {/* table */}\n\n            \n            <ConfirmDelete \n                handleDelete={handleDelete}\n                setOpenDeleteDialog={setOpenDeleteDialog}\n                openDeleteDialog={openDeleteDialog}\n            />\n\n\n        </Box>\n    )\n}\n\nexport default Contract\n"]},"metadata":{},"sourceType":"module"}