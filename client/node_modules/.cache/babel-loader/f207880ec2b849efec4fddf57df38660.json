{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles, Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Select, TextField, TableContainer, Table, TableHead, TableRow, TableBody, Paper } from \"@material-ui/core\";\nimport { useState } from \"react\"; // utils\n\nimport fetcher from '../../../utils/fetcher'; // library\n\nimport useSWR, { useSWRConfig } from 'swr';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useSnackbar } from 'notistack'; // icons\n\nimport { Delete, PanTool } from \"@material-ui/icons\"; // styles\n\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport useCommonStyles from '../Partials/CommonStyles';\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst Contract = () => {\n  _s();\n\n  // styles config\n  const classes = useStyles();\n  const commonClasses = useCommonStyles();\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // swr config\n\n  const {\n    mutate\n  } = useSWRConfig();\n  const CLIENT_API = 'api/client/name';\n  const CONTRACT_API = 'api/contract'; // state\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [deleteId, setDeleteId] = useState(null);\n  const [selectValue, setSelectValue] = useState(''); // hook form\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm(); // FETCH DATA\n\n  const {\n    data: clients,\n    error: clientError\n  } = useSWR(CLIENT_API, fetcher);\n  const {\n    data: contracts,\n    error: contractError\n  } = useSWR(CONTRACT_API, fetcher);\n  if (clientError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 29\n  }, this);\n  if (!clients) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 26\n  }, this);\n  if (contractError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 31\n  }, this);\n  if (!contracts) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 28\n  }, this);\n  console.log(contracts);\n\n  const onSubmit = data => {\n    console.log(data); // if(!isEditMode)\n\n    axios.post(CONTRACT_API, data).then(({\n      data\n    }) => {\n      console.log(data);\n      setOpenDialog(false);\n      enqueueSnackbar(data.success_msg, {\n        variant: 'success'\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleDelete = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      onClick: () => setOpenDialog(true),\n      children: \"Add Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => {},\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: isEditMode ? 'Update Contract' : 'Add Contract'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"label\",\n            className: classes.formControl,\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(\"client_id\", {\n              required: \"Client is required!\"\n            }),\n            labelId: \"label\",\n            id: \"select\",\n            variant: \"outlined\",\n            fullWidth: true,\n            defaultValue: selectValue,\n            children: clients && (clients === null || clients === void 0 ? void 0 : clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: [\" \", client.company_name, \" \"]\n            }, client._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"payment\",\n            className: classes.formControl,\n            children: \"Payment Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register('payment_status', {\n              required: 'Payment Status is required!'\n            }),\n            labelId: \"payment\",\n            fullWidth: true,\n            variant: \"outlined\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"paid\",\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"notpaid\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('contract_sign_date', {\n              required: 'Contract Sign Date is required!'\n            }),\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            label: \"Contract Sign Date\",\n            type: \"date\",\n            defaultValue: \"2020-01-01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('contract_end_date', {\n              required: 'Contract End Date is required!'\n            }),\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            label: \"Contract End Date\",\n            type: \"date\",\n            defaultValue: \"2022-01-01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {},\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: isEditMode ? 'Update' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpenDialog(false),\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Payment Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Contract Sign Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Contract End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: contracts && (contracts === null || contracts === void 0 ? void 0 : contracts.map(row => {\n            var _row$client_id;\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row === null || row === void 0 ? void 0 : (_row$client_id = row.client_id) === null || _row$client_id === void 0 ? void 0 : _row$client_id.company_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.payment_status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.contract_sign_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.contract_end_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                className: commonClasses.icon,\n                children: [/*#__PURE__*/_jsxDEV(PanTool, {\n                  fontSize: \"small\",\n                  onClick: () => {}\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Delete, {\n                  fontSize: \"medium\",\n                  onClick: () => {}\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDelete, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contract, \"/PUMqk/nBsnCf4aJcpxmdqbCxl4=\", false, function () {\n  return [useStyles, useCommonStyles, useSnackbar, useSWRConfig, useForm, useSWR, useSWR];\n});\n\n_c = Contract;\nexport default Contract;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contract\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx"],"names":["makeStyles","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","MenuItem","Select","TextField","TableContainer","Table","TableHead","TableRow","TableBody","Paper","useState","fetcher","useSWR","useSWRConfig","useForm","axios","useSnackbar","Delete","PanTool","StyledTableCell","useCommonStyles","ConfirmDelete","useStyles","theme","formControl","margin","spacing","Contract","classes","commonClasses","enqueueSnackbar","mutate","CLIENT_API","CONTRACT_API","openDialog","setOpenDialog","isEditMode","setIsEditMode","deleteId","setDeleteId","selectValue","setSelectValue","register","handleSubmit","watch","formState","errors","data","clients","error","clientError","contracts","contractError","console","log","onSubmit","post","then","success_msg","variant","catch","err","handleDelete","required","map","client","_id","company_name","marginTop","row","client_id","payment_status","contract_sign_date","contract_end_date","icon"],"mappings":"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","sourcesContent":["import { makeStyles,Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField, TableContainer, Table, TableHead, TableRow, TableBody, Paper } from \"@material-ui/core\"\nimport { useState } from \"react\";\n// utils\nimport fetcher from '../../../utils/fetcher';\n// library\nimport useSWR, { useSWRConfig } from 'swr';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useSnackbar } from 'notistack';\n// icons\nimport { Delete, PanTool } from \"@material-ui/icons\";\n// styles\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport useCommonStyles from '../Partials/CommonStyles'\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl:{\n        margin:theme.spacing(1)\n    }\n}))\n\nconst Contract = () => {\n\n    // styles config\n    const classes = useStyles();\n    const commonClasses = useCommonStyles(); \n    const { enqueueSnackbar } = useSnackbar();\n\n    // swr config\n    const { mutate } = useSWRConfig();\n    const CLIENT_API = 'api/client/name';\n    const CONTRACT_API = 'api/contract';\n    \n    // state\n    const [openDialog,setOpenDialog] = useState<boolean>(false);\n    const [isEditMode,setIsEditMode] = useState<boolean>(false);\n    const [deleteId,setDeleteId] = useState<string>(null);\n    const [selectValue,setSelectValue] = useState<string>('');\n\n    // hook form\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    \n    // FETCH DATA\n    const { data: clients, error: clientError } = useSWR(CLIENT_API, fetcher);\n    const { data: contracts, error: contractError } = useSWR(CONTRACT_API, fetcher);\n\n    if (clientError) return <div>failed to load</div>\n    if (!clients) return <div>loading...</div>\n    if (contractError) return <div>failed to load</div>\n    if (!contracts) return <div>loading...</div>\n\n    console.log(contracts);\n\n    const onSubmit = (data) => {\n        console.log(data);\n\n        // if(!isEditMode)\n        axios.post(CONTRACT_API, data)\n            .then(({ data }) => { console.log(data);setOpenDialog(false); enqueueSnackbar(data.success_msg,{variant:'success'}) })\n            .catch((err) => { console.log(err); })\n    }\n\n    const handleDelete = () => {}\n\n\n    return (\n        <Box m={5}>\n            \n            <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpenDialog(true)}>Add Contract</Button>\n            \n            {/* add/update dialog/model */}\n            <Dialog open={openDialog} onClose={() => {}} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">\n                    {isEditMode ? 'Update Contract' : 'Add Contract'}\n                </DialogTitle>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n\n                        <InputLabel id=\"label\" className={classes.formControl}>Client</InputLabel>\n                        <Select {...register(\"client_id\", { required: \"Client is required!\" })}\n                            labelId=\"label\" id=\"select\" variant=\"outlined\" fullWidth\n                            defaultValue={selectValue}  \n                        >\n                            {clients && clients?.map(client => (\n                                <MenuItem key={client._id} value={client._id}> {client.company_name} </MenuItem>\n                            ))}\n                        </Select>\n                        \n                        <InputLabel id=\"payment\" className={classes.formControl}>Payment Status</InputLabel>\n                        <Select {...register('payment_status',{required:'Payment Status is required!'})}\n                            labelId=\"payment\" fullWidth variant=\"outlined\" fullWidth>\n                            <MenuItem value=\"paid\">Paid</MenuItem>\n                            <MenuItem value=\"notpaid\">Not Paid</MenuItem>\n                        </Select>\n\n                        <TextField\n                            {...register('contract_sign_date',{required:'Contract Sign Date is required!'})}\n                            fullWidth\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            label=\"Contract Sign Date\"\n                            type=\"date\"\n                            defaultValue=\"2020-01-01\"\n                        \n                        />\n                        <TextField\n                            {...register('contract_end_date', { required: 'Contract End Date is required!' })}\n                            fullWidth\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            label=\"Contract End Date\"\n                            type=\"date\"\n                            defaultValue=\"2022-01-01\"\n                        />\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => {}} color=\"primary\" variant=\"contained\" type=\"submit\">\n                            {isEditMode ? 'Update' : 'Save'}\n                        </Button>\n                        <Button onClick={() => setOpenDialog(false)} color=\"secondary\" variant=\"contained\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n            {/* add/update dialog/model */}\n\n\n            {/* table */}\n            <TableContainer component={Paper} style={{ marginTop: '20px' }}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align=\"left\">Company Name</StyledTableCell>\n                            <StyledTableCell align=\"left\">Payment Status</StyledTableCell>\n                            <StyledTableCell align=\"left\">Contract Sign Date</StyledTableCell>\n                            <StyledTableCell align=\"left\">Contract End Date</StyledTableCell>\n                            <StyledTableCell align=\"left\">Actions</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n\n                        {contracts && contracts?.map((row) => (\n                            <TableRow key={row._id}>\n                                <StyledTableCell align=\"left\">{row?.client_id?.company_name}</StyledTableCell>\n                                <StyledTableCell align=\"left\">{row.payment_status}</StyledTableCell>\n                                <StyledTableCell align=\"left\">{row.contract_sign_date}</StyledTableCell>\n                                <StyledTableCell align=\"left\">{row.contract_end_date}</StyledTableCell>\n\n                                <StyledTableCell align=\"left\" className={commonClasses.icon}>\n                                    <PanTool fontSize=\"small\" onClick={() => {}} />\n                                    <Delete fontSize=\"medium\" onClick={() => {}} />\n                                </StyledTableCell>\n                            </TableRow>\n                        ))}\n\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {/* table */}\n\n            \n            <ConfirmDelete />\n\n\n        </Box>\n    )\n}\n\nexport default Contract\n"]},"metadata":{},"sourceType":"module"}