{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Branch = () => {\n  _s();\n\n  useEffect(() => {\n    axios.get('api/client/name').then(({\n      data\n    }) => {\n      console.log(data);\n      setClients(data);\n    });\n  }, []);\n  const [open, setOpen] = useState(false);\n  const [clients, setClients] = useState(null);\n  const [age, setAge] = useState();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  const handleChange = event => {};\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      onClick: () => setOpen(true),\n      children: \"Add Branch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Add New Branch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"label\",\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(\"client_id\", {\n              required: \"Client is required!\"\n            }),\n            labelId: \"label\",\n            id: \"select\",\n            fullWidth: true,\n            variant: \"outlined\",\n            children: clients && (clients === null || clients === void 0 ? void 0 : clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: [\" \", client.company_name, \" \"]\n            }, client._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"address\", {\n              required: \"Address is requied!\"\n            }),\n            autoFocus: true,\n            variant: \"outlined\",\n            margin: \"normal\",\n            id: \"address\",\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setOpen(false);\n              reset({});\n            },\n            color: \"primary\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Branch, \"aLbdxRuLdI2SBMoDqe4UV2TUs+c=\", false, function () {\n  return [useForm];\n});\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","MenuItem","Select","TextField","useEffect","useState","axios","useForm","Branch","get","then","data","console","log","setClients","open","setOpen","clients","age","setAge","register","handleSubmit","reset","formState","errors","onSubmit","handleChange","event","handleClose","required","map","client","_id","company_name"],"mappings":"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","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, NativeSelect, Select, TextField } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\n\ninterface ClientType{\n    _id?:string,\n    company_name:string,\n}\n\nconst Branch = () => {\n\n    useEffect(() => {\n        axios.get('api/client/name')\n            .then(({data}) => {console.log(data);setClients(data)});\n    },[]);\n\n    const [open, setOpen] = useState<boolean>(false);\n    const [clients , setClients] = useState<ClientType[]>(null);\n\n    const [age, setAge] = useState<number>();\n    \n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    \n    const onSubmit = data => {console.log(data);}\n    \n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {};\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        \n        <Box m={5}>\n            \n            <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Add Branch</Button>\n\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add New Branch</DialogTitle>\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n\n                        <InputLabel id=\"label\" >Client</InputLabel>\n                        <Select {...register(\"client_id\",{required:\"Client is required!\"})} labelId=\"label\" id=\"select\" fullWidth variant=\"outlined\">\n                            {clients && clients?.map(client => (\n                                <MenuItem key={client._id} value={client._id}> {client.company_name} </MenuItem>\n                            ))}\n                        </Select>\n\n                        {/* <TextField id=\"select\" label=\"Client\" value=\"20\" select fullWidth variant=\"outlined\">\n                            <MenuItem value=\"10\">Ten</MenuItem>\n                            <MenuItem value=\"20\">Twenty</MenuItem>\n                        </TextField> */}\n\n                        <TextField {...register(\"address\", { required: \"Address is requied!\" })}\n                            autoFocus variant=\"outlined\" margin=\"normal\" id=\"address\" label=\"Address\" type=\"text\" fullWidth \n                        />\n                    \n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button color=\"primary\" type=\"submit\">\n                            Save\n                        </Button>\n                        <Button onClick={() => {setOpen(false);reset({});}} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n\n        </Box>\n    )\n}\n\nexport default Branch\n"]},"metadata":{},"sourceType":"module"}