{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Count.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  root: {\n    minWidth: \"275px\",\n    minHeight: \"120px\",\n    margin: \"10px\",\n    display: \"flex\",\n    padding: \"0 10px\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  chart: {\n    marginTop: \"100px\",\n    float: \"left\"\n  }\n});\n\nconst Count = () => {\n  _s();\n\n  const classes = useStyles();\n  const [count, setCount] = useState(null);\n  useLayoutEffect(() => {\n    axios.get(\"/api/count/getDashboardData\").then(({\n      data\n    }) => {\n      setCount(data);\n      console.log(data);\n    }).catch(err => console.log(err));\n  }, []);\n  console.log(count);\n  const chartData = {\n    labels: [\"Branch\", \"Client\", \"ContactPerson\", \"Contract\"],\n    datasets: [{\n      label: \"# of count\",\n      data: [count === null || count === void 0 ? void 0 : count.branchCount, count === null || count === void 0 ? void 0 : count.clientCount, count === null || count === void 0 ? void 0 : count.contractCount, count === null || count === void 0 ? void 0 : count.contactCount],\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\"],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          gutterBottom: true,\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Branch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          variant: \"h4\",\n          color: \"textPrimary\",\n          children: count === null || count === void 0 ? void 0 : count.branchCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          gutterBottom: true,\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          variant: \"h4\",\n          color: \"textPrimary\",\n          children: count === null || count === void 0 ? void 0 : count.clientCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          gutterBottom: true,\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"ContactPerson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          variant: \"h4\",\n          color: \"textPrimary\",\n          children: count === null || count === void 0 ? void 0 : count.contractCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          gutterBottom: true,\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          variant: \"h4\",\n          color: \"textPrimary\",\n          children: count === null || count === void 0 ? void 0 : count.contractCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chart,\n      children: count && /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: chartData,\n        options: {\n          responsive: false,\n          maintainAspectRatio: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Count, \"0pk8Gct459is3QPE9x+oEnB5Dfw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Count;\nexport default Count;\n\nvar _c;\n\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Count.tsx"],"names":["Box","makeStyles","Paper","Typography","axios","React","useLayoutEffect","useState","Doughnut","useStyles","container","display","flexDirection","root","minWidth","minHeight","margin","padding","alignItems","justifyContent","chart","marginTop","float","Count","classes","count","setCount","get","then","data","console","log","catch","err","chartData","labels","datasets","label","branchCount","clientCount","contractCount","contactCount","backgroundColor","borderColor","borderWidth","responsive","maintainAspectRatio"],"mappings":"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","sourcesContent":["import { Box, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\ninterface CountType {\n  branchCount: number;\n  clientCount: number;\n  contractCount: number;\n  contactCount: number;\n}\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  root: {\n    minWidth: \"275px\",\n    minHeight: \"120px\",\n    margin: \"10px\",\n    display: \"flex\",\n    padding: \"0 10px\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  chart: {\n    marginTop: \"100px\",\n    float: \"left\",\n  },\n});\nconst Count = () => {\n  const classes = useStyles();\n  const [count, setCount] = useState<CountType>(null);\n\n  useLayoutEffect(() => {\n    axios\n      .get(\"/api/count/getDashboardData\")\n      .then(({ data }) => {\n        setCount(data);\n        console.log(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  console.log(count);\n\n  const chartData = {\n    labels: [\"Branch\", \"Client\", \"ContactPerson\", \"Contract\"],\n    datasets: [\n      {\n        label: \"# of count\",\n        data: [\n          count?.branchCount,\n          count?.clientCount,\n          count?.contractCount,\n          count?.contactCount,\n        ],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  return (\n    <Box m={5}>\n      <div className={classes.container}>\n        <Paper className={classes.root} elevation={3}>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            component=\"h1\"\n            variant=\"h5\"\n          >\n            Branch\n          </Typography>\n          <Typography component=\"span\" variant=\"h4\" color=\"textPrimary\">\n            {count?.branchCount}\n          </Typography>\n        </Paper>\n        <Paper className={classes.root} elevation={3}>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            component=\"h1\"\n            variant=\"h5\"\n          >\n            Client\n          </Typography>\n          <Typography component=\"span\" variant=\"h4\" color=\"textPrimary\">\n            {count?.clientCount}\n          </Typography>\n        </Paper>\n        <Paper className={classes.root} elevation={3}>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            component=\"h1\"\n            variant=\"h5\"\n          >\n            ContactPerson\n          </Typography>\n          <Typography component=\"span\" variant=\"h4\" color=\"textPrimary\">\n            {count?.contractCount}\n          </Typography>\n        </Paper>\n        <Paper className={classes.root} elevation={3}>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            component=\"h1\"\n            variant=\"h5\"\n          >\n            Contract\n          </Typography>\n          <Typography component=\"span\" variant=\"h4\" color=\"textPrimary\">\n            {count?.contractCount}\n          </Typography>\n        </Paper>\n      </div>\n\n      <div className={classes.chart}>\n        {count && (\n          <Doughnut\n            data={chartData}\n            options={{\n              responsive: false,\n              maintainAspectRatio: true,\n            }}\n          />\n        )}\n      </div>\n    </Box>\n  );\n};\n\nexport default Count;\n"]},"metadata":{},"sourceType":"module"}