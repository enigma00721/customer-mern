{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/ReactForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormHelperText, MenuItem, TextField } from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReactForm = ({\n  openDialog,\n  setOpenDialog,\n  isEditMode,\n  clients\n}) => {\n  _s();\n\n  const [selectPaymentValue, setSelectPaymentValue] = useState(undefined);\n  const [selectClientValue, setSelectClientValue] = useState(undefined); // date today and one year after\n\n  const signDate = moment().format(\"yyyy-MM-DD\").toString();\n  const endDate = moment().add(1, \"y\").format(\"yyyy-MM-DD\").toString(); // hook form default date values\n\n  const defaultValues = {\n    contract_sign_date: signDate,\n    contract_end_date: endDate,\n    client_id: selectClientValue ? selectClientValue : undefined,\n    payment_status: selectPaymentValue ? selectPaymentValue : undefined\n  }; // hook form\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: defaultValues\n  });\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openDialog,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: isEditMode ? \"Update Contract\" : \"Add Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          name: \"client_id\",\n          control: control,\n          rules: {\n            required: \"Client is required!\"\n          },\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            ...field,\n            style: {\n              marginBottom: \"10px\"\n            },\n            label: \"Client\",\n            fullWidth: true,\n            variant: \"outlined\",\n            error: !!errors.client_id,\n            children: clients && clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: client.company_name\n            }, client._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          className: \"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\",\n          children: errors && errors.client_id && errors.client_id.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"payment_status\",\n          rules: {\n            required: \"Payment Status is required!\"\n          },\n          control: control,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            select: true,\n            label: \"Payment Status\",\n            fullWidth: true,\n            variant: \"outlined\",\n            error: !!errors.payment_status,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"paid\",\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"notpaid\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          className: \"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\",\n          children: errors && errors.payment_status && errors.payment_status.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"contract_sign_date\", {\n            required: \"Contract Sign Date is required!\"\n          }),\n          fullWidth: true,\n          margin: \"normal\",\n          variant: \"outlined\",\n          label: \"Contract Sign Date\",\n          type: \"date\",\n          error: !!errors.contract_sign_date,\n          helperText: errors && errors.contract_sign_date && errors.contract_sign_date.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"contract_end_date\", {\n            required: \"Contract End Date is required!\"\n          }),\n          fullWidth: true,\n          margin: \"normal\",\n          variant: \"outlined\",\n          label: \"Contract End Date\",\n          type: \"date\",\n          error: !!errors.contract_end_date,\n          helperText: errors && errors.contract_end_date && errors.contract_end_date.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {},\n          color: \"primary\",\n          variant: \"contained\",\n          type: \"submit\",\n          children: isEditMode ? \"Update\" : \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose // onClick={() => {\n          //   setOpenDialog(false);\n          //   reset({});\n          // }}\n          ,\n          color: \"secondary\",\n          variant: \"contained\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReactForm, \"K1PjWPHLP1o6k1G8ju2jFytmmHU=\", true);\n\n_c = ReactForm;\nexport default ReactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactForm\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/ReactForm.tsx"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","FormHelperText","MenuItem","TextField","Controller","moment","ReactForm","openDialog","setOpenDialog","isEditMode","clients","selectPaymentValue","setSelectPaymentValue","useState","undefined","selectClientValue","setSelectClientValue","signDate","format","toString","endDate","add","defaultValues","contract_sign_date","contract_end_date","client_id","payment_status","register","handleSubmit","reset","control","formState","errors","useForm","handleClose","onSubmit","required","field","marginBottom","map","client","_id","company_name","message"],"mappings":";;;AAAA,SACEA,MADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,WALF,EAMEC,cANF,EAOEC,QAPF,EAQEC,SARF,QASO,mBATP;AAUA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA,UAA7B;AAAyCC,EAAAA;AAAzC,CAAD,KAAwD;AAAA;;AACxE,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IACJC,QAAQ,CAASC,SAAT,CADV;AAEA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CH,QAAQ,CAASC,SAAT,CAA1D,CAHwE,CAKxE;;AACA,QAAMG,QAAgB,GAAGZ,MAAM,GAAGa,MAAT,CAAgB,YAAhB,EAA8BC,QAA9B,EAAzB;AACA,QAAMC,OAAe,GAAGf,MAAM,GAAGgB,GAAT,CAAa,CAAb,EAAgB,GAAhB,EAAqBH,MAArB,CAA4B,YAA5B,EAA0CC,QAA1C,EAAxB,CAPwE,CAQxE;;AACA,QAAMG,aAAa,GAAG;AACpBC,IAAAA,kBAAkB,EAAEN,QADA;AAEpBO,IAAAA,iBAAiB,EAAEJ,OAFC;AAGpBK,IAAAA,SAAS,EAAEV,iBAAiB,GAAGA,iBAAH,GAAuBD,SAH/B;AAIpBY,IAAAA,cAAc,EAAEf,kBAAkB,GAAGA,kBAAH,GAAwBG;AAJtC,GAAtB,CATwE,CAgBxE;;AACA,QAAM;AACJa,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AALP,MAMFC,OAAO,CAAe;AACxBX,IAAAA,aAAa,EAAEA;AADS,GAAf,CANX;AASA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEf,UADR;AAEE,IAAA,OAAO,EAAE2B,WAFX;AAGE,uBAAgB,mBAHlB;AAAA,4BAKE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA,gBACGzB,UAAU,GAAG,iBAAH,GAAuB;AADpC;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AAAM,MAAA,QAAQ,EAAEmB,YAAY,CAACO,QAAD,CAA5B;AAAA,8BACE,QAAC,aAAD;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,OAAO,EAAEL,OAFX;AAGE,UAAA,KAAK,EAAE;AAAEM,YAAAA,QAAQ,EAAE;AAAZ,WAHT;AAIE,UAAA,MAAM,EAAE,CAAC;AAAEC,YAAAA;AAAF,WAAD,kBACN,QAAC,SAAD;AACE,YAAA,MAAM,MADR;AAAA,eAEMA,KAFN;AAGE,YAAA,KAAK,EAAE;AAAEC,cAAAA,YAAY,EAAE;AAAhB,aAHT;AAIE,YAAA,KAAK,EAAC,QAJR;AAKE,YAAA,SAAS,MALX;AAME,YAAA,OAAO,EAAC,UANV;AAOE,YAAA,KAAK,EAAE,CAAC,CAACN,MAAM,CAACP,SAPlB;AAAA,sBASGf,OAAO,IACNA,OAAO,CAAC6B,GAAR,CAAaC,MAAD,iBACV,QAAC,QAAD;AAA2B,cAAA,KAAK,EAAEA,MAAM,CAACC,GAAzC;AAAA,wBACGD,MAAM,CAACE;AADV,eAAeF,MAAM,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,oBADF;AAVJ;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAwBE,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAC,8DAA1B;AAAA,oBACGT,MAAM,IAAIA,MAAM,CAACP,SAAjB,IAA8BO,MAAM,CAACP,SAAP,CAAiBkB;AADlD;AAAA;AAAA;AAAA;AAAA,gBAxBF,eA4BE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,gBADP;AAEE,UAAA,KAAK,EAAE;AAAEP,YAAAA,QAAQ,EAAE;AAAZ,WAFT;AAGE,UAAA,OAAO,EAAEN,OAHX;AAIE,UAAA,MAAM,EAAE,CAAC;AAAEO,YAAAA;AAAF,WAAD,kBACN,QAAC,SAAD,OACMA,KADN;AAEE,YAAA,MAAM,MAFR;AAGE,YAAA,KAAK,EAAC,gBAHR;AAIE,YAAA,SAAS,MAJX;AAKE,YAAA,OAAO,EAAC,UALV;AAME,YAAA,KAAK,EAAE,CAAC,CAACL,MAAM,CAACN,cANlB;AAAA,oCAQE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eASE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBA5BF,eA8CE,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAC,8DAA1B;AAAA,oBACGM,MAAM,IAAIA,MAAM,CAACN,cAAjB,IAAmCM,MAAM,CAACN,cAAP,CAAsBiB;AAD5D;AAAA;AAAA;AAAA;AAAA,gBA9CF,eAkDE,QAAC,SAAD,OACMhB,QAAQ,CAAC,oBAAD,EAAuB;AACjCS,YAAAA,QAAQ,EAAE;AADuB,WAAvB,CADd;AAIE,UAAA,SAAS,MAJX;AAKE,UAAA,MAAM,EAAC,QALT;AAME,UAAA,OAAO,EAAC,UANV;AAOE,UAAA,KAAK,EAAC,oBAPR;AAQE,UAAA,IAAI,EAAC,MARP;AASE,UAAA,KAAK,EAAE,CAAC,CAACJ,MAAM,CAACT,kBATlB;AAUE,UAAA,UAAU,EACRS,MAAM,IACNA,MAAM,CAACT,kBADP,IAEAS,MAAM,CAACT,kBAAP,CAA0BoB;AAb9B;AAAA;AAAA;AAAA;AAAA,gBAlDF,eAkEE,QAAC,SAAD,OACMhB,QAAQ,CAAC,mBAAD,EAAsB;AAChCS,YAAAA,QAAQ,EAAE;AADsB,WAAtB,CADd;AAIE,UAAA,SAAS,MAJX;AAKE,UAAA,MAAM,EAAC,QALT;AAME,UAAA,OAAO,EAAC,UANV;AAOE,UAAA,KAAK,EAAC,mBAPR;AAQE,UAAA,IAAI,EAAC,MARP;AASE,UAAA,KAAK,EAAE,CAAC,CAACJ,MAAM,CAACR,iBATlB;AAUE,UAAA,UAAU,EACRQ,MAAM,IACNA,MAAM,CAACR,iBADP,IAEAQ,MAAM,CAACR,iBAAP,CAAyBmB;AAb7B;AAAA;AAAA;AAAA;AAAA,gBAlEF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAoFE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAM,CAAE,CADnB;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAC,WAHV;AAIE,UAAA,IAAI,EAAC,QAJP;AAAA,oBAMGlC,UAAU,GAAG,QAAH,GAAc;AAN3B;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,MAAD;AACE,UAAA,OAAO,EAAEyB,WADX,CAEE;AACA;AACA;AACA;AALF;AAME,UAAA,KAAK,EAAC,WANR;AAOE,UAAA,OAAO,EAAC,WAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cApFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsHD,CAhJD;;GAAM5B,S;;KAAAA,S;AAkJN,eAAeA,SAAf","sourcesContent":["import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormHelperText,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport { Controller } from \"react-hook-form\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nconst ReactForm = ({ openDialog, setOpenDialog, isEditMode, clients }) => {\n  const [selectPaymentValue, setSelectPaymentValue] =\n    useState<string>(undefined);\n  const [selectClientValue, setSelectClientValue] = useState<string>(undefined);\n\n  // date today and one year after\n  const signDate: string = moment().format(\"yyyy-MM-DD\").toString();\n  const endDate: string = moment().add(1, \"y\").format(\"yyyy-MM-DD\").toString();\n  // hook form default date values\n  const defaultValues = {\n    contract_sign_date: signDate,\n    contract_end_date: endDate,\n    client_id: selectClientValue ? selectClientValue : undefined,\n    payment_status: selectPaymentValue ? selectPaymentValue : undefined,\n  };\n\n  // hook form\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm<ContractType>({\n    defaultValues: defaultValues,\n  });\n  return (\n    <Dialog\n      open={openDialog}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">\n        {isEditMode ? \"Update Contract\" : \"Add Contract\"}\n      </DialogTitle>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogContent>\n          <Controller\n            name=\"client_id\"\n            control={control}\n            rules={{ required: \"Client is required!\" }}\n            render={({ field }) => (\n              <TextField\n                select\n                {...field}\n                style={{ marginBottom: \"10px\" }}\n                label=\"Client\"\n                fullWidth\n                variant=\"outlined\"\n                error={!!errors.client_id}\n              >\n                {clients &&\n                  clients.map((client) => (\n                    <MenuItem key={client._id} value={client._id}>\n                      {client.company_name}\n                    </MenuItem>\n                  ))}\n              </TextField>\n            )}\n          />\n          <FormHelperText className=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\">\n            {errors && errors.client_id && errors.client_id.message}\n          </FormHelperText>\n\n          <Controller\n            name=\"payment_status\"\n            rules={{ required: \"Payment Status is required!\" }}\n            control={control}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                select\n                label=\"Payment Status\"\n                fullWidth\n                variant=\"outlined\"\n                error={!!errors.payment_status}\n              >\n                <MenuItem value=\"paid\">Paid</MenuItem>\n                <MenuItem value=\"notpaid\">Not Paid</MenuItem>\n              </TextField>\n            )}\n          />\n          <FormHelperText className=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\">\n            {errors && errors.payment_status && errors.payment_status.message}\n          </FormHelperText>\n\n          <TextField\n            {...register(\"contract_sign_date\", {\n              required: \"Contract Sign Date is required!\",\n            })}\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            label=\"Contract Sign Date\"\n            type=\"date\"\n            error={!!errors.contract_sign_date}\n            helperText={\n              errors &&\n              errors.contract_sign_date &&\n              errors.contract_sign_date.message\n            }\n          />\n          <TextField\n            {...register(\"contract_end_date\", {\n              required: \"Contract End Date is required!\",\n            })}\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            label=\"Contract End Date\"\n            type=\"date\"\n            error={!!errors.contract_end_date}\n            helperText={\n              errors &&\n              errors.contract_end_date &&\n              errors.contract_end_date.message\n            }\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {}}\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            {isEditMode ? \"Update\" : \"Save\"}\n          </Button>\n          <Button\n            onClick={handleClose}\n            // onClick={() => {\n            //   setOpenDialog(false);\n            //   reset({});\n            // }}\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default ReactForm;\n"]},"metadata":{},"sourceType":"module"}