{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/pages/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, TextField, makeStyles, Button, Typography, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  box: {\n    textAlign: 'center',\n    marginTop: '-140px',\n    display: 'flex',\n    flexDirection: 'column',\n    background: 'white',\n    borderRadius: '10px',\n    border: '5px solid #fafafa',\n    [theme.breakpoints.down('sm')]: {\n      width: '60%'\n    }\n  },\n  title: {\n    marginBottom: '20px'\n  },\n  input: {\n    marginBottom: '10px'\n  },\n  error: {\n    textAlign: 'left',\n    color: 'red',\n    marginBottom: '10px'\n  }\n}));\n\nconst Login = () => {\n  _s();\n\n  var _errors$name, _errors$name2, _errors$name3, _errors$name4, _errors$password, _errors$password2, _errors$password3, _errors$confirmPasswo2, _errors$confirmPasswo3, _errors$confirmPasswo4, _errors$confirmPasswo5;\n\n  const [showPassword, setShowPassword] = useState(false); // react form hook\n\n  const validationSchema = Yup.object().shape({\n    password: Yup.string().required('Password is required').min(5, 'Password must be at least 6 characters'),\n    confirmPassword: Yup.string().required('Confirm Password is required').oneOf([Yup.ref('password')], 'Passwords must match')\n  });\n  const formOptions = {\n    resolver: yupResolver(validationSchema)\n  };\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = (data, e) => {\n    var _errors$confirmPasswo;\n\n    console.log(data); // console.log(register);\n\n    setError(\"confirmPassword\", {\n      type: \"manual\",\n      message: \"Confirm password didn't match!\"\n    });\n    console.log((_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const checkPassword = e => {\n    console.log(e.target.value);\n  }; // const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n  //     event.preventDefault();\n  // };\n\n\n  const classes = useStyles();\n  return (\n    /*#__PURE__*/\n    // <form onSubmit={handleSubmit(onSubmit)}>\n    _jsxDEV(Box, {\n      className: classes.box,\n      p: 5,\n      width: \"25%\",\n      component: \"form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        variant: \"h4\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: errors.name && true,\n        ...register(\"name\", {\n          required: true,\n          maxLength: 40,\n          minLength: 5\n        }),\n        id: \"outlined-basic\",\n        label: \"Full Name\",\n        variant: \"outlined\",\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        className: classes.error,\n        children: [((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === 'required' && \"Full name is required\", ((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === 'minLength' && \"Full name should not be less than 5 characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: !!errors.email,\n        ...register(\"email\", {\n          required: true,\n          maxLength: 30\n        }),\n        id: \"outlined-basic\",\n        label: \"Email\",\n        variant: \"outlined\",\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        className: classes.error,\n        children: [((_errors$name3 = errors.name) === null || _errors$name3 === void 0 ? void 0 : _errors$name3.type) === 'required' && \"Email is required\", ((_errors$name4 = errors.name) === null || _errors$name4 === void 0 ? void 0 : _errors$name4.type) === 'minLength' && \"Email shouldnot be greater than 30\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: !!errors.password,\n        ...register(\"password\", {\n          required: true,\n          minLength: {\n            value: 5,\n            message: 'Password should be longer than 5'\n          },\n          maxLength: {\n            value: 20,\n            message: 'Password Too Big'\n          }\n        }),\n        id: \"outlined-basic\",\n        label: \"Password\",\n        variant: \"outlined\",\n        className: classes.input,\n        type: showPassword ? 'text' : 'password',\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword // onMouseDown={handleMouseDownPassword}\n              ,\n              children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        className: classes.error,\n        children: [((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === 'required' && \"Password is required\", ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === 'minLength' && errors.password.message, ((_errors$password3 = errors.password) === null || _errors$password3 === void 0 ? void 0 : _errors$password3.type) === 'maxLength' && errors.password.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: !!errors.confirmPassword,\n        ...register(\"confirmPassword\", {\n          required: true,\n          maxLength: 30,\n          minLength: 5\n        }),\n        id: \"outlined-basic\",\n        label: \"Confirm Password\",\n        variant: \"outlined\",\n        className: classes.input,\n        type: showPassword ? 'text' : 'password',\n        onChange: e => checkPassword(e),\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword // onMouseDown={handleMouseDownPassword}\n              ,\n              children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        className: classes.error,\n        children: [((_errors$confirmPasswo2 = errors.confirmPassword) === null || _errors$confirmPasswo2 === void 0 ? void 0 : _errors$confirmPasswo2.type) === 'required' && \"Confirm Password is required\", ((_errors$confirmPasswo3 = errors.confirmPassword) === null || _errors$confirmPasswo3 === void 0 ? void 0 : _errors$confirmPasswo3.type) === 'minLength' && \"Confirm password should be greater than 5\", ((_errors$confirmPasswo4 = errors.confirmPassword) === null || _errors$confirmPasswo4 === void 0 ? void 0 : _errors$confirmPasswo4.type) === 'maxLength' && \"Confirm password shouldnot exceed length 20\", ((_errors$confirmPasswo5 = errors.confirmPassword) === null || _errors$confirmPasswo5 === void 0 ? void 0 : _errors$confirmPasswo5.type) === 'manual' && errors.confirmPassword.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: classes.title,\n        size: \"large\",\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginTop: '20px'\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"Already Registered \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  );\n};\n\n_s(Login, \"kV3CfB4i3oAXoS9OmTZUDmuCTyE=\", false, function () {\n  return [useForm, useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/pages/Register.tsx"],"names":["Box","TextField","makeStyles","Button","Typography","InputAdornment","IconButton","Visibility","VisibilityOff","useState","Link","useForm","yupResolver","Yup","useStyles","theme","box","textAlign","marginTop","display","flexDirection","background","borderRadius","border","breakpoints","down","width","title","marginBottom","input","error","color","Login","showPassword","setShowPassword","validationSchema","object","shape","password","string","required","min","confirmPassword","oneOf","ref","formOptions","resolver","register","handleSubmit","setError","formState","errors","onSubmit","data","e","console","log","type","message","handleClickShowPassword","checkPassword","target","value","classes","name","maxLength","minLength","email","endAdornment"],"mappings":"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","sourcesContent":["import { Box, TextField, makeStyles, Button, Typography, InputAdornment, IconButton } from '@material-ui/core'\nimport { CodeSharp, Visibility, VisibilityOff } from '@material-ui/icons'\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n        textAlign: 'center',\n        marginTop: '-140px',\n        display: 'flex',\n        flexDirection: 'column',\n        background: 'white',\n        borderRadius: '10px',\n        border: '5px solid #fafafa',\n        [theme.breakpoints.down('sm')]: {\n            width: '60%',\n        },\n    },\n    title: {\n        marginBottom: '20px'\n    },\n    input: {\n        marginBottom: '10px',\n    },\n    error:{\n        textAlign:'left',\n        color:'red',\n        marginBottom: '10px',\n    },\n}));\n\n\nconst Login = () => {\n    \n    const [showPassword, setShowPassword] = useState<boolean>(false);\n\n    // react form hook\n    const validationSchema = Yup.object().shape({\n        password: Yup.string()\n            .required('Password is required')\n            .min(5, 'Password must be at least 6 characters'),\n        confirmPassword: Yup.string()\n            .required('Confirm Password is required')\n            .oneOf([Yup.ref('password')], 'Passwords must match')\n\n    });\n    const formOptions = { resolver: yupResolver(validationSchema) };\n\n\n    const { register, handleSubmit ,setError, formState: { errors } } = useForm();\n    const onSubmit = (data,e) => {\n        console.log(data);\n        // console.log(register);\n        setError(\"confirmPassword\", {\n            type: \"manual\",\n            message: \"Confirm password didn't match!\",\n        });\n        console.log(errors.confirmPassword?.message)\n    }\n   \n    \n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const checkPassword = (e:React.ChangeEvent<HTMLInputElement>) => {\n        console.log(e.target.value);\n    }\n    \n    // const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n    //     event.preventDefault();\n    // };\n\n    const classes = useStyles();\n\n    return (\n            // <form onSubmit={handleSubmit(onSubmit)}>\n            <Box className={classes.box} p={5} width=\"25%\" component=\"form\" onSubmit={handleSubmit(onSubmit)}>\n\n                <Typography className={classes.title} variant=\"h4\">Register</Typography>\n\n                <TextField error={errors.name && true} {...register(\"name\", { required: true, maxLength:40,minLength:5})} id=\"outlined-basic\" label=\"Full Name\" variant=\"outlined\" className={classes.input} />\n                <Typography component=\"span\" className={classes.error}>\n                    {errors.name?.type === 'required' && \"Full name is required\"}\n                    {errors.name?.type === 'minLength' && \"Full name should not be less than 5 characters\"}\n                </Typography>\n\n\n                <TextField error={!!errors.email} {...register(\"email\",{required:true, maxLength:30})} id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" className={classes.input} />\n                <Typography component=\"span\" className={classes.error}>\n                    {errors.name?.type === 'required' && \"Email is required\"}\n                    {errors.name?.type === 'minLength' && \"Email shouldnot be greater than 30\"}\n                </Typography>\n\n\n                <TextField error={!!errors.password}\n                    {...register(\"password\", {required:true, minLength: { value: 5, message: 'Password should be longer than 5' }, maxLength: { value: 20,message:'Password Too Big' } })} \n                        id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" className={classes.input}\n                        type={showPassword ? 'text' : 'password'}\n                        InputProps={{\n                            endAdornment:(\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                // onMouseDown={handleMouseDownPassword}\n                                >\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                            )\n                        }}\n                    />\n                <Typography component=\"span\" className={classes.error}>\n                    {errors.password?.type === 'required' && \"Password is required\"}\n                    {errors.password?.type === 'minLength' && errors.password.message }\n                    {errors.password?.type === 'maxLength' && errors.password.message }\n                </Typography>\n\n\n                {/* confirm password input field */}\n                <TextField error={!!errors.confirmPassword}\n                    {...register(\"confirmPassword\", { required: true, maxLength: 30, minLength: 5 })} id=\"outlined-basic\" label=\"Confirm Password\"  variant=\"outlined\" className={classes.input}\n                    type={showPassword ? 'text' : 'password'}\n                    onChange={(e) => checkPassword(e)}\n                    InputProps={{ \n                        endAdornment:(\n                            <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                // onMouseDown={handleMouseDownPassword}\n                            >\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                            </InputAdornment>\n                        )\n                    }}\n                />\n                <Typography component=\"span\" className={classes.error}>\n                    {errors.confirmPassword?.type === 'required' && \"Confirm Password is required\"}\n                    {errors.confirmPassword?.type === 'minLength' && \"Confirm password should be greater than 5\"}\n                    {errors.confirmPassword?.type === 'maxLength' && \"Confirm password shouldnot exceed length 20\"}\n                    {errors.confirmPassword?.type === 'manual' && errors.confirmPassword.message}\n                </Typography>\n\n\n                <Button type=\"submit\" className={classes.title} size=\"large\" variant=\"contained\" color=\"primary\" style={{ marginTop: '20px' }}>Submit</Button>\n\n                <Typography variant=\"body2\">Already Registered <Link to=\"/login\">Login</Link></Typography>\n\n        </Box>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}