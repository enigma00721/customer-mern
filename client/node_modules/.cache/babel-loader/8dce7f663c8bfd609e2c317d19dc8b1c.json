{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Paper, Select, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport StyledTableCell from \"../Partials/StyledTableCell\";\n// icons\nimport { PanTool, Delete } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Branch = () => {\n  _s();\n\n  useEffect(() => {\n    axios.get('api/client/name').then(({\n      data\n    }) => {\n      console.log(data);\n      setClients(data);\n    });\n    getAllBranches();\n  }, []);\n  const [open, setOpen] = useState(false);\n  const [clients, setClients] = useState(null);\n  const [branches, setBranches] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    axios.post('api/branch', data).then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // when dialog closes\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleEdit = row => {\n    setOpen(true); // reset(row);\n\n    setValue('address', row.address);\n  };\n\n  const getAllBranches = () => {\n    axios.get('api/branch').then(({\n      data\n    }) => {\n      setBranches(data);\n      console.log(data);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      onClick: () => setOpen(true),\n      children: \"Add Branch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Add New Branch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"label\",\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(\"client_id\", {\n              required: \"Client is required!\"\n            }),\n            labelId: \"label\",\n            id: \"select\",\n            fullWidth: true,\n            variant: \"outlined\",\n            children: clients && (clients === null || clients === void 0 ? void 0 : clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: [\" \", client.company_name, \" \"]\n            }, client._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"address\", {\n              required: \"Address is requied!\"\n            }),\n            autoFocus: true,\n            variant: \"outlined\",\n            margin: \"normal\",\n            id: \"address\",\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setOpen(false);\n              reset({});\n            },\n            color: \"primary\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: branches && (branches === null || branches === void 0 ? void 0 : branches.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: row.client_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: row.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(PanTool, {\n                fontSize: \"small\",\n                onClick: () => handleEdit(row)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Delete, {\n                fontSize: \"medium\",\n                onClick: () => {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, row._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Branch, \"Y8urNMMc97bZcc0an4MRi2ctc8I=\", false, function () {\n  return [useForm];\n});\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","MenuItem","Paper","Select","Table","TableBody","TableContainer","TableHead","TableRow","TextField","useEffect","useState","useForm","axios","StyledTableCell","PanTool","Delete","Branch","get","then","data","console","log","setClients","getAllBranches","open","setOpen","clients","branches","setBranches","register","handleSubmit","reset","setValue","formState","errors","onSubmit","post","response","catch","err","handleClose","handleEdit","row","address","required","map","client","_id","company_name","marginTop","client_id"],"mappings":"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","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Paper, Select, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport { useSnackbar } from 'notistack';\n// icons\nimport { PanTool, Delete } from '@material-ui/icons'\n\ninterface ClientType{\n    _id?:string,\n    company_name:string,\n    address?:string,\n    client_id?:string,\n}\n\nconst Branch = () => {\n\n    useEffect(() => {\n        axios.get('api/client/name')\n            .then(({data}) => {console.log(data);setClients(data)});\n        getAllBranches();\n    },[]);\n\n    const [open, setOpen] = useState<boolean>(false);\n    const [clients , setClients] = useState<ClientType[]>(null);\n    const [branches , setBranches] = useState<ClientType[]>(null);\n\n    const { register, handleSubmit, reset, setValue, formState: { errors } } = useForm();\n    \n    const onSubmit = (data:ClientType) => {\n        console.log(data);\n        axios.post('api/branch',data)\n            .then((response) => {console.log(response)})\n            .catch((err) => {console.log(err)});\n    }\n\n    // when dialog closes\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleEdit = (row:ClientType) => { \n        setOpen(true);\n        // reset(row);\n        setValue('address',row.address);\n    }\n\n    const getAllBranches = () => { \n        axios.get('api/branch')\n            .then(({data}) => {setBranches(data); console.log(data)})\n            .catch((err) => console.log(err));\n    }\n\n    return (\n        \n        <Box m={5}>\n            \n            <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Add Branch</Button>\n\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add New Branch</DialogTitle>\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n\n                        <InputLabel id=\"label\" >Client</InputLabel>\n                        <Select {...register(\"client_id\",{required:\"Client is required!\"})} labelId=\"label\" id=\"select\" fullWidth variant=\"outlined\">\n                            {clients && clients?.map(client => (\n                                <MenuItem key={client._id} value={client._id}> {client.company_name} </MenuItem>\n                            ))}\n                        </Select>\n\n                        <TextField {...register(\"address\", { required: \"Address is requied!\" })}\n                            autoFocus variant=\"outlined\" margin=\"normal\" id=\"address\" label=\"Address\" type=\"text\" fullWidth \n                        />\n                    \n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button color=\"primary\" type=\"submit\">\n                            Save\n                        </Button>\n                        <Button onClick={() => {setOpen(false);reset({});}} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n\n\n            <TableContainer component={Paper} style={{ marginTop: '20px' }}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align=\"left\">Company Name</StyledTableCell>\n                            <StyledTableCell align=\"left\">Address</StyledTableCell>\n                            <StyledTableCell align=\"left\">Actions</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {branches && branches?.map((row) => (\n                            <TableRow key={row._id}>\n                                <StyledTableCell align=\"left\">{row.client_id}</StyledTableCell>\n                                <StyledTableCell align=\"left\">{row.address}</StyledTableCell>\n                              \n\n                                <StyledTableCell align=\"left\">\n                                    <PanTool fontSize=\"small\" onClick={() => handleEdit(row)} />\n                                    <Delete fontSize=\"medium\" onClick={() => {}} />\n                                </StyledTableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n        </Box>\n    )\n}\n\nexport default Branch\n"]},"metadata":{},"sourceType":"module"}