{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, Paper, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\"; // library\n\nimport useSWR from \"swr\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useSnackbar } from \"notistack\"; // utils\n\nimport fetcher from \"../../../utils/fetcher\"; // icon\n\nimport { Delete, PanTool } from \"@material-ui/icons\"; // styles\n\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport useStyles from \"../Partials/CommonStyles\";\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactPerson = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n  const CLIENT_API = \"api/client/name\";\n  const CONTACT_API = \"api/person\"; // state\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [hasBranch, setHasBranch] = useState(false);\n  const [branch, setBranch] = useState(null);\n  const [selectClient, setSelectClient] = useState(null);\n  const [selectBranch, setSelectBranch] = useState(null);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteId, setDeleteId] = useState(null); // react hook form\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm(); // swr api fetch\n\n  const {\n    data: clients,\n    error: clientsError\n  } = useSWR(CLIENT_API, fetcher);\n  const {\n    data: contacts,\n    error: contactsError\n  } = useSWR(CONTACT_API, fetcher);\n  if (clientsError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 28\n  }, this);\n  if (!clients) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 24\n  }, this);\n  if (contactsError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 29\n  }, this);\n  if (!contacts) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 25\n  }, this);\n\n  const onSubmit = data => {\n    console.log(data);\n    axios.post(CONTACT_API, data).then(response => {\n      console.log(response);\n    }).catch(error => console.log(error));\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleSelectChange = event => {\n    const id = event.target.value;\n    getBranchOfClient(id);\n  };\n\n  const getBranchOfClient = id => {\n    axios.get(\"/api/branch/client/\" + id).then(({\n      data\n    }) => {\n      console.log(data);\n\n      if (data.length) {\n        setHasBranch(true);\n        setBranch(data);\n      } else {\n        setHasBranch(false);\n        setBranch(null);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleEdit = row => {\n    setHasBranch(false);\n    setIsEditMode(true);\n    console.log(row);\n\n    if (row.branch_id) {\n      getBranchOfClient(row.client_id._id);\n      setSelectBranch(row.branch_id._id);\n    }\n\n    reset(row);\n    setOpenDialog(true);\n    setSelectClient(row.client_id._id);\n  };\n\n  const handleAddContact = () => {\n    reset({});\n    setOpenDialog(true);\n    setIsEditMode(false);\n    setSelectClient(null);\n    setSelectBranch(null);\n  };\n\n  const handleDelete = () => {\n    console.log(\"delete\");\n    setOpenDeleteDialog(false);\n    axios.delete(CONTACT_API + deleteId).then().catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleAddContact,\n      children: \"Add Contact Person\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: [isEditMode ? \"Update\" : \"Add\", \" Contact Person\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            ...register(\"client_id\"),\n            onChange: handleSelectChange,\n            label: \"Client\",\n            fullWidth: true,\n            defaultValue: selectClient,\n            variant: \"outlined\",\n            children: clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: client.company_name\n            }, client._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), hasBranch && /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            ...register(\"branch_id\"),\n            label: \"Branch\",\n            fullWidth: true,\n            variant: \"outlined\",\n            style: {\n              marginTop: \"20px\"\n            },\n            defaultValue: selectBranch,\n            children: branch === null || branch === void 0 ? void 0 : branch.map(row => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: row._id,\n              children: row.address\n            }, row._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"name\"),\n            label: \"Name\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"email\"),\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"address\"),\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"phone\"),\n            label: \"Phone Number\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: isEditMode ? \"Update\" : \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Branch Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: contacts === null || contacts === void 0 ? void 0 : contacts.map(row => {\n            var _row$branch_id;\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.client_id.company_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: (_row$branch_id = row.branch_id) === null || _row$branch_id === void 0 ? void 0 : _row$branch_id.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                className: classes.icon,\n                children: [/*#__PURE__*/_jsxDEV(PanTool, {\n                  fontSize: \"small\",\n                  onClick: () => handleEdit(row)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Delete, {\n                  fontSize: \"medium\",\n                  onClick: () => {\n                    setDeleteId(row._id);\n                    setOpenDeleteDialog(true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDelete, {\n      openDeleteDialog: openDeleteDialog,\n      setOpenDeleteDialog: setOpenDeleteDialog,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactPerson, \"O6ZwKWJ2DlatyGal85CMLDU7cO4=\", false, function () {\n  return [useStyles, useSnackbar, useForm, useSWR, useSWR];\n});\n\n_c = ContactPerson;\nexport default ContactPerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactPerson\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","MenuItem","Paper","Table","TableBody","TableContainer","TableHead","TableRow","TextField","useState","useSWR","axios","useForm","useSnackbar","fetcher","Delete","PanTool","StyledTableCell","useStyles","ConfirmDelete","ContactPerson","classes","enqueueSnackbar","closeSnackbar","CLIENT_API","CONTACT_API","openDialog","setOpenDialog","isEditMode","setIsEditMode","hasBranch","setHasBranch","branch","setBranch","selectClient","setSelectClient","selectBranch","setSelectBranch","openDeleteDialog","setOpenDeleteDialog","deleteId","setDeleteId","register","handleSubmit","reset","formState","errors","data","clients","error","clientsError","contacts","contactsError","onSubmit","console","log","post","then","response","catch","handleClose","handleSelectChange","event","id","target","value","getBranchOfClient","get","length","handleEdit","row","branch_id","client_id","_id","handleAddContact","handleDelete","delete","err","map","client","company_name","marginTop","address","name","email","phone","icon"],"mappings":";;;AAAA,SACEA,GADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,WANF,EAOEC,QAPF,EAQEC,KARF,EASEC,KATF,EAUEC,SAVF,EAWEC,cAXF,EAYEC,SAZF,EAaEC,QAbF,EAcEC,SAdF,QAeO,mBAfP;AAgBA,SAAoBC,QAApB,QAAoC,OAApC,C,CACA;;AACA,OAAOC,MAAP,MAAqC,KAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,WAA5B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CACA;;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,oBAAhC,C,CACA;;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;;AAiCA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM;AAAEI,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAqCV,WAAW,EAAtD;AAEA,QAAMW,UAAU,GAAG,iBAAnB;AACA,QAAMC,WAAW,GAAG,YAApB,CAL0B,CAO1B;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAU,KAAV,CAA5C;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAU,KAAV,CAA5C;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACuB,MAAD,EAASC,SAAT,IAAsBxB,QAAQ,CAAe,IAAf,CAApC;AACA,QAAM,CAACyB,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAS,IAAT,CAAhD;AACA,QAAM,CAAC2B,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,CAAS,IAAT,CAAhD;AACA,QAAM,CAAC6B,gBAAD,EAAmBC,mBAAnB,IAA0C9B,QAAQ,CAAU,KAAV,CAAxD;AACA,QAAM,CAAC+B,QAAD,EAAWC,WAAX,IAA0BhC,QAAQ,CAAS,IAAT,CAAxC,CAf0B,CAgB1B;;AACA,QAAM;AACJiC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFlC,OAAO,EALX,CAjB0B,CAwB1B;;AACA,QAAM;AAAEmC,IAAAA,IAAI,EAAEC,OAAR;AAAiBC,IAAAA,KAAK,EAAEC;AAAxB,MAAyCxC,MAAM,CAACc,UAAD,EAAaV,OAAb,CAArD;AACA,QAAM;AAAEiC,IAAAA,IAAI,EAAEI,QAAR;AAAkBF,IAAAA,KAAK,EAAEG;AAAzB,MAA2C1C,MAAM,CAACe,WAAD,EAAcX,OAAd,CAAvD;AACA,MAAIoC,YAAJ,EAAkB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAClB,MAAI,CAACF,OAAL,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,MAAII,aAAJ,EAAmB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACnB,MAAI,CAACD,QAAL,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEf,QAAME,QAAQ,GAAIN,IAAD,IAAU;AACzBO,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACApC,IAAAA,KAAK,CACF6C,IADH,CACQ/B,WADR,EACqBsB,IADrB,EAEGU,IAFH,CAESC,QAAD,IAAc;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACD,KAJH,EAKGC,KALH,CAKUV,KAAD,IAAWK,OAAO,CAACC,GAAR,CAAYN,KAAZ,CALpB;AAMD,GARD;;AAUA,QAAMW,WAAW,GAAG,MAAM;AACxBjC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,QAAMkC,kBAAkB,GAAIC,KAAD,IAAgB;AACzC,UAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAxB;AACAC,IAAAA,iBAAiB,CAACH,EAAD,CAAjB;AACD,GAHD;;AAKA,QAAMG,iBAAiB,GAAIH,EAAD,IAAgB;AACxCpD,IAAAA,KAAK,CACFwD,GADH,CACO,wBAAwBJ,EAD/B,EAEGN,IAFH,CAEQ,CAAC;AAAEV,MAAAA;AAAF,KAAD,KAAc;AAClBO,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AACA,UAAIA,IAAI,CAACqB,MAAT,EAAiB;AACfrC,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,SAAS,CAACc,IAAD,CAAT;AACD,OAHD,MAGO;AACLhB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,KAXH,EAYG0B,KAZH,CAYUV,KAAD,IAAW;AAChBK,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACD,KAdH;AAeD,GAhBD;;AAkBA,QAAMoB,UAAU,GAAIC,GAAD,IAAgC;AACjDvC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAyB,IAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;;AACA,QAAIA,GAAG,CAACC,SAAR,EAAmB;AACjBL,MAAAA,iBAAiB,CAACI,GAAG,CAACE,SAAJ,CAAcC,GAAf,CAAjB;AACApC,MAAAA,eAAe,CAACiC,GAAG,CAACC,SAAJ,CAAcE,GAAf,CAAf;AACD;;AACD7B,IAAAA,KAAK,CAAC0B,GAAD,CAAL;AACA3C,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAQ,IAAAA,eAAe,CAACmC,GAAG,CAACE,SAAJ,CAAcC,GAAf,CAAf;AACD,GAXD;;AAaA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B9B,IAAAA,KAAK,CAAC,EAAD,CAAL;AACAjB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAM,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAND;;AAQA,QAAMsC,YAAY,GAAG,MAAM;AACzBrB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAhB,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA5B,IAAAA,KAAK,CACFiE,MADH,CACUnD,WAAW,GAAGe,QADxB,EAEGiB,IAFH,GAGGE,KAHH,CAGUkB,GAAD,IAASvB,OAAO,CAACL,KAAR,CAAc4B,GAAd,CAHlB;AAID,GAPD;;AASA,sBACE,QAAC,GAAD;AAAK,IAAA,CAAC,EAAE,CAAR;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAA2C,MAAA,OAAO,EAAEH,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEhD,UADR;AAEE,MAAA,OAAO,EAAEkC,WAFX;AAGE,yBAAgB,mBAHlB;AAAA,8BAKE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,mBAAhB;AAAA,mBACGhC,UAAU,GAAG,QAAH,GAAc,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAQE;AAAM,QAAA,QAAQ,EAAEe,YAAY,CAACU,QAAD,CAA5B;AAAA,gCACE,QAAC,aAAD;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,MAAM,MADR;AAAA,eAEMX,QAAQ,CAAC,WAAD,CAFd;AAGE,YAAA,QAAQ,EAAEmB,kBAHZ;AAIE,YAAA,KAAK,EAAC,QAJR;AAKE,YAAA,SAAS,MALX;AAME,YAAA,YAAY,EAAE3B,YANhB;AAOE,YAAA,OAAO,EAAC,UAPV;AAAA,sBASGc,OAAO,CAAC8B,GAAR,CAAaC,MAAD,iBACX,QAAC,QAAD;AAA2B,cAAA,KAAK,EAAEA,MAAM,CAACN,GAAzC;AAAA,wBACGM,MAAM,CAACC;AADV,eAAeD,MAAM,CAACN,GAAtB;AAAA;AAAA;AAAA;AAAA,oBADD;AATH;AAAA;AAAA;AAAA;AAAA,kBADF,EAiBG3C,SAAS,iBACR,QAAC,SAAD;AACE,YAAA,MAAM,MADR;AAAA,eAEMY,QAAQ,CAAC,WAAD,CAFd;AAGE,YAAA,KAAK,EAAC,QAHR;AAIE,YAAA,SAAS,MAJX;AAKE,YAAA,OAAO,EAAC,UALV;AAME,YAAA,KAAK,EAAE;AAAEuC,cAAAA,SAAS,EAAE;AAAb,aANT;AAOE,YAAA,YAAY,EAAE7C,YAPhB;AAAA,sBASGJ,MATH,aASGA,MATH,uBASGA,MAAM,CAAE8C,GAAR,CAAaR,GAAD,iBACX,QAAC,QAAD;AAAwB,cAAA,KAAK,EAAEA,GAAG,CAACG,GAAnC;AAAA,wBACGH,GAAG,CAACY;AADP,eAAeZ,GAAG,CAACG,GAAnB;AAAA;AAAA;AAAA;AAAA,oBADD;AATH;AAAA;AAAA;AAAA;AAAA,kBAlBJ,eAmCE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,MAAM,EAAC,QAFT;AAAA,eAGM/B,QAAQ,CAAC,MAAD,CAHd;AAIE,YAAA,KAAK,EAAC,MAJR;AAKE,YAAA,IAAI,EAAC,MALP;AAME,YAAA,SAAS;AANX;AAAA;AAAA;AAAA;AAAA,kBAnCF,eA2CE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,MAAM,EAAC,QAFT;AAAA,eAGMA,QAAQ,CAAC,OAAD,CAHd;AAIE,YAAA,KAAK,EAAC,eAJR;AAKE,YAAA,IAAI,EAAC,OALP;AAME,YAAA,SAAS;AANX;AAAA;AAAA;AAAA;AAAA,kBA3CF,eAmDE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,MAAM,EAAC,QAFT;AAAA,eAGMA,QAAQ,CAAC,SAAD,CAHd;AAIE,YAAA,KAAK,EAAC,SAJR;AAKE,YAAA,IAAI,EAAC,MALP;AAME,YAAA,SAAS;AANX;AAAA;AAAA;AAAA;AAAA,kBAnDF,eA2DE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,MAAM,EAAC,QAFT;AAAA,eAGMA,QAAQ,CAAC,OAAD,CAHd;AAIE,YAAA,KAAK,EAAC,cAJR;AAKE,YAAA,IAAI,EAAC,MALP;AAME,YAAA,SAAS;AANX;AAAA;AAAA;AAAA;AAAA,kBA3DF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAsEE,QAAC,aAAD;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAEkB,WADX;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,OAAO,EAAC,WAHV;AAIE,YAAA,IAAI,EAAC,QAJP;AAAA,sBAMGhC,UAAU,GAAG,QAAH,GAAc;AAN3B;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEgC,WAAjB;AAA8B,YAAA,KAAK,EAAC,WAApC;AAAgD,YAAA,OAAO,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtEF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAmGE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAE1D,KAA3B;AAAkC,MAAA,KAAK,EAAE;AAAE+E,QAAAA,SAAS,EAAE;AAAb,OAAzC;AAAA,6BACE,QAAC,KAAD;AAAO,sBAAW,cAAlB;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAA,oCACE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,SAAD;AAAA,oBACG9B,QADH,aACGA,QADH,uBACGA,QAAQ,CAAE2B,GAAV,CAAeR,GAAD;AAAA;;AAAA,gCACb,QAAC,QAAD;AAAA,sCACE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BACGA,GAAG,CAACE,SAAJ,CAAcQ;AADjB;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,4CACGV,GAAG,CAACC,SADP,mDACG,eAAeW;AADlB;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+BZ,GAAG,CAACa;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+Bb,GAAG,CAACc;AAAnC;AAAA;AAAA;AAAA;AAAA,sBARF,eASE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+Bd,GAAG,CAACe;AAAnC;AAAA;AAAA;AAAA;AAAA,sBATF,eAUE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+Bf,GAAG,CAACY;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAVF,eAYE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAA8B,gBAAA,SAAS,EAAE7D,OAAO,CAACiE,IAAjD;AAAA,wCACE,QAAC,OAAD;AAAS,kBAAA,QAAQ,EAAC,OAAlB;AAA0B,kBAAA,OAAO,EAAE,MAAMjB,UAAU,CAACC,GAAD;AAAnD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,MAAD;AACE,kBAAA,QAAQ,EAAC,QADX;AAEE,kBAAA,OAAO,EAAE,MAAM;AACb7B,oBAAAA,WAAW,CAAC6B,GAAG,CAACG,GAAL,CAAX;AACAlC,oBAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AALH;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA,eAAe+B,GAAG,CAACG,GAAnB;AAAA;AAAA;AAAA;AAAA,oBADa;AAAA,WAAd;AADH;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnGF,eA8IE,QAAC,aAAD;AACE,MAAA,gBAAgB,EAAEnC,gBADpB;AAEE,MAAA,mBAAmB,EAAEC,mBAFvB;AAGE,MAAA,YAAY,EAAEoC;AAHhB;AAAA;AAAA;AAAA;AAAA,YA9IF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsJD,CAzPD;;GAAMvD,a;UACYF,S,EAC2BL,W,EAoBvCD,O,EAG2CF,M,EACEA,M;;;KA1B7CU,a;AA2PN,eAAeA,aAAf","sourcesContent":["import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  MenuItem,\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\n// library\nimport useSWR, { useSWRConfig } from \"swr\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useSnackbar } from \"notistack\";\n// utils\nimport fetcher from \"../../../utils/fetcher\";\n// icon\nimport { Delete, PanTool } from \"@material-ui/icons\";\n// styles\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport useStyles from \"../Partials/CommonStyles\";\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\n\ninterface BranchType {\n  _id: string;\n  address: string;\n  client_id: string;\n}\n\ninterface ContactPersonType {\n  client_id: string;\n  branch_id?: string;\n  name: string;\n  email: string;\n  phone: string;\n  address: string;\n}\ninterface EditContactPersonType {\n  client_id: ClientType;\n  branch_id?: EditBranchType;\n  name: string;\n  email: string;\n  phone: string;\n  address: string;\n}\ninterface ClientType {\n  _id: string;\n  company_name: string;\n}\ninterface EditBranchType {\n  _id: string;\n  address: string;\n}\n\nconst ContactPerson = () => {\n  const classes = useStyles();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const CLIENT_API = \"api/client/name\";\n  const CONTACT_API = \"api/person\";\n\n  // state\n  const [openDialog, setOpenDialog] = useState<boolean>(false);\n  const [isEditMode, setIsEditMode] = useState<boolean>(false);\n  const [hasBranch, setHasBranch] = useState<boolean>(false);\n  const [branch, setBranch] = useState<BranchType[]>(null);\n  const [selectClient, setSelectClient] = useState<string>(null);\n  const [selectBranch, setSelectBranch] = useState<string>(null);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false);\n  const [deleteId, setDeleteId] = useState<string>(null);\n  // react hook form\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<ContactPersonType>();\n\n  // swr api fetch\n  const { data: clients, error: clientsError } = useSWR(CLIENT_API, fetcher);\n  const { data: contacts, error: contactsError } = useSWR(CONTACT_API, fetcher);\n  if (clientsError) return <div>failed to load</div>;\n  if (!clients) return <div>loading...</div>;\n  if (contactsError) return <div>failed to load</div>;\n  if (!contacts) return <div>loading...</div>;\n\n  const onSubmit = (data) => {\n    console.log(data);\n    axios\n      .post(CONTACT_API, data)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleSelectChange = (event: any) => {\n    const id = event.target.value;\n    getBranchOfClient(id);\n  };\n\n  const getBranchOfClient = (id: string) => {\n    axios\n      .get(\"/api/branch/client/\" + id)\n      .then(({ data }) => {\n        console.log(data);\n        if (data.length) {\n          setHasBranch(true);\n          setBranch(data);\n        } else {\n          setHasBranch(false);\n          setBranch(null);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleEdit = (row: EditContactPersonType) => {\n    setHasBranch(false);\n    setIsEditMode(true);\n    console.log(row);\n    if (row.branch_id) {\n      getBranchOfClient(row.client_id._id);\n      setSelectBranch(row.branch_id._id);\n    }\n    reset(row);\n    setOpenDialog(true);\n    setSelectClient(row.client_id._id);\n  };\n\n  const handleAddContact = () => {\n    reset({});\n    setOpenDialog(true);\n    setIsEditMode(false);\n    setSelectClient(null);\n    setSelectBranch(null);\n  };\n\n  const handleDelete = () => {\n    console.log(\"delete\");\n    setOpenDeleteDialog(false);\n    axios\n      .delete(CONTACT_API + deleteId)\n      .then()\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <Box m={5}>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleAddContact}>\n        Add Contact Person\n      </Button>\n\n      <Dialog\n        open={openDialog}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {isEditMode ? \"Update\" : \"Add\"} Contact Person\n        </DialogTitle>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogContent>\n            <TextField\n              select\n              {...register(\"client_id\")}\n              onChange={handleSelectChange}\n              label=\"Client\"\n              fullWidth\n              defaultValue={selectClient}\n              variant=\"outlined\"\n            >\n              {clients.map((client: ClientType) => (\n                <MenuItem key={client._id} value={client._id}>\n                  {client.company_name}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            {hasBranch && (\n              <TextField\n                select\n                {...register(\"branch_id\")}\n                label=\"Branch\"\n                fullWidth\n                variant=\"outlined\"\n                style={{ marginTop: \"20px\" }}\n                defaultValue={selectBranch}\n              >\n                {branch?.map((row) => (\n                  <MenuItem key={row._id} value={row._id}>\n                    {row.address}\n                  </MenuItem>\n                ))}\n              </TextField>\n            )}\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"name\")}\n              label=\"Name\"\n              type=\"text\"\n              fullWidth\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"email\")}\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"address\")}\n              label=\"Address\"\n              type=\"text\"\n              fullWidth\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"phone\")}\n              label=\"Phone Number\"\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              onClick={handleClose}\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n            >\n              {isEditMode ? \"Update\" : \"Save\"}\n            </Button>\n            <Button onClick={handleClose} color=\"secondary\" variant=\"contained\">\n              Close\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n\n      <TableContainer component={Paper} style={{ marginTop: \"20px\" }}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"left\">Company Name</StyledTableCell>\n              <StyledTableCell align=\"left\">Branch Address</StyledTableCell>\n              <StyledTableCell align=\"left\">Name</StyledTableCell>\n              <StyledTableCell align=\"left\">Email</StyledTableCell>\n              <StyledTableCell align=\"left\">Phone</StyledTableCell>\n              <StyledTableCell align=\"left\">Address</StyledTableCell>\n              <StyledTableCell align=\"left\">Actions</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {contacts?.map((row) => (\n              <TableRow key={row._id}>\n                <StyledTableCell align=\"left\">\n                  {row.client_id.company_name}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {row.branch_id?.address}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">{row.name}</StyledTableCell>\n                <StyledTableCell align=\"left\">{row.email}</StyledTableCell>\n                <StyledTableCell align=\"left\">{row.phone}</StyledTableCell>\n                <StyledTableCell align=\"left\">{row.address}</StyledTableCell>\n\n                <StyledTableCell align=\"left\" className={classes.icon}>\n                  <PanTool fontSize=\"small\" onClick={() => handleEdit(row)} />\n                  <Delete\n                    fontSize=\"medium\"\n                    onClick={() => {\n                      setDeleteId(row._id);\n                      setOpenDeleteDialog(true);\n                    }}\n                  />\n                </StyledTableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <ConfirmDelete\n        openDeleteDialog={openDeleteDialog}\n        setOpenDeleteDialog={setOpenDeleteDialog}\n        handleDelete={handleDelete}\n      />\n    </Box>\n  );\n};\n\nexport default ContactPerson;\n"]},"metadata":{},"sourceType":"module"}