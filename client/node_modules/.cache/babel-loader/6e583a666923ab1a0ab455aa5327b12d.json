{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/pages/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, TextField, Button, Typography, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport useStyles from './RegisterStyles';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _errors$name, _errors$name2, _errors$email, _errors$email2, _errors$password, _errors$password2, _errors$password3, _errors$confirmPasswo, _errors$confirmPasswo2, _errors$confirmPasswo3, _errors$confirmPasswo4;\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [password, setPassword] = useState('');\n  const history = useHistory(); // react form hook\n\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    33;\n\n    if (data.password !== password) {\n      setError(\"confirmPassword\", {\n        type: \"manual\",\n        message: \"Confirm password didn't match!\"\n      });\n    } else {\n      const newData = axios.post('auth/register', data);\n      console.log(newData);\n      history.goBack();\n    }\n  }; // toggle password visibility\n\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  }; // set confirm password to react state\n\n\n  const checkPassword = e => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <form onSubmit={handleSubmit(onSubmit)}>\n    _jsxDEV(Box, {\n      className: classes.box,\n      p: 5,\n      width: \"25%\",\n      component: \"form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        variant: \"h4\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: errors.name && true,\n        label: \"Full Name\",\n        variant: \"outlined\",\n        className: classes.input,\n        ...register(\"name\", {\n          required: true,\n          maxLength: 40,\n          minLength: 5\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        variant: \"caption\",\n        className: classes.error,\n        children: [((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === 'required' && \"Full name is required\", ((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === 'minLength' && \"Full name should not be less than 5 characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: !!errors.email,\n        ...register(\"email\", {\n          required: true,\n          maxLength: 30\n        }),\n        label: \"Email\",\n        variant: \"outlined\",\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        variant: \"caption\",\n        className: classes.error,\n        children: [((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && \"Email is required\", ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'minLength' && \"Email shouldnot be greater than 30\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: !!errors.password,\n        ...register(\"password\", {\n          required: true,\n          minLength: {\n            value: 5,\n            message: 'Password should be longer than 5'\n          },\n          maxLength: {\n            value: 20,\n            message: 'Password Too Big'\n          }\n        }),\n        label: \"Password\",\n        variant: \"outlined\",\n        className: classes.input,\n        type: showPassword ? 'text' : 'password',\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleClickShowPassword,\n              \"aria-label\": \"toggle password visibility\",\n              children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 53\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        variant: \"caption\",\n        className: classes.error,\n        children: [((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === 'required' && \"Password is required\", ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === 'minLength' && errors.password.message, ((_errors$password3 = errors.password) === null || _errors$password3 === void 0 ? void 0 : _errors$password3.type) === 'maxLength' && errors.password.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: !!errors.confirmPassword,\n        ...register(\"confirmPassword\", {\n          required: true,\n          maxLength: 30,\n          minLength: 5\n        }),\n        label: \"Confirm Password\",\n        variant: \"outlined\",\n        className: classes.input,\n        type: showPassword ? 'text' : 'password',\n        onChange: e => checkPassword(e),\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        variant: \"caption\",\n        className: classes.error,\n        children: [((_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.type) === 'required' && \"Confirm Password is required\", ((_errors$confirmPasswo2 = errors.confirmPassword) === null || _errors$confirmPasswo2 === void 0 ? void 0 : _errors$confirmPasswo2.type) === 'minLength' && \"Confirm password should be greater than 5\", ((_errors$confirmPasswo3 = errors.confirmPassword) === null || _errors$confirmPasswo3 === void 0 ? void 0 : _errors$confirmPasswo3.type) === 'maxLength' && \"Confirm password shouldnot exceed length 20\", ((_errors$confirmPasswo4 = errors.confirmPassword) === null || _errors$confirmPasswo4 === void 0 ? void 0 : _errors$confirmPasswo4.type) === 'manual' && errors.confirmPassword.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: classes.title,\n        size: \"large\",\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginTop: '20px'\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"Already Registered \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  );\n};\n\n_s(Login, \"jXTb3Z7F6nv7dPOfIL+Dq+ucJ7U=\", false, function () {\n  return [useStyles, useHistory, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/pages/Register.tsx"],"names":["Box","TextField","Button","Typography","InputAdornment","IconButton","Visibility","VisibilityOff","useState","Link","useHistory","useForm","useStyles","axios","Login","classes","showPassword","setShowPassword","password","setPassword","history","register","handleSubmit","setError","formState","errors","onSubmit","data","console","log","type","message","newData","post","goBack","handleClickShowPassword","checkPassword","e","target","value","box","title","name","input","required","maxLength","minLength","error","email","endAdornment","confirmPassword","marginTop"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,UAAjC,EAA6CC,cAA7C,EAA6DC,UAA7D,QAA+E,mBAA/E;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,oBAA1C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AASA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAEhB,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAU,KAAV,CAAhD;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAS,EAAT,CAAxC;AAEA,QAAMY,OAAO,GAAGV,UAAU,EAA1B,CANgB,CAQhB;;AACA,QAAM;AAAEW,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,QAA1B;AAAoCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAA/C,MAA8Dd,OAAO,EAA3E;;AAEA,QAAMe,QAAQ,GAAIC,IAAD,IAAgB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAAkB;;AAElB,QAAGA,IAAI,CAACT,QAAL,KAAkBA,QAArB,EAA8B;AAC1BK,MAAAA,QAAQ,CAAC,iBAAD,EAAoB;AACxBO,QAAAA,IAAI,EAAE,QADkB;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAApB,CAAR;AAIH,KALD,MAKK;AACD,YAAMC,OAAO,GAAGnB,KAAK,CAACoB,IAAN,CAAW,eAAX,EAA2BN,IAA3B,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACAZ,MAAAA,OAAO,CAACc,MAAR;AAEH;AAGJ,GAhBD,CAXgB,CA6BhB;;;AACA,QAAMC,uBAAuB,GAAG,MAAM;AAClClB,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH,GAFD,CA9BgB,CAkChB;;;AACA,QAAMoB,aAAa,GAAIC,CAAD,IAA+C;AACjElB,IAAAA,WAAW,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIA;AAAA;AACQ;AACA,YAAC,GAAD;AAAK,MAAA,SAAS,EAAExB,OAAO,CAACyB,GAAxB;AAA6B,MAAA,CAAC,EAAE,CAAhC;AAAmC,MAAA,KAAK,EAAC,KAAzC;AAA+C,MAAA,SAAS,EAAC,MAAzD;AAAgE,MAAA,QAAQ,EAAElB,YAAY,CAACI,QAAD,CAAtF;AAAA,8BAEI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEX,OAAO,CAAC0B,KAA/B;AAAsC,QAAA,OAAO,EAAC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEhB,MAAM,CAACiB,IAAP,IAAe,IAAjC;AACG,QAAA,KAAK,EAAC,WADT;AACqB,QAAA,OAAO,EAAC,UAD7B;AACwC,QAAA,SAAS,EAAE3B,OAAO,CAAC4B,KAD3D;AAAA,WAEQtB,QAAQ,CAAC,MAAD,EAAS;AAAEuB,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAC,EAA5B;AAA+BC,UAAAA,SAAS,EAAC;AAAzC,SAAT;AAFhB;AAAA;AAAA;AAAA;AAAA,cAJJ,eASI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,OAAO,EAAC,SAArC;AAA+C,QAAA,SAAS,EAAE/B,OAAO,CAACgC,KAAlE;AAAA,mBACK,iBAAAtB,MAAM,CAACiB,IAAP,8DAAaZ,IAAb,MAAsB,UAAtB,IAAoC,uBADzC,EAEK,kBAAAL,MAAM,CAACiB,IAAP,gEAAaZ,IAAb,MAAsB,WAAtB,IAAqC,gDAF1C;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAeI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,CAAC,CAACL,MAAM,CAACuB,KAA3B;AAAA,WAAsC3B,QAAQ,CAAC,OAAD,EAAS;AAACuB,UAAAA,QAAQ,EAAC,IAAV;AAAgBC,UAAAA,SAAS,EAAC;AAA1B,SAAT,CAA9C;AAAuF,QAAA,KAAK,EAAC,OAA7F;AAAqG,QAAA,OAAO,EAAC,UAA7G;AAAwH,QAAA,SAAS,EAAE9B,OAAO,CAAC4B;AAA3I;AAAA;AAAA;AAAA;AAAA,cAfJ,eAiBI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,OAAO,EAAC,SAArC;AAA+C,QAAA,SAAS,EAAE5B,OAAO,CAACgC,KAAlE;AAAA,mBACK,kBAAAtB,MAAM,CAACuB,KAAP,gEAAclB,IAAd,MAAuB,UAAvB,IAAqC,mBAD1C,EAEK,mBAAAL,MAAM,CAACuB,KAAP,kEAAclB,IAAd,MAAuB,WAAvB,IAAsC,oCAF3C;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAuBI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,CAAC,CAACL,MAAM,CAACP,QAA3B;AAAA,WACQG,QAAQ,CAAC,UAAD,EAAa;AAACuB,UAAAA,QAAQ,EAAC,IAAV;AAAgBE,UAAAA,SAAS,EAAE;AAAEP,YAAAA,KAAK,EAAE,CAAT;AAAYR,YAAAA,OAAO,EAAE;AAArB,WAA3B;AAAsFc,UAAAA,SAAS,EAAE;AAAEN,YAAAA,KAAK,EAAE,EAAT;AAAYR,YAAAA,OAAO,EAAC;AAApB;AAAjG,SAAb,CADhB;AAEO,QAAA,KAAK,EAAC,UAFb;AAEwB,QAAA,OAAO,EAAC,UAFhC;AAE2C,QAAA,SAAS,EAAEhB,OAAO,CAAC4B,KAF9D;AAGQ,QAAA,IAAI,EAAE3B,YAAY,GAAG,MAAH,GAAY,UAHtC;AAIQ,QAAA,UAAU,EAAE;AACRiC,UAAAA,YAAY,eACZ,QAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,KAAzB;AAAA,mCACI,QAAC,UAAD;AACI,cAAA,OAAO,EAAEd,uBADb;AAEI,4BAAW,4BAFf;AAAA,wBAIKnB,YAAY,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,sBAAH,gBAAoB,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAJrC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFQ;AAJpB;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAyCI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,OAAO,EAAC,SAArC;AAA+C,QAAA,SAAS,EAAED,OAAO,CAACgC,KAAlE;AAAA,mBACK,qBAAAtB,MAAM,CAACP,QAAP,sEAAiBY,IAAjB,MAA0B,UAA1B,IAAwC,sBAD7C,EAEK,sBAAAL,MAAM,CAACP,QAAP,wEAAiBY,IAAjB,MAA0B,WAA1B,IAAyCL,MAAM,CAACP,QAAP,CAAgBa,OAF9D,EAGK,sBAAAN,MAAM,CAACP,QAAP,wEAAiBY,IAAjB,MAA0B,WAA1B,IAAyCL,MAAM,CAACP,QAAP,CAAgBa,OAH9D;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCJ,eAiDI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,CAAC,CAACN,MAAM,CAACyB,eAA3B;AAAA,WACQ7B,QAAQ,CAAC,iBAAD,EAAoB;AAAEuB,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAE,EAA7B;AAAiCC,UAAAA,SAAS,EAAE;AAA5C,SAApB,CADhB;AACsF,QAAA,KAAK,EAAC,kBAD5F;AACgH,QAAA,OAAO,EAAC,UADxH;AACmI,QAAA,SAAS,EAAE/B,OAAO,CAAC4B,KADtJ;AAEI,QAAA,IAAI,EAAE3B,YAAY,GAAG,MAAH,GAAY,UAFlC;AAGI,QAAA,QAAQ,EAAGqB,CAAD,IAAOD,aAAa,CAACC,CAAD,CAHlC;AAII,QAAA,UAAU,EAAE;AACRY,UAAAA,YAAY,eACR,QAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,KAAzB;AAAA,mCACA,QAAC,UAAD;AACI,4BAAW,4BADf;AAEI,cAAA,OAAO,EAAEd,uBAFb;AAAA,wBAIKnB,YAAY,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,sBAAH,gBAAoB,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAJrC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFI;AAJhB;AAAA;AAAA;AAAA;AAAA,cAjDJ,eAmEI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,OAAO,EAAC,SAArC;AAA+C,QAAA,SAAS,EAAED,OAAO,CAACgC,KAAlE;AAAA,mBACK,0BAAAtB,MAAM,CAACyB,eAAP,gFAAwBpB,IAAxB,MAAiC,UAAjC,IAA+C,8BADpD,EAEK,2BAAAL,MAAM,CAACyB,eAAP,kFAAwBpB,IAAxB,MAAiC,WAAjC,IAAgD,2CAFrD,EAGK,2BAAAL,MAAM,CAACyB,eAAP,kFAAwBpB,IAAxB,MAAiC,WAAjC,IAAgD,6CAHrD,EAIK,2BAAAL,MAAM,CAACyB,eAAP,kFAAwBpB,IAAxB,MAAiC,QAAjC,IAA6CL,MAAM,CAACyB,eAAP,CAAuBnB,OAJzE;AAAA;AAAA;AAAA;AAAA;AAAA,cAnEJ,eA2EI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAEhB,OAAO,CAAC0B,KAAzC;AAAgD,QAAA,IAAI,EAAC,OAArD;AAA6D,QAAA,OAAO,EAAC,WAArE;AAAiF,QAAA,KAAK,EAAC,SAAvF;AAAiG,QAAA,KAAK,EAAE;AAAEU,UAAAA,SAAS,EAAE;AAAb,SAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3EJ,eA6EI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,uDAA+C,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cA7EJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAmFH,CA1HD;;GAAMrC,K;UAEcF,S,EAIAF,U,EAGoDC,O;;;KATlEG,K;AA4HN,eAAeA,KAAf","sourcesContent":["import { Box, TextField, Button, Typography, InputAdornment, IconButton } from '@material-ui/core'\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport useStyles from './RegisterStyles';\nimport axios from 'axios';\n\ninterface IForm {\n    name: string;\n    email: string;\n    password: string;\n    confirmPassword: string;\n}\n\nconst Login = () => {\n    \n    const classes = useStyles();\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n    const [password, setPassword] = useState<string>('');\n\n    const history = useHistory();\n\n    // react form hook\n    const { register, handleSubmit ,setError, formState: { errors } } = useForm();\n\n    const onSubmit = (data:IForm) => {\n        console.log(data);33\n\n        if(data.password !== password){\n            setError(\"confirmPassword\", {\n                type: \"manual\",\n                message: \"Confirm password didn't match!\",\n            });\n        }else{\n            const newData = axios.post('auth/register',data);\n            console.log(newData);\n            history.goBack();\n\n        }\n\n       \n    }\n   \n    // toggle password visibility\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    // set confirm password to react state\n    const checkPassword = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setPassword(e.target.value);\n    }\n\n    return (\n            // <form onSubmit={handleSubmit(onSubmit)}>\n            <Box className={classes.box} p={5} width=\"25%\" component=\"form\" onSubmit={handleSubmit(onSubmit)}>\n\n                <Typography className={classes.title} variant=\"h4\">Register</Typography>\n\n                <TextField error={errors.name && true} \n                   label=\"Full Name\" variant=\"outlined\" className={classes.input} \n                    {...register(\"name\", { required: true, maxLength:40,minLength:5})}\n                />\n\n                <Typography component=\"span\" variant=\"caption\" className={classes.error}>\n                    {errors.name?.type === 'required' && \"Full name is required\"}\n                    {errors.name?.type === 'minLength' && \"Full name should not be less than 5 characters\"}\n                </Typography>\n\n\n                <TextField error={!!errors.email} {...register(\"email\",{required:true, maxLength:30})} label=\"Email\" variant=\"outlined\" className={classes.input} />\n\n                <Typography component=\"span\" variant=\"caption\" className={classes.error}>\n                    {errors.email?.type === 'required' && \"Email is required\"}\n                    {errors.email?.type === 'minLength' && \"Email shouldnot be greater than 30\"}\n                </Typography>\n\n\n                <TextField error={!!errors.password}\n                    {...register(\"password\", {required:true, minLength: { value: 5, message: 'Password should be longer than 5' }, maxLength: { value: 20,message:'Password Too Big' } })} \n                       label=\"Password\" variant=\"outlined\" className={classes.input}\n                        type={showPassword ? 'text' : 'password'}\n                        InputProps={{\n                            endAdornment:(\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    onClick={handleClickShowPassword}\n                                    aria-label=\"toggle password visibility\"\n                                >\n                                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                            )\n                        }}\n                    />\n\n                <Typography component=\"span\" variant=\"caption\" className={classes.error}>\n                    {errors.password?.type === 'required' && \"Password is required\"}\n                    {errors.password?.type === 'minLength' && errors.password.message }\n                    {errors.password?.type === 'maxLength' && errors.password.message }\n                </Typography>\n\n\n                {/* confirm password input field */}\n                <TextField error={!!errors.confirmPassword}\n                    {...register(\"confirmPassword\", { required: true, maxLength: 30, minLength: 5 })} label=\"Confirm Password\"  variant=\"outlined\" className={classes.input}\n                    type={showPassword ? 'text' : 'password'}\n                    onChange={(e) => checkPassword(e)}\n                    InputProps={{ \n                        endAdornment:(\n                            <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                            >\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                            </InputAdornment>\n                        )\n                    }}\n                />\n\n                <Typography component=\"span\" variant=\"caption\" className={classes.error}>\n                    {errors.confirmPassword?.type === 'required' && \"Confirm Password is required\"}\n                    {errors.confirmPassword?.type === 'minLength' && \"Confirm password should be greater than 5\"}\n                    {errors.confirmPassword?.type === 'maxLength' && \"Confirm password shouldnot exceed length 20\"}\n                    {errors.confirmPassword?.type === 'manual' && errors.confirmPassword.message}\n                </Typography>\n\n\n                <Button type=\"submit\" className={classes.title} size=\"large\" variant=\"contained\" color=\"primary\" style={{ marginTop: '20px' }}>Submit</Button>\n\n                <Typography variant=\"body2\">Already Registered <Link to=\"/login\">Login</Link></Typography>\n\n        </Box>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}