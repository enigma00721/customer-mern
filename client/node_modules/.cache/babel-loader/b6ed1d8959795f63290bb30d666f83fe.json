{"ast":null,"code":"import { createContext as e, useState as t, createElement as n, useContext as r, useRef as o, useEffect as a } from \"react\";\n\nvar i = function () {\n  var e,\n      t = {},\n      n = [],\n      r = \"__LSM__\";\n\n  try {\n    e = \"undefined\" != typeof sessionStorage ? window.sessionStorage : {};\n  } catch (t) {\n    e = {};\n  }\n\n  return {\n    updateStore: function (n) {\n      try {\n        t = JSON.parse(e.getItem(r) || \"\") || n;\n      } catch (e) {\n        t = n;\n      }\n    },\n    saveStore: function () {\n      e.setItem(r, JSON.stringify(t));\n    },\n\n    get middleWares() {\n      return n;\n    },\n\n    set middleWares(e) {\n      n = e;\n    },\n\n    get state() {\n      return t;\n    },\n\n    set state(e) {\n      t = e;\n    },\n\n    get name() {\n      return r;\n    },\n\n    set name(e) {\n      r = e;\n    },\n\n    get storageType() {\n      return e;\n    },\n\n    set storageType(t) {\n      e = t;\n    }\n\n  };\n}(),\n    s = e(void 0),\n    _ = function (e) {\n  var r = e.children,\n      o = t(i.state);\n  return n(s.Provider, {\n    value: {\n      state: o[0],\n      setState: o[1]\n    }\n  }, r);\n},\n    d = \"onAction\";\n\nfunction u(e, t) {\n  var n, r, o;\n  t && (t.name && (i.name = t.name), t.storageType && (i.storageType = t.storageType), t.middleWares && (i.middleWares = t.middleWares), t.persist && (d = t.persist)), \"production\" !== process.env.NODE_ENV && (n = i.storageType, r = i.name, o = i.state, \"undefined\" != typeof window && (window.__LSM__ = r, window.__LSM_NAME__ = r, window.__LSM_DEBUG__ = function (e) {\n    return n.setItem(\"___LSM_DEBUG__\", e);\n  }, window.__LSM_RESET__ = function () {\n    return n.removeItem(r);\n  }, window.__LSM_GET_STORE__ = function () {\n    return n.getItem(r);\n  }, window.__LSM_SAVE_TO__ = function (e) {\n    return window.localStorage.setItem(e, JSON.stringify(o));\n  }, window.__LSM_LOAD__ = function (e) {\n    return n.setItem(r || \"___LSM_DEBUG__\", e.data || window.localStorage.getItem(e.storeName) || \"\");\n  })), i.updateStore(e);\n}\n\nfunction c(e) {\n  var t,\n      n = (t = r(s), \"production\" !== process.env.NODE_ENV && (t || console.error(\"StateMachine context is undefined, please verify you are calling useStateMachine() as child of a <StateMachineProvider> component.\")), t),\n      _ = n.state,\n      u = n.setState,\n      c = o(Object.entries(e || {}).reduce(function (e, t) {\n    var n;\n    return Object.assign({}, e, ((n = {})[t[0]] = function (e, t) {\n      return function (n) {\n        \"production\" !== process.env.NODE_ENV && (window.__LSM_NAME__ = t.name), i.state = t(i.state, n), i.middleWares && (i.state = i.middleWares.reduce(function (e, r) {\n          return r(e, t.name, n) || e;\n        }, i.state)), e(i.state), \"onAction\" === d && i.saveStore();\n      };\n    }(u, t[1]), n));\n  }, {}));\n  return a(function () {\n    \"beforeUnload\" === d && (window.onbeforeunload = function () {\n      return i.saveStore();\n    });\n  }, []), {\n    actions: c.current,\n    state: _\n  };\n}\n\nexport { _ as StateMachineProvider, u as createStore, c as useStateMachine };","map":{"version":3,"sources":["../src/logic/storeFactory.ts","../src/constants.ts","../src/StateMachineContext.tsx","../src/stateMachine.tsx","../src/logic/devTool.ts"],"names":["storageType","state","middleWares","name","sessionStorage","window","updateStore","defaultValues","JSON","parse","getItem","saveStore","setItem","stringify","wares","value","StoreFactory","StateMachineContext","React","undefined","StateMachineProvider","children","storeFactory","Provider","setState","process","env","NODE_ENV","console","error","persistOption","createStore","defaultState","options","persist","callback","payload","reduce","currentValue","currentFunction","useStateMachine","actions","actionsRef","Object","entries","previous","assign","actionTemplate","onbeforeunload","current","__LSM__","__LSM_NAME__","__LSM_DEBUG__","__LSM_RESET__","removeItem","__LSM_GET_STORE__","__LSM_SAVE_TO__","localStorage","__LSM_LOAD__","storeName","data"],"mappings":"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","sourcesContent":["import { STORE_DEFAULT_NAME } from '../constants';\nimport { MiddleWare, GlobalState } from '../types';\n\nfunction StoreFactory() {\n  let storageType: Storage;\n  let state: GlobalState = {};\n  let middleWares: MiddleWare[] = [];\n  let name = STORE_DEFAULT_NAME;\n\n  try {\n    storageType =\n      typeof sessionStorage !== 'undefined'\n        ? window.sessionStorage\n        : ({} as Storage);\n  } catch {\n    storageType = {} as Storage;\n  }\n\n  return {\n    updateStore(defaultValues: GlobalState) {\n      try {\n        state = JSON.parse(storageType.getItem(name) || '') || defaultValues;\n      } catch {\n        state = defaultValues;\n      }\n    },\n    saveStore() {\n      storageType.setItem(name, JSON.stringify(state));\n    },\n    get middleWares() {\n      return middleWares;\n    },\n    set middleWares(wares: MiddleWare[]) {\n      middleWares = wares;\n    },\n    get state() {\n      return state;\n    },\n    set state(value) {\n      state = value;\n    },\n    get name() {\n      return name;\n    },\n    set name(value) {\n      name = value;\n    },\n    get storageType() {\n      return storageType;\n    },\n    set storageType(value) {\n      storageType = value;\n    },\n  };\n}\n\nexport default StoreFactory();\n","export const STORE_DEFAULT_NAME = '__LSM__';\nexport const STORE_ACTION_NAME = '__LSM_NAME__';\n","import * as React from 'react';\nimport storeFactory from './logic/storeFactory';\nimport { StateMachineContextValue } from './types';\n\nconst StateMachineContext = React.createContext<StateMachineContextValue>(undefined as any);\n\nexport const StateMachineProvider: React.FC = ({ children }) => {\n  const [state, setState] = React.useState(storeFactory.state);\n\n  return (\n    <StateMachineContext.Provider\n      value={{ state, setState }}\n    >\n      { children }\n    </StateMachineContext.Provider>\n  );\n}\n\nexport function useStateMachineContext() {\n  const value = React.useContext<StateMachineContextValue>(StateMachineContext);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!value) {\n      console.error(`StateMachine context is undefined, please verify you are calling useStateMachine() as child of a <StateMachineProvider> component.`)\n    }\n  }\n\n  return value;\n}\n","import * as React from 'react';\nimport { useStateMachineContext } from './StateMachineContext';\nimport storeFactory from './logic/storeFactory';\nimport { setUpDevTools } from './logic/devTool';\nimport {\n  StateMachineOptions,\n  GlobalState,\n  AnyCallback,\n  AnyActions,\n  ActionsOutput,\n  PersistOptions,\n} from './types';\nimport { STORE_ACTION_NAME } from './constants';\n\nlet persistOption: PersistOptions = 'onAction';\n\nexport function createStore(\n  defaultState: GlobalState,\n  options: StateMachineOptions,\n) {\n  if (options) {\n    options.name && (storeFactory.name = options.name);\n    options.storageType && (storeFactory.storageType = options.storageType);\n    options.middleWares && (storeFactory.middleWares = options.middleWares);\n    options.persist && (persistOption = options.persist);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    setUpDevTools(\n      storeFactory.storageType,\n      storeFactory.name,\n      storeFactory.state,\n    );\n  }\n\n  storeFactory.updateStore(defaultState);\n}\n\nconst actionTemplate = <TCallback extends AnyCallback>(\n  setState: React.Dispatch<React.SetStateAction<GlobalState>>,\n  callback: TCallback,\n) => (payload: Parameters<TCallback>[1]) => {\n  if (process.env.NODE_ENV !== 'production') {\n    window[STORE_ACTION_NAME] = callback.name;\n  }\n\n  storeFactory.state = callback(storeFactory.state, payload);\n\n  if (storeFactory.middleWares) {\n    storeFactory.state = storeFactory.middleWares.reduce(\n      (currentValue, currentFunction) =>\n        currentFunction(currentValue, callback.name, payload) || currentValue,\n      storeFactory.state,\n    );\n  }\n\n  setState(storeFactory.state);\n  persistOption === 'onAction' && storeFactory.saveStore();\n};\n\nexport function useStateMachine<\n  TCallback extends AnyCallback,\n  TActions extends AnyActions<TCallback>\n>(\n  actions?: TActions,\n): {\n  actions: ActionsOutput<TCallback, TActions>;\n  state: GlobalState;\n} {\n  const { state, setState } = useStateMachineContext();\n  const actionsRef = React.useRef(\n    Object.entries(actions || {}).reduce(\n      (previous, [key, callback]) =>\n        Object.assign({}, previous, {\n          [key]: actionTemplate(setState, callback),\n        }),\n      {} as ActionsOutput<TCallback, TActions>,\n    ),\n  );\n\n  React.useEffect(() => {\n    if (persistOption === 'beforeUnload') {\n      window.onbeforeunload = () => storeFactory.saveStore();\n    }\n  }, []);\n\n  return {\n    actions: actionsRef.current,\n    state,\n  };\n}\n","import { GlobalState } from \"../types\";\n\nexport function setUpDevTools(\n  storageType: Storage,\n  name: string,\n  state: GlobalState,\n) {\n  if (typeof window === 'undefined') return;\n\n  window.__LSM__ = name;\n\n  window.__LSM_NAME__ = name;\n\n  window.__LSM_DEBUG__ = (value: string) =>\n    storageType.setItem('___LSM_DEBUG__', value);\n\n  window.__LSM_RESET__ = () => storageType.removeItem(name);\n\n  window.__LSM_GET_STORE__ = () => storageType.getItem(name);\n\n  window.__LSM_SAVE_TO__ = (name: any) =>\n    window.localStorage.setItem(name, JSON.stringify(state));\n\n  window.__LSM_LOAD__ = ({\n    storeName,\n    data,\n  }: {\n    storeName: string;\n    data?: string;\n  }) =>\n    storageType.setItem(\n      name || '___LSM_DEBUG__',\n      data || window.localStorage.getItem(storeName) || '',\n    );\n}\n"]},"metadata":{},"sourceType":"module"}