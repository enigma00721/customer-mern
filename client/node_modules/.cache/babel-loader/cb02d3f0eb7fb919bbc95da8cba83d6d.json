{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, InputLabel, MenuItem, Paper, Select, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\"; // library\n\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"notistack\"; // styles\n\nimport StyledTableCell from \"../Partials/StyledTableCell\"; // icons\n\nimport { Delete, Edit } from \"@material-ui/icons\"; // swr\n\nimport useSWR, { useSWRConfig } from \"swr\";\nimport fetcher from \"../../../utils/fetcher\";\nimport ConfirmDelete from \"../Partials/ConfirmDelete\"; // import ReactHookFormSelect from \"./ReactHookFormSelect\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Branch = () => {\n  _s();\n\n  const CLIENT_API = \"api/client/name\";\n  const BRANCH_API = \"api/branch\"; // notification snackbar\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    mutate\n  } = useSWRConfig(); // state\n\n  const [open, setOpen] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteId, setDeleteId] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [selectValue, setSelectValue] = useState(\"\"); // for select element value in edit mode\n  // form hook\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      address: undefined,\n      client_id: undefined\n    }\n  }); // swr config\n\n  const {\n    data: clients,\n    error: clientError\n  } = useSWR(CLIENT_API, fetcher);\n  const {\n    data: branches,\n    error: branchError\n  } = useSWR(BRANCH_API, fetcher);\n  if (clientError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load client data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 27\n  }, this);\n  if (!clients) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 24\n  }, this);\n  if (branchError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load branch data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 27\n  }, this);\n  if (!branches) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 25\n  }, this); // console.log(clients);\n  // console.log(branches);\n  // save new branch and also update\n\n  const onSubmit = data => {\n    console.log(\"on submit\");\n    console.log(data);\n    if (!isEditMode) axios.post(\"api/branch\", data).then(({\n      data\n    }) => {\n      setOpen(false);\n      mutate(BRANCH_API);\n      enqueueSnackbar(data.success_msg, {\n        variant: \"success\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });else axios.patch(\"api/branch/\" + data._id, data).then(({\n      data\n    }) => {\n      mutate(BRANCH_API);\n      enqueueSnackbar(data.success_msg, {\n        variant: \"success\"\n      });\n      setOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // when dialog closes\n\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // edit config\n\n\n  const handleEdit = row => {\n    console.log(\"edit\", row);\n    setIsEditMode(true);\n    setOpen(true);\n    setSelectValue(row.client_id._id);\n    reset(row);\n  };\n\n  const handleDelete = () => {\n    axios.delete(\"api/branch/\" + deleteId).then(({\n      data\n    }) => {\n      mutate(BRANCH_API);\n      setOpenDeleteDialog(false);\n      enqueueSnackbar(data.success_msg, {\n        variant: \"success\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      onClick: () => {\n        setIsEditMode(false);\n        reset({});\n        setOpen(true);\n      },\n      children: \"Add Branch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: isEditMode ? \"Edit Branch\" : \"Add New Branch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"label\",\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(\"client_id\", {\n              required: \"Client is required!\"\n            }),\n            labelId: \"label\",\n            id: \"select\",\n            fullWidth: true,\n            variant: \"outlined\",\n            defaultValue: selectValue,\n            children: clients && (clients === null || clients === void 0 ? void 0 : clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: [\" \", client.company_name, \" \"]\n            }, client._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"address\", {\n              required: \"Address is requied!\"\n            }),\n            autoFocus: true,\n            variant: \"outlined\",\n            margin: \"normal\",\n            id: \"address\",\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true,\n            error: !!errors.address,\n            helperText: errors && errors.address && errors.address.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: isEditMode ? \"Update\" : \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setOpen(false);\n              reset({});\n            },\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: branches && (branches === null || branches === void 0 ? void 0 : branches.map(row => {\n            var _row$client_id;\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row === null || row === void 0 ? void 0 : (_row$client_id = row.client_id) === null || _row$client_id === void 0 ? void 0 : _row$client_id.company_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    fontSize: \"medium\",\n                    onClick: () => handleEdit(row)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(Delete, {\n                    fontSize: \"medium\",\n                    onClick: () => {\n                      setDeleteId(row._id);\n                      setOpenDeleteDialog(true);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDelete, {\n      openDeleteDialog: openDeleteDialog,\n      setOpenDeleteDialog: setOpenDeleteDialog,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Branch, \"idQEIWNaEl1Q1v3H8u21fXq+gJE=\", false, function () {\n  return [useSnackbar, useSWRConfig, useForm, useSWR, useSWR];\n});\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","InputLabel","MenuItem","Paper","Select","Table","TableBody","TableContainer","TableHead","TableRow","TextField","useState","useForm","axios","useSnackbar","StyledTableCell","Delete","Edit","useSWR","useSWRConfig","fetcher","ConfirmDelete","Branch","CLIENT_API","BRANCH_API","enqueueSnackbar","mutate","open","setOpen","openDeleteDialog","setOpenDeleteDialog","deleteId","setDeleteId","isEditMode","setIsEditMode","selectValue","setSelectValue","register","handleSubmit","reset","formState","errors","defaultValues","address","undefined","client_id","data","clients","error","clientError","branches","branchError","onSubmit","console","log","post","then","success_msg","variant","catch","err","patch","_id","handleClose","handleEdit","row","handleDelete","delete","required","map","client","company_name","message","marginTop"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\n// library\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"notistack\";\n// styles\nimport StyledTableCell from \"../Partials/StyledTableCell\";\n// icons\nimport { Delete, Edit } from \"@material-ui/icons\";\n// swr\nimport useSWR, { useSWRConfig } from \"swr\";\nimport fetcher from \"../../../utils/fetcher\";\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\n// import ReactHookFormSelect from \"./ReactHookFormSelect\";\n\ninterface ClientType {\n  _id: string;\n  company_name: string;\n}\ninterface BranchType {\n  _id: string;\n  address: string;\n  client_id: ClientType | string;\n}\n\nconst Branch = () => {\n  const CLIENT_API = \"api/client/name\";\n  const BRANCH_API = \"api/branch\";\n\n  // notification snackbar\n  const { enqueueSnackbar } = useSnackbar();\n  const { mutate } = useSWRConfig();\n\n  // state\n  const [open, setOpen] = useState<boolean>(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false);\n  const [deleteId, setDeleteId] = useState<string>(null);\n  const [isEditMode, setIsEditMode] = useState<boolean>(false);\n  const [selectValue, setSelectValue] = useState<string>(\"\"); // for select element value in edit mode\n  // form hook\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    defaultValues: { address: undefined, client_id: undefined },\n  });\n\n  // swr config\n  const { data: clients, error: clientError } = useSWR(CLIENT_API, fetcher);\n  const { data: branches, error: branchError } = useSWR(BRANCH_API, fetcher);\n\n  if (clientError) return <div>failed to load client data</div>;\n  if (!clients) return <div>loading...</div>;\n  if (branchError) return <div>failed to load branch data</div>;\n  if (!branches) return <div>loading...</div>;\n\n  // console.log(clients);\n  // console.log(branches);\n\n  // save new branch and also update\n  const onSubmit = (data: BranchType) => {\n    console.log(\"on submit\");\n    console.log(data);\n    if (!isEditMode)\n      axios\n        .post(\"api/branch\", data)\n        .then(({ data }) => {\n          setOpen(false);\n          mutate(BRANCH_API);\n          enqueueSnackbar(data.success_msg, { variant: \"success\" });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    else\n      axios\n        .patch(\"api/branch/\" + data._id, data)\n        .then(({ data }) => {\n          mutate(BRANCH_API);\n          enqueueSnackbar(data.success_msg, { variant: \"success\" });\n          setOpen(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  };\n\n  // when dialog closes\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // edit config\n  const handleEdit = (row: BranchType) => {\n    console.log(\"edit\", row);\n    setIsEditMode(true);\n    setOpen(true);\n    setSelectValue(row.client_id._id);\n    reset(row);\n  };\n\n  const handleDelete = () => {\n    axios\n      .delete(\"api/branch/\" + deleteId)\n      .then(({ data }) => {\n        mutate(BRANCH_API);\n        setOpenDeleteDialog(false);\n        enqueueSnackbar(data.success_msg, { variant: \"success\" });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Box m={5}>\n      <Button\n        color=\"primary\"\n        variant=\"outlined\"\n        onClick={() => {\n          setIsEditMode(false);\n          reset({});\n          setOpen(true);\n        }}\n      >\n        Add Branch\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {isEditMode ? \"Edit Branch\" : \"Add New Branch\"}\n        </DialogTitle>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogContent>\n            <InputLabel id=\"label\">Client</InputLabel>\n            <Select\n              {...register(\"client_id\", { required: \"Client is required!\" })}\n              labelId=\"label\"\n              id=\"select\"\n              fullWidth\n              variant=\"outlined\"\n              defaultValue={selectValue}\n            >\n              {clients &&\n                clients?.map((client) => (\n                  <MenuItem key={client._id} value={client._id}>\n                    {\" \"}\n                    {client.company_name}{\" \"}\n                  </MenuItem>\n                ))}\n            </Select>\n\n            {/* <ReactHookFormSelect\n              name=\"client_id\"\n              label=\"Client\"\n              control={control}\n              variant=\"outlined\"\n              margin=\"normal\"\n              defaultValue=\"\"\n              fullWidth\n            >\n              {clients &&\n                clients?.map((client) => (\n                  <MenuItem key={client._id} value={client._id}>\n                    {\" \"}\n                    {client.company_name}{\" \"}\n                  </MenuItem>\n                ))}\n            </ReactHookFormSelect> */}\n\n            {/* <Controller\n                            as={\n                                <Select>\n                                    {clients && clients.map((option, index) => (\n                                        <MenuItem key={index} value={option._id}>\n                                            {option.company_name}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            }\n                            name=\"client_id\"\n                            control={control}\n                            defaultValue=\"\"\n                        /> */}\n\n            <TextField\n              {...register(\"address\", { required: \"Address is requied!\" })}\n              autoFocus\n              variant=\"outlined\"\n              margin=\"normal\"\n              id=\"address\"\n              label=\"Address\"\n              type=\"text\"\n              fullWidth\n              error={!!errors.address}\n              helperText={errors && errors.address && errors.address.message}\n            />\n          </DialogContent>\n\n          <DialogActions>\n            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n              {isEditMode ? \"Update\" : \"Save\"}\n            </Button>\n            <Button\n              onClick={() => {\n                setOpen(false);\n                reset({});\n              }}\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Close\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n\n      <TableContainer component={Paper} style={{ marginTop: \"20px\" }}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"left\">Company Name</StyledTableCell>\n              <StyledTableCell align=\"left\">Address</StyledTableCell>\n              <StyledTableCell align=\"left\">Actions</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {branches &&\n              branches?.map((row) => (\n                <TableRow key={row._id} hover={true}>\n                  <StyledTableCell align=\"left\">\n                    {row?.client_id?.company_name}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">{row.address}</StyledTableCell>\n\n                  <StyledTableCell align=\"left\">\n                    <IconButton>\n                      <Edit fontSize=\"medium\" onClick={() => handleEdit(row)} />\n                    </IconButton>\n                    <IconButton>\n                      <Delete\n                        fontSize=\"medium\"\n                        onClick={() => {\n                          setDeleteId(row._id);\n                          setOpenDeleteDialog(true);\n                        }}\n                      />\n                    </IconButton>\n                  </StyledTableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <ConfirmDelete\n        openDeleteDialog={openDeleteDialog}\n        setOpenDeleteDialog={setOpenDeleteDialog}\n        handleDelete={handleDelete}\n      />\n    </Box>\n  );\n};\n\nexport default Branch;\n"]},"metadata":{},"sourceType":"module"}