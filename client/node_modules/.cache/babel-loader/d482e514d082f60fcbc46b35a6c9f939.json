{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Profile/Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, TextField } from \"@material-ui/core\";\nimport { useEffect } from \"react\"; // library\n\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  var _errors$name, _errors$email, _errors$oldpassword, _errors$password;\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // react hook form\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      name: \"\",\n      email: \"\"\n    }\n  });\n  useEffect(() => {\n    axios.get(\"/auth\").then(({\n      data\n    }) => {\n      console.log(data);\n      reset(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [reset]); // handle form update\n\n  const onSubmit = data => {\n    console.log(data);\n    axios.patch(\"/auth\", data).then(({\n      data\n    }) => {\n      console.log(data);\n      enqueueSnackbar(data.success_msg, {\n        variant: \"success\"\n      });\n    }).catch(err => enqueueSnackbar(err.message, {\n      variant: \"warning\"\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(TextField, { ...register(\"name\", {\n          required: \"Name is required!\" // pattern: {\n          //   value: /^[A-Za-z]+$/i,\n          //   message: \"Please enter valid Name with no special character\",\n          // },\n\n        }),\n        variant: \"outlined\",\n        margin: \"normal\",\n        label: \"Name\",\n        type: \"text\",\n        fullWidth: true,\n        error: (errors === null || errors === void 0 ? void 0 : errors.name) ? true : false,\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"email\", {\n          required: \"Email is required!\"\n        }),\n        variant: \"outlined\",\n        margin: \"normal\",\n        label: \"Email Address\",\n        type: \"email\",\n        fullWidth: true,\n        error: (errors === null || errors === void 0 ? void 0 : errors.email) ? true : false,\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"oldpassword\", {\n          required: \"Old Password is required!\"\n        }),\n        variant: \"outlined\",\n        margin: \"normal\",\n        label: \"Old Password\",\n        type: \"password\",\n        fullWidth: true,\n        error: (errors === null || errors === void 0 ? void 0 : errors.oldpassword) ? true : false,\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$oldpassword = errors.oldpassword) === null || _errors$oldpassword === void 0 ? void 0 : _errors$oldpassword.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"password\", {\n          required: \"New Password is required!\",\n          minLength: {\n            value: 6,\n            message: \"Password must be at least 6 characters\"\n          },\n          maxLength: {\n            value: 20,\n            message: \"Password must not be at greater than 20 characters\"\n          }\n        }),\n        variant: \"outlined\",\n        margin: \"normal\",\n        label: \"New Password\",\n        type: \"password\",\n        fullWidth: true,\n        error: (errors === null || errors === void 0 ? void 0 : errors.password) ? true : false,\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"contained\",\n        size: \"large\",\n        fullWidth: true,\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"z3rVNjt8D63L45EvBbgcFIJC/eA=\", false, function () {\n  return [useSnackbar, useForm];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Profile/Profile.tsx"],"names":["Box","Button","TextField","useEffect","axios","useForm","useSnackbar","Profile","enqueueSnackbar","register","handleSubmit","reset","formState","errors","defaultValues","name","email","get","then","data","console","log","catch","error","onSubmit","patch","success_msg","variant","err","message","required","oldpassword","minLength","value","maxLength","password","marginTop"],"mappings":"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","sourcesContent":["import { Box, Button, TextField } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\n// library\nimport axios from \"axios\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { useSnackbar } from \"notistack\";\n\ninterface UserType {\n  name: string;\n  email: string;\n  password: string;\n  oldpassword?: string;\n  _id?: string;\n}\n\nconst Profile = () => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  // react hook form\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<UserType>({\n    defaultValues: { name: \"\", email: \"\" },\n  });\n\n  useEffect(() => {\n    axios\n      .get(\"/auth\")\n      .then(({ data }) => {\n        console.log(data);\n        reset(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [reset]);\n\n  // handle form update\n  const onSubmit: SubmitHandler<UserType> = (data) => {\n    console.log(data);\n    axios\n      .patch(\"/auth\", data)\n      .then(({ data }) => {\n        console.log(data);\n        enqueueSnackbar(data.success_msg, { variant: \"success\" });\n      })\n      .catch((err) => enqueueSnackbar(err.message, { variant: \"warning\" }));\n  };\n\n  return (\n    <Box m={5}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <TextField\n          {...register(\"name\", {\n            required: \"Name is required!\",\n            // pattern: {\n            //   value: /^[A-Za-z]+$/i,\n            //   message: \"Please enter valid Name with no special character\",\n            // },\n          })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"Name\"\n          type=\"text\"\n          fullWidth\n          error={errors?.name ? true : false}\n          helperText={errors?.name?.message}\n        />\n\n        <TextField\n          {...register(\"email\", { required: \"Email is required!\" })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"Email Address\"\n          type=\"email\"\n          fullWidth\n          error={errors?.email ? true : false}\n          helperText={errors?.email?.message}\n        />\n        <TextField\n          {...register(\"oldpassword\", {\n            required: \"Old Password is required!\",\n          })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"Old Password\"\n          type=\"password\"\n          fullWidth\n          error={errors?.oldpassword ? true : false}\n          helperText={errors?.oldpassword?.message}\n        />\n\n        <TextField\n          {...register(\"password\", {\n            required: \"New Password is required!\",\n            minLength: {\n              value: 6,\n              message: \"Password must be at least 6 characters\",\n            },\n            maxLength: {\n              value: 20,\n              message: \"Password must not be at greater than 20 characters\",\n            },\n          })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"New Password\"\n          type=\"password\"\n          fullWidth\n          error={errors?.password ? true : false}\n          helperText={errors?.password?.message}\n        />\n\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          fullWidth\n          style={{ marginTop: \"10px\" }}\n        >\n          Update\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}