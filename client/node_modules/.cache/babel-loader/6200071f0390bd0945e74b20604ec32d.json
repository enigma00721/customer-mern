{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport useSWR from 'swr';\nimport axios from 'axios';\nimport fetcher from '../../../utils/fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactPerson = () => {\n  _s();\n\n  const CLIENT_API = 'api/client/name';\n  const CONTACT_API = 'api/person'; // state\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [hasBranch, setHasBranch] = useState(false);\n  const [branch, setBranch] = useState(null); // swr api fetch\n\n  const {\n    data: clients,\n    error: clientsError\n  } = useSWR(CLIENT_API, fetcher);\n  const {\n    data: contacts,\n    error: contactsError\n  } = useSWR(CONTACT_API, fetcher);\n  if (clientsError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 30\n  }, this);\n  if (!clients) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 26\n  }, this);\n  if (contactsError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 31\n  }, this);\n  if (!contacts) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 27\n  }, this);\n  console.log(clients);\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleSelectChange = event => {\n    console.log(event);\n    const id = event.target.value;\n    axios.get('/api/branch/client/' + id).then(({\n      data\n    }) => {\n      console.log(data);\n\n      if (data) {\n        setHasBranch(true);\n      } else setHasBranch(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => setOpenDialog(true),\n      children: \"Add Contact Person\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Contact Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          onChange: handleSelectChange,\n          label: \"client\",\n          fullWidth: true,\n          variant: \"outlined\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: client._id,\n            children: client.company_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), hasBranch && /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          onChange: handleSelectChange,\n          label: \"client\",\n          fullWidth: true,\n          variant: \"outlined\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: client._id,\n            children: client.company_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          label: \"Name\",\n          type: \"text\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          label: \"Email Address\",\n          type: \"email\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          label: \"Address\",\n          type: \"text\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          label: \"Phone Number\",\n          type: \"text\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          variant: \"outlined\",\n          children: \" Save \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          variant: \"outlined\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactPerson, \"1M5hie1ZVTRjdPfR62ozYpWle+E=\", false, function () {\n  return [useSWR, useSWR];\n});\n\n_c = ContactPerson;\nexport default ContactPerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactPerson\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","MenuItem","TextField","useState","useSWR","axios","fetcher","ContactPerson","CLIENT_API","CONTACT_API","openDialog","setOpenDialog","hasBranch","setHasBranch","branch","setBranch","data","clients","error","clientsError","contacts","contactsError","console","log","handleClose","handleSelectChange","event","id","target","value","get","then","catch","map","client","_id","company_name"],"mappings":"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","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, TextField } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\";\nimport useSWR from 'swr';\nimport axios from 'axios';\nimport fetcher from '../../../utils/fetcher';\n\ninterface BranchType{\n    _id: string;\n    address: string;\n    client_id: string;\n}\n\nconst ContactPerson = () => {\n\n    const CLIENT_API = 'api/client/name';\n    const CONTACT_API = 'api/person';\n\n    // state\n    const [ openDialog,setOpenDialog] = useState<boolean>(false);\n    const [hasBranch,setHasBranch] = useState<boolean>(false);\n    const [branch, setBranch] = useState<BranchType>(null);\n\n    // swr api fetch\n    const { data: clients, error: clientsError } = useSWR(CLIENT_API, fetcher);\n    const { data: contacts, error: contactsError } = useSWR(CONTACT_API, fetcher);\n    if (clientsError) return <div>failed to load</div>\n    if (!clients) return <div>loading...</div>\n    if (contactsError) return <div>failed to load</div>\n    if (!contacts) return <div>loading...</div>\n    console.log(clients);\n\n\n    const handleClose = () => {setOpenDialog(false);}\n\n    const handleSelectChange =(event:any) => {\n        console.log(event);\n        const id = event.target.value;\n        axios.get('/api/branch/client/'+id)\n            .then(({data}) => {\n                console.log(data);\n                if(data) {\n                    setHasBranch(true);\n                }\n                else setHasBranch(false);\n            })\n            .catch((error) => {console.log(error)});\n    }\n\n    return (\n        <Box m={5}>\n\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpenDialog(true)}>\n                Add Contact Person\n            </Button>\n\n            <Dialog open={openDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Contact Person</DialogTitle>\n                <DialogContent>\n\n                    <TextField select onChange={handleSelectChange} label=\"client\" fullWidth variant=\"outlined\">\n                        {clients.map((client) => (\n                            <MenuItem value={client._id}>{client.company_name}</MenuItem>\n                        ))}\n                    </TextField>\n                    {hasBranch &&  \n                    \n                    <TextField select onChange={handleSelectChange} label=\"client\" fullWidth variant=\"outlined\">\n                        {clients.map((client) => (\n                            <MenuItem value={client._id}>{client.company_name}</MenuItem>\n                            ))}\n                    </TextField>\n                    }\n\n                    <TextField variant=\"outlined\" margin=\"normal\" label=\"Name\" type=\"text\" fullWidth />\n                    <TextField variant=\"outlined\" margin=\"normal\" label=\"Email Address\" type=\"email\" fullWidth />\n                    <TextField variant=\"outlined\" margin=\"normal\" label=\"Address\" type=\"text\" fullWidth />\n                    <TextField variant=\"outlined\" margin=\"normal\" label=\"Phone Number\" type=\"text\" fullWidth />\n                </DialogContent>\n\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" variant=\"outlined\"> Save </Button>\n                    <Button onClick={handleClose} color=\"secondary\" variant=\"outlined\">Close</Button>\n                </DialogActions>\n            </Dialog>\n        </Box>\n    )\n}\n\nexport default ContactPerson\n"]},"metadata":{},"sourceType":"module"}