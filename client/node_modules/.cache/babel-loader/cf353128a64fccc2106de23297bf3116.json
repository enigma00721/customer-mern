{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles, Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport useSWR, { useSWRConfig } from 'swr';\nimport fetcher from '../../../utils/fetcher';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst Contract = () => {\n  _s();\n\n  var _clients;\n\n  const classes = useStyles();\n  const {\n    mutate\n  } = useSWRConfig();\n  const CONTRACT_API = 'api/contract';\n  const [openDialog, setOpenDialog] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [selectValue, setSelectValue] = useState('');\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data); // if(!isEditMode)\n\n    axios.post(CONTRACT_API, data).then(({\n      data\n    }) => {\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const {\n    data: contracts,\n    error: contractError\n  } = useSWR(CONTRACT_API, fetcher);\n  if (contractError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 31\n  }, this);\n  if (!contracts) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      onClick: () => setOpenDialog(true),\n      children: \"Add Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => {},\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: isEditMode ? 'Update Contract' : 'Add Contract'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"label\",\n            className: classes.formControl,\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(\"client_id\", {\n              required: \"Client is required!\"\n            }),\n            labelId: \"label\",\n            id: \"select\",\n            variant: \"outlined\",\n            fullWidth: true,\n            defaultValue: selectValue,\n            children: clients && ((_clients = clients) === null || _clients === void 0 ? void 0 : _clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: [\" \", client.company_name, \" \"]\n            }, client._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"payment\",\n            className: classes.formControl,\n            children: \"Payment Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register('payment_status', {\n              required: 'Payment Status is required!'\n            }),\n            labelId: \"payment\",\n            fullWidth: true,\n            variant: \"outlined\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"paid\",\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"notpaid\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('contract_sign_date', {\n              required: 'Contract Sign Date is required!'\n            }),\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            label: \"Contract Sign Date\",\n            type: \"date\",\n            defaultValue: \"2020-01-01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('contract_end_date', {\n              required: 'Contract End Date is required!'\n            }),\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            label: \"Contract End Date\",\n            type: \"date\",\n            defaultValue: \"2022-01-01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {},\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: isEditMode ? 'Update' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpenDialog(false),\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contract, \"lO13fyyseVhP/11DCteVTQxZVog=\", false, function () {\n  return [useStyles, useSWRConfig, useForm, useSWR];\n});\n\n_c = Contract;\nexport default Contract;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contract\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx"],"names":["makeStyles","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","MenuItem","Select","TextField","useState","useSWR","useSWRConfig","fetcher","useForm","axios","useStyles","theme","formControl","margin","spacing","Contract","classes","mutate","CONTRACT_API","openDialog","setOpenDialog","isEditMode","setIsEditMode","selectValue","setSelectValue","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","post","then","catch","err","contracts","error","contractError","required","clients","map","client","_id","company_name"],"mappings":"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","sourcesContent":["import { makeStyles,Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\"\nimport { useState } from \"react\";\nimport useSWR, { useSWRConfig } from 'swr';\nimport fetcher from '../../../utils/fetcher';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl:{\n        margin:theme.spacing(1)\n    }\n}))\n\nconst Contract = () => {\n\n    const classes = useStyles();\n    const { mutate } = useSWRConfig();\n    const CONTRACT_API = 'api/contract';\n    \n    const [openDialog,setOpenDialog] = useState<boolean>(false);\n    const [isEditMode,setIsEditMode] = useState<boolean>(false);\n    const [selectValue,setSelectValue] = useState<string>('');\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    \n    const onSubmit = (data) => {\n        console.log(data);\n\n        // if(!isEditMode)\n            axios.post(CONTRACT_API,data)\n                .then(({data}) => {console.log(data);})\n                .catch((err) => {console.log(err);})\n    }\n\n    \n    const { data: contracts, error: contractError } = useSWR(CONTRACT_API, fetcher);\n\n    if (contractError) return <div>failed to load</div>\n    if (!contracts) return <div>loading...</div>\n\n\n    return (\n        <Box m={5}>\n            \n            <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpenDialog(true)}>Add Contract</Button>\n\n                <Dialog open={openDialog} onClose={() => {}} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">\n                        {isEditMode ? 'Update Contract' : 'Add Contract'}\n                    </DialogTitle>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <DialogContent>\n\n                            <InputLabel id=\"label\" className={classes.formControl}>Client</InputLabel>\n                            <Select {...register(\"client_id\", { required: \"Client is required!\" })}\n                                labelId=\"label\" id=\"select\" variant=\"outlined\" fullWidth\n                                defaultValue={selectValue}  \n                            >\n                                {clients && clients?.map(client => (\n                                    <MenuItem key={client._id} value={client._id}> {client.company_name} </MenuItem>\n                                ))}\n                            </Select>\n                            \n                            <InputLabel id=\"payment\" className={classes.formControl}>Payment Status</InputLabel>\n                            <Select {...register('payment_status',{required:'Payment Status is required!'})}\n                                labelId=\"payment\" fullWidth variant=\"outlined\" fullWidth>\n                                <MenuItem value=\"paid\">Paid</MenuItem>\n                                <MenuItem value=\"notpaid\">Not Paid</MenuItem>\n                            </Select>\n\n                            <TextField\n                                {...register('contract_sign_date',{required:'Contract Sign Date is required!'})}\n                                fullWidth\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                label=\"Contract Sign Date\"\n                                type=\"date\"\n                                defaultValue=\"2020-01-01\"\n                            \n                            />\n                            <TextField\n                                {...register('contract_end_date', { required: 'Contract End Date is required!' })}\n                                fullWidth\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                label=\"Contract End Date\"\n                                type=\"date\"\n                                defaultValue=\"2022-01-01\"\n                            />\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => {}} color=\"primary\" variant=\"contained\" type=\"submit\">\n                                {isEditMode ? 'Update' : 'Save'}\n                            </Button>\n                            <Button onClick={() => setOpenDialog(false)} color=\"secondary\" variant=\"contained\">\n                                Close\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n\n\n        </Box>\n    )\n}\n\nexport default Contract\n"]},"metadata":{},"sourceType":"module"}