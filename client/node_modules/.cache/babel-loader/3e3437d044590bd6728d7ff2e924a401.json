{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/PublicRoute.tsx\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicRoute = ({\n  status,\n  component: Component,\n  restricted,\n  ...rest\n}) => {\n  return (\n    /*#__PURE__*/\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    _jsxDEV(Route, { ...rest,\n      render: props => status === \"loggedIn\" && restricted ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/PublicRoute.tsx"],"names":["Route","Redirect","PublicRoute","status","component","Component","restricted","rest","props"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAIA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAS,EAAEC,SAArB;AAAgCC,EAAAA,UAAhC;AAA4C,KAAGC;AAA/C,CAAD,KAA2D;AAC7E;AAAA;AACE;AACA;AACA,YAAC,KAAD,OACMA,IADN;AAEE,MAAA,MAAM,EAAGC,KAAD,IACNL,MAAM,KAAK,UAAX,IAAyBG,UAAzB,gBACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,gBAGE,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA;AAHF;AAcD,CAfD;;KAAMN,W;AAiBN,eAAeA,WAAf","sourcesContent":["import { Route, Redirect } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthenticationContext } from \"./AuthenticationProvider\";\n\nconst PublicRoute = ({ status, component: Component, restricted, ...rest }) => {\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    <Route\n      {...rest}\n      render={(props) =>\n        status === \"loggedIn\" && restricted ? (\n          <Redirect to=\"/dashboard\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n"]},"metadata":{},"sourceType":"module"}