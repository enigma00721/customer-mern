{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Paper, Select, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\"; // library\n\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack'; // styles\n\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport useStyles from '../Partials/CommonStyles'; // icons\n\nimport { PanTool, Delete } from '@material-ui/icons'; // swr\n\nimport useSWR, { useSWRConfig } from 'swr';\nimport fetcher from '../../../utils/fetcher';\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Branch = () => {\n  _s();\n\n  const CLIENT_API = 'api/client/name';\n  const BRANCH_API = 'api/branch';\n  const classes = useStyles(); // notification snackbar\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    mutate\n  } = useSWRConfig(); // state\n\n  const [open, setOpen] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteId, setDeleteId] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [selectValue, setSelectValue] = useState(''); // for select element value in edit mode\n  // form hook\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm(); // swr config\n\n  const {\n    data: clients,\n    error: clientError\n  } = useSWR(CLIENT_API, fetcher);\n  const {\n    data: branches,\n    error: branchError\n  } = useSWR(BRANCH_API, fetcher);\n  if (clientError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load client data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 29\n  }, this);\n  if (!clients) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 26\n  }, this);\n  if (branchError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load branch data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 29\n  }, this);\n  if (!branches) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 27\n  }, this);\n  console.log(clients);\n  console.log(branches); // save new branch and also update\n\n  const onSubmit = data => {\n    console.log(data);\n    if (!isEditMode) axios.post('api/branch', data).then(({\n      data\n    }) => {\n      setOpen(false);\n      mutate(BRANCH_API);\n      enqueueSnackbar(data.success_msg, {\n        variant: 'success'\n      });\n    }).catch(err => {\n      console.log(err);\n    });else axios.patch('api/branch/' + data._id, data).then(({\n      data\n    }) => {\n      mutate(BRANCH_API);\n      enqueueSnackbar(data.success_msg, {\n        variant: 'success'\n      });\n      setOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // when dialog closes\n\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // edit config\n\n\n  const handleEdit = row => {\n    setIsEditMode(true);\n    setOpen(true);\n    setSelectValue(row.client_id._id);\n    reset(row);\n  };\n\n  const handleDelete = () => {\n    // console.log('deleting')\n    // console.log(deleteId);\n    axios.delete('api/branch/' + deleteId).then(({\n      data\n    }) => {\n      mutate(BRANCH_API);\n      setOpenDeleteDialog(false);\n      enqueueSnackbar(data.success_msg, {\n        variant: 'success'\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      onClick: () => setOpen(true),\n      children: \"Add Branch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: isEditMode ? 'Edit Branch' : 'Add New Branch'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"label\",\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(\"client_id\", {\n              required: \"Client is required!\"\n            }),\n            labelId: \"label\",\n            id: \"select\",\n            fullWidth: true,\n            variant: \"outlined\",\n            defaultValue: selectValue,\n            children: clients && (clients === null || clients === void 0 ? void 0 : clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: [\" \", client.company_name, \" \"]\n            }, client._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"address\", {\n              required: \"Address is requied!\"\n            }),\n            autoFocus: true,\n            variant: \"outlined\",\n            margin: \"normal\",\n            id: \"address\",\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: isEditMode ? 'Update' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setOpen(false);\n              reset({});\n            },\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: branches && (branches === null || branches === void 0 ? void 0 : branches.map(row => {\n            var _row$client_id;\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row === null || row === void 0 ? void 0 : (_row$client_id = row.client_id) === null || _row$client_id === void 0 ? void 0 : _row$client_id.company_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                className: classes.icon,\n                children: [/*#__PURE__*/_jsxDEV(PanTool, {\n                  fontSize: \"small\",\n                  onClick: () => handleEdit(row)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Delete, {\n                  fontSize: \"medium\",\n                  onClick: () => {\n                    setDeleteId(row._id);\n                    setOpenDeleteDialog(true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDelete, {\n      openDeleteDialog: openDeleteDialog,\n      setOpenDeleteDialog: setOpenDeleteDialog,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Branch, \"y6kCbZV3edO4N1rkAKRghHe+HD8=\", false, function () {\n  return [useStyles, useSnackbar, useSWRConfig, useForm, useSWR, useSWR];\n});\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","MenuItem","Paper","Select","Table","TableBody","TableContainer","TableHead","TableRow","TextField","useState","useForm","axios","useSnackbar","StyledTableCell","useStyles","PanTool","Delete","useSWR","useSWRConfig","fetcher","ConfirmDelete","Branch","CLIENT_API","BRANCH_API","classes","enqueueSnackbar","mutate","open","setOpen","openDeleteDialog","setOpenDeleteDialog","deleteId","setDeleteId","isEditMode","setIsEditMode","selectValue","setSelectValue","register","handleSubmit","reset","formState","errors","data","clients","error","clientError","branches","branchError","console","log","onSubmit","post","then","success_msg","variant","catch","err","patch","_id","handleClose","handleEdit","row","client_id","handleDelete","delete","required","map","client","company_name","marginTop","address","icon"],"mappings":"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","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Paper, Select, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\";\n// library\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack';\n// styles\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport useStyles from '../Partials/CommonStyles'\n// icons\nimport { PanTool, Delete } from '@material-ui/icons'\n// swr\nimport useSWR, { useSWRConfig } from 'swr'\nimport fetcher from '../../../utils/fetcher';\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\n\n\ninterface ClientType{\n    _id?:string,\n    company_name:string,\n   \n}\ninterface BranchType{\n    _id?:string,\n    address?: string,\n    client_id?: ClientType,\n}\n\nconst Branch = () => {\n\n    const CLIENT_API ='api/client/name';\n    const BRANCH_API ='api/branch';\n\n    const classes = useStyles();\n    // notification snackbar\n    const { enqueueSnackbar } = useSnackbar();\n    const { mutate } = useSWRConfig();\n\n    // state\n    const [open, setOpen] = useState<boolean>(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false);\n    const [deleteId,setDeleteId] = useState<string>(null);\n    const [isEditMode, setIsEditMode] = useState<boolean>(false);\n    const [selectValue, setSelectValue] = useState<string>(''); // for select element value in edit mode\n    // form hook\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n\n    // swr config\n    const { data: clients, error: clientError } = useSWR(CLIENT_API, fetcher);\n    const { data: branches, error: branchError, } = useSWR(BRANCH_API, fetcher);\n\n    if (clientError) return <div>failed to load client data</div>\n    if (!clients) return <div>loading...</div>\n    if (branchError) return <div>failed to load branch data</div>\n    if (!branches) return <div>loading...</div>\n\n    console.log(clients);\n    console.log(branches);\n\n\n    \n    // save new branch and also update\n    const onSubmit = (data:BranchType) => {\n        console.log(data);\n        if (!isEditMode)\n            axios.post('api/branch',data)\n                .then(({ data }) => { setOpen(false); mutate(BRANCH_API); enqueueSnackbar(data.success_msg,{variant:'success'})})\n                .catch((err) => {console.log(err)});\n        else    \n            axios.patch('api/branch/' + data._id , data)\n                .then(({ data }) => { mutate(BRANCH_API); enqueueSnackbar(data.success_msg,{variant:'success'});setOpen(false)})\n                .catch((err) => {console.log(err);});\n    }\n\n    // when dialog closes\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // edit config\n    const handleEdit = (row:BranchType) => { \n        setIsEditMode(true);\n        setOpen(true);\n        setSelectValue(row.client_id._id);\n        reset(row);\n    }\n\n    const handleDelete = () => {\n        // console.log('deleting')\n        // console.log(deleteId);\n        \n\n        axios.delete('api/branch/'+deleteId)\n            .then(({ data }) => { mutate(BRANCH_API); setOpenDeleteDialog(false); enqueueSnackbar(data.success_msg,{variant:'success'})})\n            .catch((err) => {console.log(err)});\n    }\n\n    return (\n        \n        <Box m={5}>\n            \n            <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Add Branch</Button>\n\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">\n                    {isEditMode ? 'Edit Branch' : 'Add New Branch' }\n                </DialogTitle>\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n\n                        <InputLabel id=\"label\" >Client</InputLabel>\n                        <Select {...register(\"client_id\",{required:\"Client is required!\"})}\n                            labelId=\"label\" id=\"select\" fullWidth variant=\"outlined\"\n                            defaultValue={selectValue}\n                        >\n                            {clients && clients?.map(client => (\n                                <MenuItem key={client._id} value={client._id}> {client.company_name} </MenuItem>\n                            ))}\n                        </Select>\n\n                        <TextField {...register(\"address\", { required: \"Address is requied!\" })}\n                            autoFocus variant=\"outlined\" margin=\"normal\" id=\"address\" label=\"Address\" type=\"text\" fullWidth \n                        />\n                    \n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                            {isEditMode ? 'Update' : 'Save'}\n                        </Button>\n                        <Button onClick={() => {setOpen(false);reset({});}} color=\"secondary\" variant=\"contained\" >\n                            Close\n                        </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n\n\n            <TableContainer component={Paper} style={{ marginTop: '20px' }}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align=\"left\">Company Name</StyledTableCell>\n                            <StyledTableCell align=\"left\">Address</StyledTableCell>\n                            <StyledTableCell align=\"left\">Actions</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n\n                        {branches && branches?.map((row) => (\n                            <TableRow key={row._id}>\n                                <StyledTableCell align=\"left\">{row?.client_id?.company_name}</StyledTableCell>\n                                <StyledTableCell align=\"left\">{row.address}</StyledTableCell>\n                              \n                                <StyledTableCell align=\"left\" className={classes.icon}>\n                                    <PanTool fontSize=\"small\" onClick={() => handleEdit(row)} />\n                                    <Delete fontSize=\"medium\" onClick={() => {setDeleteId(row._id);setOpenDeleteDialog(true)}} />\n                                </StyledTableCell>\n                            </TableRow>\n                        ))}\n\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n\n            <ConfirmDelete \n                openDeleteDialog={openDeleteDialog} \n                setOpenDeleteDialog={setOpenDeleteDialog}\n                handleDelete={handleDelete} \n            />\n\n        </Box>\n    )\n}\n\nexport default Branch\n"]},"metadata":{},"sourceType":"module"}