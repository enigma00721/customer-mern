{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport useSWR, { useSWRConfig } from 'swr';\nimport fetcher from '../../../utils/fetcher';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contract = () => {\n  _s();\n\n  const {\n    mutate\n  } = useSWRConfig();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [selectValue, setSelectValue] = useState('');\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  const {\n    data: clients,\n    error: clientError\n  } = useSWR('api/client/name', fetcher);\n  if (clientError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 29\n  }, this);\n  if (!clients) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      onClick: () => setOpenDialog(true),\n      children: \"Add Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDialog,\n        onClose: () => {},\n        \"aria-labelledby\": \"form-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: isEditMode ? 'Update Contract' : 'Add Contract'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"label\",\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(\"client_id\", {\n              required: \"Client is required!\"\n            }),\n            labelId: \"label\",\n            id: \"select\",\n            fullWidth: true,\n            variant: \"outlined\",\n            defaultValue: selectValue,\n            autoFocus: true,\n            children: clients && (clients === null || clients === void 0 ? void 0 : clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: [\" \", client.company_name, \" \"]\n            }, client._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register('payment_status', {\n              required: 'Payment Status is required!'\n            }),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('contract_sign_date', {\n              required: 'Contract Sign Date is required!'\n            }),\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            label: \"Contract Sign Date\",\n            type: \"date\",\n            defaultValue: \"2020-01-01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('contract_end_date', {\n              required: 'Contract End Date is required!'\n            }),\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            label: \"Contract End Date\",\n            type: \"date\",\n            defaultValue: \"2022-01-01\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {},\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: isEditMode ? 'Update' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpenDialog(false),\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contract, \"CeWAjNiOQLSPMwiuc08VPp4RCYs=\", false, function () {\n  return [useSWRConfig, useForm, useSWR];\n});\n\n_c = Contract;\nexport default Contract;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contract\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","MenuItem","Select","TextField","useState","useSWR","useSWRConfig","fetcher","useForm","Contract","mutate","openDialog","setOpenDialog","isEditMode","setIsEditMode","selectValue","setSelectValue","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","clients","error","clientError","required","map","client","_id","company_name","shrink"],"mappings":"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","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\"\nimport { useState } from \"react\";\nimport useSWR, { useSWRConfig } from 'swr';\nimport fetcher from '../../../utils/fetcher';\nimport { useForm } from \"react-hook-form\";\n\nconst Contract = () => {\n\n    const { mutate } = useSWRConfig()\n    \n    const [openDialog,setOpenDialog] = useState<boolean>(false);\n    const [isEditMode,setIsEditMode] = useState<boolean>(false);\n    const [selectValue,setSelectValue] = useState<string>('');\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    \n    const onSubmit = data => console.log(data);\n\n    \n    const { data:clients, error: clientError} = useSWR('api/client/name', fetcher);\n\n    if (clientError) return <div>failed to load</div>\n    if (!clients) return <div>loading...</div>\n\n\n    return (\n        <Box m={5}>\n            \n            <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpenDialog(true)}>Add Contract</Button>\n\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <Dialog open={openDialog} onClose={() => {}} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">\n                        {isEditMode ? 'Update Contract' : 'Add Contract'}\n                    </DialogTitle>\n                    <DialogContent>\n\n                        <InputLabel id=\"label\" >Client</InputLabel>\n                        <Select {...register(\"client_id\", { required: \"Client is required!\" })}\n                            labelId=\"label\" id=\"select\" fullWidth variant=\"outlined\"\n                            defaultValue={selectValue} autoFocus\n                        >\n                            {clients && clients?.map(client => (\n                                <MenuItem key={client._id} value={client._id}> {client.company_name} </MenuItem>\n                            ))}\n                        </Select>\n                    \n                        <Select {...register('payment_status',{required:'Payment Status is required!'})}>\n                            <MenuItem>Paid</MenuItem>\n                            <MenuItem>Not Paid</MenuItem>\n                        </Select>\n\n                        <TextField\n                            {...register('contract_sign_date',{required:'Contract Sign Date is required!'})}\n                            fullWidth\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            label=\"Contract Sign Date\"\n                            type=\"date\"\n                            defaultValue=\"2020-01-01\"\n                         \n                        />\n                        <TextField\n                            {...register('contract_end_date', { required: 'Contract End Date is required!' })}\n                            fullWidth\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            label=\"Contract End Date\"\n                            type=\"date\"\n                            defaultValue=\"2022-01-01\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => {}} color=\"primary\" variant=\"contained\" type=\"submit\">\n                            {isEditMode ? 'Update' : 'Save'}\n                        </Button>\n                        <Button onClick={() => setOpenDialog(false)} color=\"secondary\" variant=\"contained\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </form>\n\n\n        </Box>\n    )\n}\n\nexport default Contract\n"]},"metadata":{},"sourceType":"module"}