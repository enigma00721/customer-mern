{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Paper, Select, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\"; // library\n\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios'; // import { useSnackbar } from 'notistack';\n// styles\n\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport useStyles from '../Partials/CommonStyles'; // icons\n\nimport { PanTool, Delete } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Branch = () => {\n  _s();\n\n  const classes = useStyles();\n  useEffect(() => {\n    axios.get('api/client/name').then(({\n      data\n    }) => {\n      console.log(data);\n      setClients(data);\n    });\n    getAllBranches();\n  }, []);\n  const [open, setOpen] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [selectValue, setSelectValue] = useState(''); // for select element\n\n  const [clients, setClients] = useState(null);\n  const [branches, setBranches] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    axios.post('api/branch', data).then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // when dialog closes\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleEdit = row => {\n    console.log('after edit click');\n    console.log(row.client_id._id);\n    setIsEditMode(true);\n    setOpen(true); // if(isEditMode)\n\n    setSelectValue(row.client_id._id);\n    reset(row); // setValue('client_id', row.client_id._id, { shouldValidate: true });\n    // setValue('address', row.address, { shouldValidate: true });\n  };\n\n  const getAllBranches = () => {\n    axios.get('api/branch').then(({\n      data\n    }) => {\n      console.log(data);\n      setBranches(data);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      onClick: () => setOpen(true),\n      children: \"Add Branch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: isEditMode ? 'Edit Branch' : 'Add New Branch'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"label\",\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(\"client_id\", {\n              required: \"Client is required!\"\n            }),\n            labelId: \"label\",\n            id: \"select\",\n            fullWidth: true,\n            variant: \"outlined\",\n            defaultValue: selectValue,\n            children: clients && (clients === null || clients === void 0 ? void 0 : clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: [\" \", client.company_name, \" \"]\n            }, client._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"address\", {\n              required: \"Address is requied!\"\n            }),\n            autoFocus: true,\n            variant: \"outlined\",\n            margin: \"normal\",\n            id: \"address\",\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            children: isEditMode ? 'Update' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setOpen(false);\n              reset({});\n            },\n            color: \"primary\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: branches && (branches === null || branches === void 0 ? void 0 : branches.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: row.client_id.company_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: row.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              className: classes.icon,\n              children: [/*#__PURE__*/_jsxDEV(PanTool, {\n                fontSize: \"small\",\n                onClick: () => handleEdit(row)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Delete, {\n                fontSize: \"medium\",\n                onClick: () => {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this)]\n          }, row._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Branch, \"6fV4HfnD6Dm38ZIeH0pQqbdWneU=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","MenuItem","Paper","Select","Table","TableBody","TableContainer","TableHead","TableRow","TextField","useEffect","useState","useForm","axios","StyledTableCell","useStyles","PanTool","Delete","Branch","classes","get","then","data","console","log","setClients","getAllBranches","open","setOpen","isEditMode","setIsEditMode","selectValue","setSelectValue","clients","branches","setBranches","register","handleSubmit","reset","setValue","formState","errors","onSubmit","post","response","catch","err","handleClose","handleEdit","row","client_id","_id","required","map","client","company_name","marginTop","address","icon"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,aAA9B,EAA6CC,aAA7C,EAA4DC,WAA5D,EAAyEC,UAAzE,EAAqFC,QAArF,EAA+FC,KAA/F,EAAsGC,MAAtG,EAA8GC,KAA9G,EAAqHC,SAArH,EAAgIC,cAAhI,EAAgJC,SAAhJ,EAA2JC,QAA3J,EAAqKC,SAArK,QAAsL,mBAAtL;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CACA;;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,oBAAhC;;;AAaA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACO,GAAN,CAAU,iBAAV,EACKC,IADL,CACU,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAY;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAAkBG,MAAAA,UAAU,CAACH,IAAD,CAAV;AAAiB,KAD1D;AAEAI,IAAAA,cAAc;AACjB,GAJQ,EAIP,EAJO,CAAT;AAMA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAU,KAAV,CAA5C;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAS,EAAT,CAA9C,CAZiB,CAY2C;;AAC5D,QAAM,CAACsB,OAAD,EAAWR,UAAX,IAAyBd,QAAQ,CAAe,IAAf,CAAvC;AACA,QAAM,CAACuB,QAAD,EAAYC,WAAZ,IAA2BxB,QAAQ,CAAe,IAAf,CAAzC;AAEA,QAAM;AAAEyB,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAtD,MAAqE7B,OAAO,EAAlF;;AAEA,QAAM8B,QAAQ,GAAIpB,IAAD,IAAqB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAT,IAAAA,KAAK,CAAC8B,IAAN,CAAW,YAAX,EAAwBrB,IAAxB,EACKD,IADL,CACWuB,QAAD,IAAc;AAACrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,QAAZ;AAAsB,KAD/C,EAEKC,KAFL,CAEYC,GAAD,IAAS;AAACvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,GAAZ;AAAiB,KAFtC;AAGH,GALD,CAlBiB,CAyBjB;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBnB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMoB,UAAU,GAAIC,GAAD,IAAoB;AACnC1B,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAG,CAACC,SAAJ,CAAcC,GAA1B;AACArB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP,CAJmC,CAKnC;;AACII,IAAAA,cAAc,CAACiB,GAAG,CAACC,SAAJ,CAAcC,GAAf,CAAd;AACJb,IAAAA,KAAK,CAACW,GAAD,CAAL,CAPmC,CAQnC;AACA;AACH,GAVD;;AAYA,QAAMvB,cAAc,GAAG,MAAM;AACzBb,IAAAA,KAAK,CAACO,GAAN,CAAU,YAAV,EACKC,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAAmBa,MAAAA,WAAW,CAACb,IAAD,CAAX;AAAmB,KADhE,EAEKuB,KAFL,CAEYC,GAAD,IAASvB,OAAO,CAACC,GAAR,CAAYsB,GAAZ,CAFpB;AAIH,GALD;;AAOA,sBAEI,QAAC,GAAD;AAAK,IAAA,CAAC,EAAE,CAAR;AAAA,4BAEI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAC,UAAhC;AAA2C,MAAA,OAAO,EAAE,MAAMlB,OAAO,CAAC,IAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,IAAd;AAAoB,MAAA,OAAO,EAAEoB,WAA7B;AAA0C,yBAAgB,mBAA1D;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,mBAAhB;AAAA,kBACKlB,UAAU,GAAG,aAAH,GAAmB;AADlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAM,QAAA,QAAQ,EAAEQ,YAAY,CAACK,QAAD,CAA5B;AAAA,gCACI,QAAC,aAAD;AAAA,kCAEI,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,MAAD,OAAYN,QAAQ,CAAC,WAAD,EAAa;AAACgB,cAAAA,QAAQ,EAAC;AAAV,aAAb,CAApB;AACI,YAAA,OAAO,EAAC,OADZ;AACoB,YAAA,EAAE,EAAC,QADvB;AACgC,YAAA,SAAS,MADzC;AAC0C,YAAA,OAAO,EAAC,UADlD;AAEI,YAAA,YAAY,EAAErB,WAFlB;AAAA,sBAIKE,OAAO,KAAIA,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEoB,GAAT,CAAaC,MAAM,iBAC3B,QAAC,QAAD;AAA2B,cAAA,KAAK,EAAEA,MAAM,CAACH,GAAzC;AAAA,8BAAgDG,MAAM,CAACC,YAAvD;AAAA,eAAeD,MAAM,CAACH,GAAtB;AAAA;AAAA;AAAA;AAAA,oBADQ,CAAJ;AAJZ;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAYI,QAAC,SAAD,OAAef,QAAQ,CAAC,SAAD,EAAY;AAAEgB,cAAAA,QAAQ,EAAE;AAAZ,aAAZ,CAAvB;AACI,YAAA,SAAS,MADb;AACc,YAAA,OAAO,EAAC,UADtB;AACiC,YAAA,MAAM,EAAC,QADxC;AACiD,YAAA,EAAE,EAAC,SADpD;AAC8D,YAAA,KAAK,EAAC,SADpE;AAC8E,YAAA,IAAI,EAAC,MADnF;AAC0F,YAAA,SAAS;AADnG;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAmBI,QAAC,aAAD;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,IAAI,EAAC,QAA7B;AAAA,sBACKvB,UAAU,GAAG,QAAH,GAAc;AAD7B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAM;AAACD,cAAAA,OAAO,CAAC,KAAD,CAAP;AAAeU,cAAAA,KAAK,CAAC,EAAD,CAAL;AAAW,aAAlD;AAAoD,YAAA,KAAK,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAyCI,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEpC,KAA3B;AAAkC,MAAA,KAAK,EAAE;AAAEsD,QAAAA,SAAS,EAAE;AAAb,OAAzC;AAAA,6BACI,QAAC,KAAD;AAAO,sBAAW,cAAlB;AAAA,gCACI,QAAC,SAAD;AAAA,iCACI,QAAC,QAAD;AAAA,oCACI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,SAAD;AAAA,oBAEKtB,QAAQ,KAAIA,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEmB,GAAV,CAAeJ,GAAD,iBACvB,QAAC,QAAD;AAAA,oCACI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA,wBAA+BA,GAAG,CAACC,SAAJ,CAAcK;AAA7C;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA,wBAA+BN,GAAG,CAACQ;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAII,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAA8B,cAAA,SAAS,EAAEtC,OAAO,CAACuC,IAAjD;AAAA,sCACI,QAAC,OAAD;AAAS,gBAAA,QAAQ,EAAC,OAAlB;AAA0B,gBAAA,OAAO,EAAE,MAAMV,UAAU,CAACC,GAAD;AAAnD;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD;AAAQ,gBAAA,QAAQ,EAAC,QAAjB;AAA0B,gBAAA,OAAO,EAAE,MAAM,CAAE;AAA3C;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA,aAAeA,GAAG,CAACE,GAAnB;AAAA;AAAA;AAAA;AAAA,kBADS,CAAJ;AAFb;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAwEH,CAzHD;;GAAMjC,M;UAEcH,S,EAc2DH,O;;;KAhBzEM,M;AA2HN,eAAeA,MAAf","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, MenuItem, Paper, Select, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\";\n// library\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\n// import { useSnackbar } from 'notistack';\n// styles\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport useStyles from '../Partials/CommonStyles'\n// icons\nimport { PanTool, Delete } from '@material-ui/icons'\n\ninterface ClientType{\n    _id?:string,\n    company_name:string,\n   \n}\ninterface BranchType{\n    _id?:string,\n    address?: string,\n    client_id?: ClientType,\n}\n\nconst Branch = () => {\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        axios.get('api/client/name')\n            .then(({data}) => {console.log(data);setClients(data)});\n        getAllBranches();\n    },[]);\n\n    const [open, setOpen] = useState<boolean>(false);\n    const [isEditMode, setIsEditMode] = useState<boolean>(false);\n    const [selectValue, setSelectValue] = useState<string>(''); // for select element\n    const [clients , setClients] = useState<ClientType[]>(null);\n    const [branches , setBranches] = useState<BranchType[]>(null);\n\n    const { register, handleSubmit, reset, setValue, formState: { errors } } = useForm();\n    \n    const onSubmit = (data:BranchType) => {\n        console.log(data);\n        axios.post('api/branch',data)\n            .then((response) => {console.log(response)})\n            .catch((err) => {console.log(err)});\n    }\n\n    // when dialog closes\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleEdit = (row:BranchType) => { \n        console.log('after edit click');\n        console.log(row.client_id._id);\n        setIsEditMode(true);\n        setOpen(true);\n        // if(isEditMode)\n            setSelectValue(row.client_id._id);\n        reset(row);\n        // setValue('client_id', row.client_id._id, { shouldValidate: true });\n        // setValue('address', row.address, { shouldValidate: true });\n    }\n\n    const getAllBranches = () => { \n        axios.get('api/branch')\n            .then(({ data }) => { console.log(data); setBranches(data);})\n            .catch((err) => console.log(err));\n        \n    }\n\n    return (\n        \n        <Box m={5}>\n            \n            <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Add Branch</Button>\n\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">\n                    {isEditMode ? 'Edit Branch' : 'Add New Branch' }\n                </DialogTitle>\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n\n                        <InputLabel id=\"label\" >Client</InputLabel>\n                        <Select {...register(\"client_id\",{required:\"Client is required!\"})}\n                            labelId=\"label\" id=\"select\" fullWidth variant=\"outlined\"\n                            defaultValue={selectValue}\n                        >\n                            {clients && clients?.map(client => (\n                                <MenuItem key={client._id} value={client._id}> {client.company_name} </MenuItem>\n                            ))}\n                        </Select>\n\n                        <TextField {...register(\"address\", { required: \"Address is requied!\" })}\n                            autoFocus variant=\"outlined\" margin=\"normal\" id=\"address\" label=\"Address\" type=\"text\" fullWidth \n                        />\n                    \n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button color=\"primary\" type=\"submit\">\n                            {isEditMode ? 'Update' : 'Save'}\n                        </Button>\n                        <Button onClick={() => {setOpen(false);reset({});}} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n\n\n            <TableContainer component={Paper} style={{ marginTop: '20px' }}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align=\"left\">Company Name</StyledTableCell>\n                            <StyledTableCell align=\"left\">Address</StyledTableCell>\n                            <StyledTableCell align=\"left\">Actions</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n\n                        {branches && branches?.map((row) => (\n                            <TableRow key={row._id}>\n                                <StyledTableCell align=\"left\">{row.client_id.company_name}</StyledTableCell>\n                                <StyledTableCell align=\"left\">{row.address}</StyledTableCell>\n                              \n                                <StyledTableCell align=\"left\" className={classes.icon}>\n                                    <PanTool fontSize=\"small\" onClick={() => handleEdit(row)} />\n                                    <Delete fontSize=\"medium\" onClick={() => {}} />\n                                </StyledTableCell>\n                            </TableRow>\n                        ))}\n\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n        </Box>\n    )\n}\n\nexport default Branch\n"]},"metadata":{},"sourceType":"module"}