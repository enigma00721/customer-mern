{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Profile/Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  var _errors$name, _errors$email, _errors$oldpassword, _errors$password;\n\n  // react hook form\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      name: \"\",\n      email: \"\"\n    }\n  });\n  useEffect(() => {\n    axios.get(\"/auth\").then(({\n      data\n    }) => {\n      console.log(data);\n      reset(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [reset]); // handle form update\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(TextField, { ...register(\"name\", {\n          required: \"Name is required!\",\n          pattern: {\n            value: /^[A-Za-z]+$/i,\n            message: \"Please enter valid Name with no special character\"\n          }\n        }),\n        variant: \"outlined\",\n        margin: \"normal\",\n        label: \"Name\",\n        type: \"text\",\n        fullWidth: true,\n        error: (errors === null || errors === void 0 ? void 0 : errors.name) ? true : false,\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"email\", {\n          required: \"Email is required!\"\n        }),\n        variant: \"outlined\",\n        margin: \"normal\",\n        label: \"Email Address\",\n        type: \"email\",\n        fullWidth: true,\n        error: (errors === null || errors === void 0 ? void 0 : errors.email) ? true : false,\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"oldpassword\", {\n          required: \"Old Password is required!\"\n        }),\n        variant: \"outlined\",\n        margin: \"normal\",\n        label: \"Old Password\",\n        type: \"password\",\n        fullWidth: true,\n        error: (errors === null || errors === void 0 ? void 0 : errors.oldpassword) ? true : false,\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$oldpassword = errors.oldpassword) === null || _errors$oldpassword === void 0 ? void 0 : _errors$oldpassword.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"password\", {\n          required: \"New Password is required!\",\n          minLength: {\n            value: 6,\n            message: \"Password must be at least 6 characters\"\n          },\n          maxLength: {\n            value: 20,\n            message: \"Password must not be at greater than 20 characters\"\n          }\n        }),\n        variant: \"outlined\",\n        margin: \"normal\",\n        label: \"New Password\",\n        type: \"password\",\n        fullWidth: true,\n        error: (errors === null || errors === void 0 ? void 0 : errors.password) ? true : false,\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message // helperText={errors?.password?.type==='minLength' && errors?.password?.}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"contained\",\n        size: \"large\",\n        fullWidth: true,\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"hqffO0vHIGOiFrMwMQvfQXTBZRc=\", false, function () {\n  return [useForm];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Profile/Profile.tsx"],"names":["Box","Button","TextField","axios","useEffect","useForm","Profile","register","handleSubmit","reset","formState","errors","defaultValues","name","email","get","then","data","console","log","catch","error","onSubmit","required","pattern","value","message","oldpassword","minLength","maxLength","password","marginTop"],"mappings":"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","sourcesContent":["import { Box, Button, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\n\ninterface UserType {\n  name: string;\n  email: string;\n  password: string;\n  oldpassword?: string;\n  _id?: string;\n}\n\nconst Profile = () => {\n  // react hook form\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<UserType>({\n    defaultValues: { name: \"\", email: \"\" },\n  });\n\n  useEffect(() => {\n    axios\n      .get(\"/auth\")\n      .then(({ data }) => {\n        console.log(data);\n        reset(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [reset]);\n\n  // handle form update\n  const onSubmit: SubmitHandler<UserType> = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <Box m={5}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <TextField\n          {...register(\"name\", {\n            required: \"Name is required!\",\n            pattern: {\n              value: /^[A-Za-z]+$/i,\n              message: \"Please enter valid Name with no special character\",\n            },\n          })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"Name\"\n          type=\"text\"\n          fullWidth\n          error={errors?.name ? true : false}\n          helperText={errors?.name?.message}\n        />\n\n        <TextField\n          {...register(\"email\", { required: \"Email is required!\" })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"Email Address\"\n          type=\"email\"\n          fullWidth\n          error={errors?.email ? true : false}\n          helperText={errors?.email?.message}\n        />\n        <TextField\n          {...register(\"oldpassword\", {\n            required: \"Old Password is required!\",\n          })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"Old Password\"\n          type=\"password\"\n          fullWidth\n          error={errors?.oldpassword ? true : false}\n          helperText={errors?.oldpassword?.message}\n        />\n\n        <TextField\n          {...register(\"password\", {\n            required: \"New Password is required!\",\n            minLength: {\n              value: 6,\n              message: \"Password must be at least 6 characters\",\n            },\n            maxLength: {\n              value: 20,\n              message: \"Password must not be at greater than 20 characters\",\n            },\n          })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          label=\"New Password\"\n          type=\"password\"\n          fullWidth\n          error={errors?.password ? true : false}\n          helperText={errors?.password?.message}\n          // helperText={errors?.password?.type==='minLength' && errors?.password?.}\n        />\n\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          fullWidth\n          style={{ marginTop: \"10px\" }}\n        >\n          Update\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}