{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/pages/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, TextField, Button, Typography } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport useStyles from './LoginStyles';\nimport axios from 'axios';\nimport { AuthenticationContext } from '../AuthenticationProvider';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    authenticationStatus,\n    setAuthenticationStatus\n  } = useContext(AuthenticationContext);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); // handle login form submit\n\n  const onSubmit = async data => {\n    // console.log(data);\n    const newData = await axios.post('/auth/login', data).then(response => {\n      setAuthenticationStatus('loggedIn');\n      console.log(authenticationStatus);\n    }); // redirect after successful login\n\n    if (newData.status === 200) history.push('/dashboard');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    className: classes.box,\n    p: 5,\n    width: \"25%\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h4\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: errors.email && true,\n      ...register('email', {\n        required: \"Email is required!\"\n      }),\n      id: \"outlined-basic\",\n      label: \"Email\",\n      variant: \"outlined\",\n      className: classes.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"span\",\n      variant: \"caption\",\n      className: classes.error,\n      children: ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && errors.email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('password', {\n        required: \"Password is required!\"\n      }),\n      error: errors.password && true,\n      id: \"outlined-basic\",\n      label: \"Password\",\n      variant: \"outlined\",\n      className: classes.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"span\",\n      variant: \"caption\",\n      className: classes.error,\n      children: ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === 'required' && errors.password.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: classes.input,\n      variant: \"contained\",\n      size: \"large\",\n      color: \"primary\",\n      style: {\n        marginTop: '20px'\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.text,\n      children: [\"No Account   \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 96\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"DphMHadqGGfO7+LFKgOU2HgU3wg=\", false, function () {\n  return [useStyles, useHistory, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/pages/Login.tsx"],"names":["Box","TextField","Button","Typography","Link","useHistory","useForm","useStyles","axios","AuthenticationContext","useContext","Login","classes","history","authenticationStatus","setAuthenticationStatus","register","handleSubmit","formState","errors","onSubmit","data","newData","post","then","response","console","log","status","push","box","title","email","required","input","error","type","message","password","marginTop","text"],"mappings":"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","sourcesContent":["import { Box, TextField, Button, Typography} from '@material-ui/core'\nimport { Link , useHistory} from 'react-router-dom'\nimport { useForm } from \"react-hook-form\";\nimport useStyles from './LoginStyles';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { AuthenticationContext} from '../AuthenticationProvider';\nimport {useContext} from 'react';\n\n\ninterface IForm {\n    email: string,\n    password: string,\n}\n\nconst Login = () => {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const {authenticationStatus, setAuthenticationStatus} = useContext(AuthenticationContext);\n\n    const { register, handleSubmit, formState: { errors } } = useForm();\n\n    // handle login form submit\n    const onSubmit = async (data: IForm) => {\n        // console.log(data);\n        const newData = await axios.post('/auth/login',data).then((response) => {setAuthenticationStatus('loggedIn');console.log(authenticationStatus)});\n        // redirect after successful login\n        if(newData.status===200)\n            history.push('/dashboard');\n    }\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} className={classes.box} p={5} width=\"25%\">\n            \n            <Typography className={classes.title} variant=\"h4\">Login</Typography>\n\n            <TextField error={errors.email && true} {...register('email',{required:\"Email is required!\"})} id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" className={classes.input}/>\n            <Typography component=\"span\" variant=\"caption\" className={classes.error}>\n                {errors.email?.type === 'required' && errors.email.message}\n            </Typography>\n\n\n            <TextField {...register('password',{required:\"Password is required!\"})} error={errors.password && true} id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" className={classes.input}/>\n            <Typography component=\"span\" variant=\"caption\" className={classes.error}>\n                {errors.password?.type === 'required' && errors.password.message}\n            </Typography>\n\n            <Button type=\"submit\" className={classes.input} variant=\"contained\" size=\"large\" color=\"primary\" style={{marginTop:'20px'}}>Submit</Button>\n\n            <Typography component=\"span\" variant=\"body2\" className={classes.text}>No Account   <Link to=\"/register\">Register</Link> </Typography>\n\n        </Box>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}