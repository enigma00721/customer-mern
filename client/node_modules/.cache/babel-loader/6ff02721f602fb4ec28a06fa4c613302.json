{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/PublicRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthenticationContext } from \"./AuthenticationProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicRoute = ({\n  component: Component,\n  restricted,\n  ...rest\n}) => {\n  _s();\n\n  const valueOf = useContext(AuthenticationContext);\n  const status = valueOf.authenticationStatus;\n  return (\n    /*#__PURE__*/\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    _jsxDEV(Route, { ...rest,\n      render: props => status === \"loggedOut\" && restricted ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(PublicRoute, \"MCS+rYh6icW0hL91FZGzsjZdTdk=\");\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/PublicRoute.tsx"],"names":["Route","Redirect","useContext","AuthenticationContext","PublicRoute","component","Component","restricted","rest","valueOf","status","authenticationStatus","props"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,qBAAT,QAAsC,0BAAtC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,UAAxB;AAAoC,KAAGC;AAAvC,CAAD,KAAmD;AAAA;;AACrE,QAAMC,OAAO,GAAGP,UAAU,CAACC,qBAAD,CAA1B;AACA,QAAMO,MAAM,GAAGD,OAAO,CAACE,oBAAvB;AAEA;AAAA;AACE;AACA;AACA,YAAC,KAAD,OACMH,IADN;AAEE,MAAA,MAAM,EAAGI,KAAD,IACNF,MAAM,KAAK,WAAX,IAA0BH,UAA1B,gBACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,gBAGE,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA;AAHF;AAcD,CAlBD;;GAAMR,W;;KAAAA,W;AAoBN,eAAeA,WAAf","sourcesContent":["import { Route, Redirect } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthenticationContext } from \"./AuthenticationProvider\";\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  const valueOf = useContext(AuthenticationContext);\n  const status = valueOf.authenticationStatus;\n\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    <Route\n      {...rest}\n      render={(props) =>\n        status === \"loggedOut\" && restricted ? (\n          <Redirect to=\"/dashboard\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n"]},"metadata":{},"sourceType":"module"}