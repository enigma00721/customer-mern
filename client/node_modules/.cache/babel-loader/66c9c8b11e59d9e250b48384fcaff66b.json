{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, Paper, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport useSWR from 'swr';\nimport axios from 'axios';\nimport fetcher from '../../../utils/fetcher';\nimport { useForm } from \"react-hook-form\";\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport { Delete, PanTool } from \"@material-ui/icons\";\nimport useStyles from '../Partials/CommonStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactPerson = () => {\n  _s();\n\n  const classes = useStyles();\n  const CLIENT_API = 'api/client/name';\n  const CONTACT_API = 'api/person'; // state\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [hasBranch, setHasBranch] = useState(false);\n  const [branch, setBranch] = useState(null); // react hook form\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm(); // swr api fetch\n\n  const {\n    data: clients,\n    error: clientsError\n  } = useSWR(CLIENT_API, fetcher);\n  const {\n    data: contacts,\n    error: contactsError\n  } = useSWR(CONTACT_API, fetcher);\n  if (clientsError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 30\n  }, this);\n  if (!clients) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 26\n  }, this);\n  if (contactsError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 31\n  }, this);\n  if (!contacts) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 27\n  }, this);\n  console.log('all contacts loaded');\n  console.log(contacts);\n\n  const onSubmit = data => {\n    console.log(data);\n    axios.post(CONTACT_API, data).then(response => {\n      console.log(response);\n    }).catch(error => console.log(error));\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleSelectChange = event => {\n    const id = event.target.value;\n    axios.get('/api/branch/client/' + id).then(({\n      data\n    }) => {\n      console.log(data);\n\n      if (data.length) {\n        setHasBranch(true);\n        setBranch(data);\n      } else {\n        setHasBranch(false);\n        setBranch(null);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleEdit = row => {\n    console.log(row);\n    reset(row);\n    setOpenDialog(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => setOpenDialog(true),\n      children: \"Add Contact Person\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Contact Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            ...register(\"client_id\"),\n            onChange: handleSelectChange,\n            label: \"Client\",\n            fullWidth: true,\n            variant: \"outlined\",\n            children: clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: client.company_name\n            }, client._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), hasBranch && /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            ...register(\"branch_id\"),\n            label: \"Branch\",\n            fullWidth: true,\n            variant: \"outlined\",\n            style: {\n              marginTop: '20px'\n            },\n            children: branch === null || branch === void 0 ? void 0 : branch.map(row => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: row._id,\n              children: row.address\n            }, row._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"name\"),\n            label: \"Name\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"email\"),\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"address\"),\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"phone\"),\n            label: \"Phone Number\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: \" Save \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Branch Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: contacts === null || contacts === void 0 ? void 0 : contacts.map(row => {\n            var _row$branch_id;\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.client_id.company_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: (_row$branch_id = row.branch_id) === null || _row$branch_id === void 0 ? void 0 : _row$branch_id.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                className: classes.icon,\n                children: [/*#__PURE__*/_jsxDEV(PanTool, {\n                  fontSize: \"small\",\n                  onClick: () => handleEdit(row)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Delete, {\n                  fontSize: \"medium\",\n                  onClick: () => {}\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactPerson, \"7iWnHS6kAdBMowIh2Xdp/WG0AHE=\", false, function () {\n  return [useStyles, useForm, useSWR, useSWR];\n});\n\n_c = ContactPerson;\nexport default ContactPerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactPerson\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","MenuItem","Paper","Table","TableBody","TableContainer","TableHead","TableRow","TextField","useState","useSWR","axios","fetcher","useForm","StyledTableCell","Delete","PanTool","useStyles","ContactPerson","classes","CLIENT_API","CONTACT_API","openDialog","setOpenDialog","hasBranch","setHasBranch","branch","setBranch","register","handleSubmit","reset","formState","errors","data","clients","error","clientsError","contacts","contactsError","console","log","onSubmit","post","then","response","catch","handleClose","handleSelectChange","event","id","target","value","get","length","handleEdit","row","map","client","_id","company_name","marginTop","address","client_id","branch_id","name","email","phone","icon"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,aAA9B,EAA6CC,aAA7C,EAA4DC,WAA5D,EAAyEC,QAAzE,EAAmFC,KAAnF,EAA0FC,KAA1F,EAAiGC,SAAjG,EAA4GC,cAA5G,EAA4HC,SAA5H,EAAuIC,QAAvI,EAAiJC,SAAjJ,QAAkK,mBAAlK;AACA,SAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,oBAAhC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;;AAkBA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAMC,OAAO,GAAGF,SAAS,EAAzB;AAEA,QAAMG,UAAU,GAAG,iBAAnB;AACA,QAAMC,WAAW,GAAG,YAApB,CALwB,CAOxB;;AACA,QAAM,CAAEC,UAAF,EAAaC,aAAb,IAA8Bd,QAAQ,CAAU,KAAV,CAA5C;AACA,QAAM,CAACe,SAAD,EAAWC,YAAX,IAA2BhB,QAAQ,CAAU,KAAV,CAAzC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAe,IAAf,CAApC,CAVwB,CAWxB;;AACA,QAAM;AAAEmB,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAA5C,MAA2DnB,OAAO,EAAxE,CAZwB,CAexB;;AACA,QAAM;AAAEoB,IAAAA,IAAI,EAAEC,OAAR;AAAiBC,IAAAA,KAAK,EAAEC;AAAxB,MAAyC1B,MAAM,CAACU,UAAD,EAAaR,OAAb,CAArD;AACA,QAAM;AAAEqB,IAAAA,IAAI,EAAEI,QAAR;AAAkBF,IAAAA,KAAK,EAAEG;AAAzB,MAA2C5B,MAAM,CAACW,WAAD,EAAcT,OAAd,CAAvD;AACA,MAAIwB,YAAJ,EAAkB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAClB,MAAI,CAACF,OAAL,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,MAAII,aAAJ,EAAmB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACnB,MAAI,CAACD,QAAL,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEfE,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,QAAMI,QAAQ,GAAGR,IAAI,IAAI;AACrBM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAtB,IAAAA,KAAK,CAAC+B,IAAN,CAAWrB,WAAX,EAAyBY,IAAzB,EACKU,IADL,CACUC,QAAQ,IAAI;AAACL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AAAsB,KAD7C,EAEKC,KAFL,CAEWV,KAAK,IAAII,OAAO,CAACC,GAAR,CAAYL,KAAZ,CAFpB;AAGH,GALD;;AAQA,QAAMW,WAAW,GAAG,MAAM;AAACvB,IAAAA,aAAa,CAAC,KAAD,CAAb;AAAsB,GAAjD;;AAEA,QAAMwB,kBAAkB,GAAGC,KAAD,IAAe;AAErC,UAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAxB;AAEAxC,IAAAA,KAAK,CAACyC,GAAN,CAAU,wBAAsBH,EAAhC,EACKN,IADL,CACU,CAAC;AAACV,MAAAA;AAAD,KAAD,KAAY;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AACA,UAAGA,IAAI,CAACoB,MAAR,EAAgB;AACZ5B,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,SAAS,CAACM,IAAD,CAAT;AACH,OAHD,MAGK;AACDR,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,KAVL,EAWKkB,KAXL,CAWYV,KAAD,IAAW;AAACI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAAmB,KAX1C;AAYH,GAhBD;;AAkBA,QAAMmB,UAAU,GAAIC,GAAD,IAA2B;AAC1ChB,IAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACAzB,IAAAA,KAAK,CAACyB,GAAD,CAAL;AACAhC,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAJD;;AAMA,sBACI,QAAC,GAAD;AAAK,IAAA,CAAC,EAAE,CAAR;AAAA,4BAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAA2C,MAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,IAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,UAAd;AAA0B,MAAA,OAAO,EAAEwB,WAAnC;AAAgD,yBAAgB,mBAAhE;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAEjB,YAAY,CAACY,QAAD,CAA5B;AAAA,gCACI,QAAC,aAAD;AAAA,kCAEI,QAAC,SAAD;AAAW,YAAA,MAAM,MAAjB;AAAA,eAAsBb,QAAQ,CAAC,WAAD,CAA9B;AAA6C,YAAA,QAAQ,EAAEmB,kBAAvD;AAA2E,YAAA,KAAK,EAAC,QAAjF;AAA0F,YAAA,SAAS,MAAnG;AAAqG,YAAA,OAAO,EAAC,UAA7G;AAAA,sBACKb,OAAO,CAACsB,GAAR,CAAaC,MAAD,iBACT,QAAC,QAAD;AAA2B,cAAA,KAAK,EAAEA,MAAM,CAACC,GAAzC;AAAA,wBAA+CD,MAAM,CAACE;AAAtD,eAAeF,MAAM,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAQKlC,SAAS,iBACN,QAAC,SAAD;AAAW,YAAA,MAAM,MAAjB;AAAA,eAAuBI,QAAQ,CAAC,WAAD,CAA/B;AAA8C,YAAA,KAAK,EAAC,QAApD;AAA6D,YAAA,SAAS,MAAtE;AAAuE,YAAA,OAAO,EAAC,UAA/E;AAA0F,YAAA,KAAK,EAAE;AAAEgC,cAAAA,SAAS,EAAE;AAAb,aAAjG;AAAA,sBACKlC,MADL,aACKA,MADL,uBACKA,MAAM,CAAE8B,GAAR,CAAaD,GAAD,iBACT,QAAC,QAAD;AAAwB,cAAA,KAAK,EAAEA,GAAG,CAACG,GAAnC;AAAA,wBAAyCH,GAAG,CAACM;AAA7C,eAAeN,GAAG,CAACG,GAAnB;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBATR,eAgBI,QAAC,SAAD;AAAW,YAAA,OAAO,EAAC,UAAnB;AAA8B,YAAA,MAAM,EAAC,QAArC;AAAA,eAAkD9B,QAAQ,CAAC,MAAD,CAA1D;AAAoE,YAAA,KAAK,EAAC,MAA1E;AAAiF,YAAA,IAAI,EAAC,MAAtF;AAA6F,YAAA,SAAS;AAAtG;AAAA;AAAA;AAAA;AAAA,kBAhBJ,eAiBI,QAAC,SAAD;AAAW,YAAA,OAAO,EAAC,UAAnB;AAA8B,YAAA,MAAM,EAAC,QAArC;AAAA,eAAkDA,QAAQ,CAAC,OAAD,CAA1D;AAAqE,YAAA,KAAK,EAAC,eAA3E;AAA2F,YAAA,IAAI,EAAC,OAAhG;AAAwG,YAAA,SAAS;AAAjH;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eAkBI,QAAC,SAAD;AAAW,YAAA,OAAO,EAAC,UAAnB;AAA8B,YAAA,MAAM,EAAC,QAArC;AAAA,eAAkDA,QAAQ,CAAC,SAAD,CAA1D;AAAuE,YAAA,KAAK,EAAC,SAA7E;AAAuF,YAAA,IAAI,EAAC,MAA5F;AAAmG,YAAA,SAAS;AAA5G;AAAA;AAAA;AAAA;AAAA,kBAlBJ,eAmBI,QAAC,SAAD;AAAW,YAAA,OAAO,EAAC,UAAnB;AAA8B,YAAA,MAAM,EAAC,QAArC;AAAA,eAAkDA,QAAQ,CAAC,OAAD,CAA1D;AAAqE,YAAA,KAAK,EAAC,cAA3E;AAA0F,YAAA,IAAI,EAAC,MAA/F;AAAsG,YAAA,SAAS;AAA/G;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAuBI,QAAC,aAAD;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEkB,WAAjB;AAA8B,YAAA,KAAK,EAAC,SAApC;AAA8C,YAAA,OAAO,EAAC,WAAtD;AAAkE,YAAA,IAAI,EAAC,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEA,WAAjB;AAA8B,YAAA,KAAK,EAAC,WAApC;AAAgD,YAAA,OAAO,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAwCI,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAE5C,KAA3B;AAAkC,MAAA,KAAK,EAAE;AAAE0D,QAAAA,SAAS,EAAE;AAAb,OAAzC;AAAA,6BACI,QAAC,KAAD;AAAO,sBAAW,cAAlB;AAAA,gCACI,QAAC,SAAD;AAAA,iCACI,QAAC,QAAD;AAAA,oCACI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,SAAD;AAAA,oBACKvB,QADL,aACKA,QADL,uBACKA,QAAQ,CAAEmB,GAAV,CAAeD,GAAD;AAAA;;AAAA,gCACX,QAAC,QAAD;AAAA,sCACI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+BA,GAAG,CAACO,SAAJ,CAAcH;AAA7C;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,4CAA+BJ,GAAG,CAACQ,SAAnC,mDAA+B,eAAeF;AAA9C;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+BN,GAAG,CAACS;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+BT,GAAG,CAACU;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+BV,GAAG,CAACW;AAAnC;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+BX,GAAG,CAACM;AAAnC;AAAA;AAAA;AAAA;AAAA,sBANJ,eAQI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAA8B,gBAAA,SAAS,EAAE1C,OAAO,CAACgD,IAAjD;AAAA,wCACI,QAAC,OAAD;AAAS,kBAAA,QAAQ,EAAC,OAAlB;AAA0B,kBAAA,OAAO,EAAE,MAAMb,UAAU,CAACC,GAAD;AAAnD;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,MAAD;AAAQ,kBAAA,QAAQ,EAAC,QAAjB;AAA0B,kBAAA,OAAO,EAAE,MAAM,CAAG;AAA5C;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA,eAAeA,GAAG,CAACG,GAAnB;AAAA;AAAA;AAAA;AAAA,oBADW;AAAA,WAAd;AADL;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4EH,CAxID;;GAAMxC,a;UAEcD,S,EAUiDJ,O,EAIlBH,M,EACEA,M;;;KAjB/CQ,a;AA0IN,eAAeA,aAAf","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, Paper, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\";\nimport useSWR from 'swr';\nimport axios from 'axios';\nimport fetcher from '../../../utils/fetcher';\nimport { useForm } from \"react-hook-form\";\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport { Delete, PanTool } from \"@material-ui/icons\";\nimport useStyles from '../Partials/CommonStyles'\n\n\ninterface BranchType{\n    _id: string;\n    address: string;\n    client_id: string;\n}\n\ninterface ContactPersonType{\n    client_id: string;\n    branch_id?: string;\n    name: string;\n    email: string;\n    phone: string;\n    address: string;\n}\n\nconst ContactPerson = () => {\n\n    const classes = useStyles();\n\n    const CLIENT_API = 'api/client/name';\n    const CONTACT_API = 'api/person';\n\n    // state\n    const [ openDialog,setOpenDialog] = useState<boolean>(false);\n    const [hasBranch,setHasBranch] = useState<boolean>(false);\n    const [branch, setBranch] = useState<BranchType[]>(null);\n    // react hook form\n    const { register, handleSubmit, reset, formState: { errors } } = useForm<ContactPersonType>();\n\n\n    // swr api fetch\n    const { data: clients, error: clientsError } = useSWR(CLIENT_API, fetcher);\n    const { data: contacts, error: contactsError } = useSWR(CONTACT_API, fetcher);\n    if (clientsError) return <div>failed to load</div>\n    if (!clients) return <div>loading...</div>\n    if (contactsError) return <div>failed to load</div>\n    if (!contacts) return <div>loading...</div>\n\n    console.log('all contacts loaded');\n    console.log(contacts);\n  \n    const onSubmit = data => {\n        console.log(data)\n        axios.post(CONTACT_API , data)\n            .then(response => {console.log(response)})\n            .catch(error => console.log(error));\n    };\n\n\n    const handleClose = () => {setOpenDialog(false);}\n\n    const handleSelectChange =(event:any) => {\n        \n        const id = event.target.value;\n\n        axios.get('/api/branch/client/'+id)\n            .then(({data}) => {\n                console.log(data);\n                if(data.length) {\n                    setHasBranch(true);\n                    setBranch(data);\n                }else{\n                    setHasBranch(false);\n                    setBranch(null);\n                }\n            })\n            .catch((error) => {console.log(error)});\n    }\n\n    const handleEdit = (row:ContactPersonType) => {\n        console.log(row);\n        reset(row);\n        setOpenDialog(true);\n    }\n\n    return (\n        <Box m={5}>\n\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpenDialog(true)}>\n                Add Contact Person\n            </Button>\n\n            <Dialog open={openDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Contact Person</DialogTitle>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n\n                        <TextField select {...register(\"client_id\")} onChange={handleSelectChange} label=\"Client\" fullWidth  variant=\"outlined\">\n                            {clients.map((client) => (\n                                <MenuItem key={client._id} value={client._id}>{client.company_name}</MenuItem>\n                            ))}\n                        </TextField>\n\n                        {hasBranch &&  \n                            <TextField select  {...register(\"branch_id\")} label=\"Branch\" fullWidth variant=\"outlined\" style={{ marginTop: '20px' }}>\n                                {branch?.map((row) => (\n                                    <MenuItem key={row._id} value={row._id}>{row.address}</MenuItem>\n                                    ))}\n                            </TextField>\n                        }\n\n                        <TextField variant=\"outlined\" margin=\"normal\" {...register(\"name\")} label=\"Name\" type=\"text\" fullWidth />\n                        <TextField variant=\"outlined\" margin=\"normal\" {...register(\"email\")} label=\"Email Address\" type=\"email\" fullWidth />\n                        <TextField variant=\"outlined\" margin=\"normal\" {...register(\"address\")} label=\"Address\" type=\"text\" fullWidth />\n                        <TextField variant=\"outlined\" margin=\"normal\" {...register(\"phone\")} label=\"Phone Number\" type=\"text\" fullWidth />\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" variant=\"contained\" type=\"submit\"> Save </Button>\n                        <Button onClick={handleClose} color=\"secondary\" variant=\"contained\">Close</Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n\n\n\n            <TableContainer component={Paper} style={{ marginTop: '20px' }}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align=\"left\">Company Name</StyledTableCell>\n                            <StyledTableCell align=\"left\">Branch Address</StyledTableCell>\n                            <StyledTableCell align=\"left\">Name</StyledTableCell>\n                            <StyledTableCell align=\"left\">Email</StyledTableCell>\n                            <StyledTableCell align=\"left\">Phone</StyledTableCell>\n                            <StyledTableCell align=\"left\">Address</StyledTableCell>\n                            <StyledTableCell align=\"left\">Actions</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {contacts?.map((row) => (\n                            <TableRow key={row._id}>\n                                <StyledTableCell align=\"left\">{row.client_id.company_name}</StyledTableCell>\n                                <StyledTableCell align=\"left\">{row.branch_id?.address}</StyledTableCell>\n                                <StyledTableCell align=\"left\">{row.name}</StyledTableCell>\n                                <StyledTableCell align=\"left\">{row.email}</StyledTableCell>\n                                <StyledTableCell align=\"left\">{row.phone}</StyledTableCell>\n                                <StyledTableCell align=\"left\">{row.address}</StyledTableCell>\n\n                                <StyledTableCell align=\"left\" className={classes.icon}>\n                                    <PanTool fontSize=\"small\" onClick={() => handleEdit(row)} />\n                                    <Delete fontSize=\"medium\" onClick={() => { }} />\n                                </StyledTableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n        </Box>\n    )\n}\n\nexport default ContactPerson\n"]},"metadata":{},"sourceType":"module"}