{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, TextField, TableContainer, Table, TableHead, TableRow, TableBody, Paper, Chip, IconButton } from \"@material-ui/core\";\nimport { useState } from \"react\"; // utils\n\nimport fetcher from \"../../../utils/fetcher\"; // library\n\nimport useSWR, { useSWRConfig } from \"swr\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"notistack\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\"; // icons\n\nimport { Delete, Edit } from \"@material-ui/icons\"; // styles\n\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// interface ContractEditType {\n//   _id?: string;\n//   client_id: ClientType;\n//   contract_end_date: string;\n//   contract_sign_date: string;\n//   payment_status: string;\n// }\nconst Contract = () => {\n  _s();\n\n  // styles config\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // swr config\n\n  const {\n    mutate\n  } = useSWRConfig();\n  const CLIENT_API = \"api/client/name\";\n  const CONTRACT_API = \"api/contract/\"; // state\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [updateId, setUpdateId] = useState(null);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [selectPaymentValue, setSelectPaymentValue] = useState(\"\");\n  const [selectClientValue, setSelectClientValue] = useState(\"\"); // date today and one year after\n\n  const signDate = moment().format(\"yyyy-MM-DD\").toString();\n  const endDate = moment().add(1, \"y\").format(\"yyyy-MM-DD\").toString(); // hook form default date values\n\n  const defaultValues = {\n    contract_sign_date: signDate,\n    contract_end_date: endDate,\n    client_id: selectClientValue ? selectClientValue : undefined,\n    payment_status: selectPaymentValue ? selectPaymentValue : undefined\n  }; // hook form\n\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm({\n    defaultValues: defaultValues\n  }); // FETCH DATA\n\n  const {\n    data: clients,\n    error: clientError\n  } = useSWR(CLIENT_API, fetcher);\n  const {\n    data: contracts,\n    error: contractError\n  } = useSWR(CONTRACT_API, fetcher);\n  if (clientError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 27\n  }, this);\n  if (!clients) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 24\n  }, this);\n  if (contractError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 29\n  }, this);\n  if (!contracts) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 26\n  }, this); // console.log('whole contract');\n  // console.log(contracts);\n\n  const onSubmit = data => {\n    if (!isEditMode) axios.post(CONTRACT_API, data).then(({\n      data\n    }) => {\n      mutate(CONTRACT_API);\n      setOpenDialog(false);\n      enqueueSnackbar(data.success_msg, {\n        variant: \"success\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });else {\n      console.log(data);\n      axios.patch(CONTRACT_API + updateId, data).then(({\n        data\n      }) => {\n        mutate(CONTRACT_API);\n        setOpenDialog(false);\n        setIsEditMode(false);\n        enqueueSnackbar(data.success_msg, {\n          variant: \"success\"\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const handleEdit = row => {\n    console.log(\"inside rdidt\");\n    console.log(row._id);\n    reset({\n      contract_sign_date: row.contract_sign_date.split(\"T\")[0],\n      contract_end_date: row.contract_end_date.split(\"T\")[0]\n    });\n    setSelectPaymentValue(row.payment_status);\n    setSelectClientValue(row.client_id._id); // TODO: how to fix it think later\n\n    setOpenDialog(true);\n    setIsEditMode(true);\n  };\n\n  const handleDelete = () => {\n    axios.delete(CONTRACT_API + updateId).then(({\n      data\n    }) => {\n      console.log(data);\n      mutate(CONTRACT_API);\n      setOpenDeleteDialog(false);\n      enqueueSnackbar(data.success_msg, {\n        variant: \"success\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleAddContract = () => {\n    console.log(\"add\");\n    setSelectPaymentValue(undefined);\n    setSelectClientValue(undefined);\n    setIsEditMode(false);\n    setOpenDialog(true);\n    reset(defaultValues);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      onClick: handleAddContract,\n      children: \"Add Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => {\n        setIsEditMode(false);\n        setOpenDialog(false);\n        setSelectPaymentValue(undefined);\n      },\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: isEditMode ? \"Update Contract\" : \"Add Contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            ...register(\"client_id\"),\n            style: {\n              marginBottom: \"10px\"\n            },\n            label: \"Client\",\n            fullWidth: true,\n            variant: \"outlined\",\n            defaultValue: selectClientValue // FIXME: remove default value from here to hook form with dynamic state data\n            ,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"Choose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), clients && clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: client.company_name\n            }, client._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            inputProps: register(\"payment_status\"),\n            label: \"Payment Status\",\n            fullWidth: true,\n            variant: \"outlined\",\n            defaultValue: selectPaymentValue,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"Choose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"paid\",\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"notpaid\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"contract_sign_date\", {\n              required: \"Contract Sign Date is required!\"\n            }),\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            label: \"Contract Sign Date\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register(\"contract_end_date\", {\n              required: \"Contract End Date is required!\"\n            }),\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            label: \"Contract End Date\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {},\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: isEditMode ? \"Update\" : \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setOpenDialog(false);\n              reset({});\n            },\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Payment Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Contract Sign Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Contract End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: contracts && (contracts === null || contracts === void 0 ? void 0 : contracts.map(row => {\n            var _row$client_id;\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row === null || row === void 0 ? void 0 : (_row$client_id = row.client_id) === null || _row$client_id === void 0 ? void 0 : _row$client_id.company_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.payment_status === \"paid\" ? /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"medium\",\n                  label: row.payment_status,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"medium\",\n                  label: row.payment_status,\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"MMMM Do YYYY\",\n                  children: row.contract_sign_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  fromNow: true,\n                  children: row.contract_end_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    fontSize: \"medium\",\n                    onClick: () => {\n                      setUpdateId(row._id);\n                      console.log(row);\n                      handleEdit(row);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(Delete, {\n                    fontSize: \"medium\",\n                    onClick: () => {\n                      setUpdateId(row._id);\n                      setOpenDeleteDialog(true);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDelete, {\n      handleDelete: handleDelete,\n      setOpenDeleteDialog: setOpenDeleteDialog,\n      openDeleteDialog: openDeleteDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contract, \"1ogBPcb2T/Wa+vxWsC+P+kxpJDo=\", false, function () {\n  return [useSnackbar, useSWRConfig, useForm, useSWR, useSWR];\n});\n\n_c = Contract;\nexport default Contract;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contract\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","MenuItem","TextField","TableContainer","Table","TableHead","TableRow","TableBody","Paper","Chip","IconButton","useState","fetcher","useSWR","useSWRConfig","useForm","axios","useSnackbar","Moment","moment","Delete","Edit","StyledTableCell","ConfirmDelete","Contract","enqueueSnackbar","mutate","CLIENT_API","CONTRACT_API","openDialog","setOpenDialog","isEditMode","setIsEditMode","updateId","setUpdateId","openDeleteDialog","setOpenDeleteDialog","selectPaymentValue","setSelectPaymentValue","selectClientValue","setSelectClientValue","signDate","format","toString","endDate","add","defaultValues","contract_sign_date","contract_end_date","client_id","undefined","payment_status","register","handleSubmit","reset","data","clients","error","clientError","contracts","contractError","onSubmit","post","then","success_msg","variant","catch","err","console","log","patch","handleEdit","row","_id","split","handleDelete","delete","handleAddContract","marginBottom","map","client","company_name","required","marginTop"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  MenuItem,\n  TextField,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  Paper,\n  Chip,\n  IconButton,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\n// utils\nimport fetcher from \"../../../utils/fetcher\";\n// library\nimport useSWR, { useSWRConfig } from \"swr\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"notistack\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n// icons\nimport { Delete, Edit } from \"@material-ui/icons\";\n// styles\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\n\ninterface ClientType {\n  _id: string;\n  company_name: string;\n}\ninterface ContractType {\n  _id: string;\n  client_id:  ClientType |string;\n  contract_end_date: string;\n  contract_sign_date: string;\n  payment_status: string;\n}\n\n// interface ContractEditType {\n//   _id?: string;\n//   client_id: ClientType;\n//   contract_end_date: string;\n//   contract_sign_date: string;\n//   payment_status: string;\n// }\n\nconst Contract = () => {\n  // styles config\n  const { enqueueSnackbar } = useSnackbar();\n\n  // swr config\n  const { mutate } = useSWRConfig();\n  const CLIENT_API = \"api/client/name\";\n  const CONTRACT_API = \"api/contract/\";\n\n  // state\n  const [openDialog, setOpenDialog] = useState<boolean>(false);\n  const [isEditMode, setIsEditMode] = useState<boolean>(false);\n  const [updateId, setUpdateId] = useState<string>(null);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false);\n  const [selectPaymentValue, setSelectPaymentValue] = useState<string>(\"\");\n  const [selectClientValue, setSelectClientValue] = useState<string>(\"\");\n\n  // date today and one year after\n  const signDate: string = moment().format(\"yyyy-MM-DD\").toString();\n  const endDate: string = moment().add(1, \"y\").format(\"yyyy-MM-DD\").toString();\n\n  // hook form default date values\n  const defaultValues = {\n    contract_sign_date: signDate,\n    contract_end_date: endDate,\n    client_id: selectClientValue ? selectClientValue : undefined,\n    payment_status: selectPaymentValue ? selectPaymentValue : undefined,\n  };\n\n  // hook form\n  const { register, handleSubmit, reset } = useForm<ContractType>({\n    defaultValues: defaultValues,\n  });\n\n  // FETCH DATA\n  const { data: clients, error: clientError } = useSWR(CLIENT_API, fetcher);\n  const { data: contracts, error: contractError } = useSWR(\n    CONTRACT_API,\n    fetcher\n  );\n\n  if (clientError) return <div>failed to load</div>;\n  if (!clients) return <div>loading...</div>;\n  if (contractError) return <div>failed to load</div>;\n  if (!contracts) return <div>loading...</div>;\n  // console.log('whole contract');\n  // console.log(contracts);\n\n  const onSubmit = (data: ContractType) => {\n    if (!isEditMode)\n      axios\n        .post(CONTRACT_API, data)\n        .then(({ data }) => {\n          mutate(CONTRACT_API);\n          setOpenDialog(false);\n          enqueueSnackbar(data.success_msg, { variant: \"success\" });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    else {\n      console.log(data);\n      axios\n        .patch(CONTRACT_API + updateId, data)\n        .then(({ data }) => {\n          mutate(CONTRACT_API);\n          setOpenDialog(false);\n          setIsEditMode(false);\n          enqueueSnackbar(data.success_msg, { variant: \"success\" });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const handleEdit = (row: ContractType) => {\n    console.log(\"inside rdidt\");\n    console.log(row._id);\n    reset({\n      contract_sign_date: row.contract_sign_date.split(\"T\")[0],\n      contract_end_date: row.contract_end_date.split(\"T\")[0],\n    });\n    setSelectPaymentValue(row.payment_status);\n    setSelectClientValue(row.client_id._id); // TODO: how to fix it think later\n    setOpenDialog(true);\n    setIsEditMode(true);\n  };\n\n  const handleDelete = () => {\n    axios\n      .delete(CONTRACT_API + updateId)\n      .then(({ data }) => {\n        console.log(data);\n        mutate(CONTRACT_API);\n        setOpenDeleteDialog(false);\n        enqueueSnackbar(data.success_msg, { variant: \"success\" });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddContract = () => {\n    console.log(\"add\");\n    setSelectPaymentValue(undefined);\n    setSelectClientValue(undefined);\n    setIsEditMode(false);\n    setOpenDialog(true);\n    reset(defaultValues);\n  };\n\n  return (\n    <Box m={5}>\n      <Button color=\"primary\" variant=\"outlined\" onClick={handleAddContract}>\n        Add Contract\n      </Button>\n\n      {/* add/update dialog/model */}\n      <Dialog\n        open={openDialog}\n        onClose={() => {\n          setIsEditMode(false);\n          setOpenDialog(false);\n          setSelectPaymentValue(undefined);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {isEditMode ? \"Update Contract\" : \"Add Contract\"}\n        </DialogTitle>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogContent>\n            <TextField\n              select\n              {...register(\"client_id\")}\n              style={{ marginBottom: \"10px\" }}\n              label=\"Client\"\n              fullWidth\n              variant=\"outlined\"\n              defaultValue={selectClientValue}\n              // FIXME: remove default value from here to hook form with dynamic state data\n            >\n              <MenuItem value=\"\">Choose</MenuItem>\n              {clients &&\n                clients.map((client) => (\n                  <MenuItem key={client._id} value={client._id}>\n                    {client.company_name}\n                  </MenuItem>\n                ))}\n            </TextField>\n\n            <TextField\n              select\n              inputProps={register(\"payment_status\")}\n              label=\"Payment Status\"\n              fullWidth\n              variant=\"outlined\"\n              defaultValue={selectPaymentValue}\n            >\n              <MenuItem value=\"\">Choose</MenuItem>\n              <MenuItem value=\"paid\">Paid</MenuItem>\n              <MenuItem value=\"notpaid\">Not Paid</MenuItem>\n            </TextField>\n\n            <TextField\n              {...register(\"contract_sign_date\", {\n                required: \"Contract Sign Date is required!\",\n              })}\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Contract Sign Date\"\n              type=\"date\"\n            />\n            <TextField\n              {...register(\"contract_end_date\", {\n                required: \"Contract End Date is required!\",\n              })}\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Contract End Date\"\n              type=\"date\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {}}\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n            >\n              {isEditMode ? \"Update\" : \"Save\"}\n            </Button>\n            <Button\n              onClick={() => {\n                setOpenDialog(false);\n                reset({});\n              }}\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Close\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n      {/* add/update dialog/model */}\n\n      {/* table */}\n      <TableContainer component={Paper} style={{ marginTop: \"20px\" }}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"left\">Company Name</StyledTableCell>\n              <StyledTableCell align=\"left\">Payment Status</StyledTableCell>\n              <StyledTableCell align=\"left\">Contract Sign Date</StyledTableCell>\n              <StyledTableCell align=\"left\">Contract End Date</StyledTableCell>\n              <StyledTableCell align=\"left\">Actions</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {contracts &&\n              contracts?.map((row) => (\n                <TableRow key={row._id} hover={true}>\n                  <StyledTableCell align=\"left\">\n                    {row?.client_id?.company_name}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {row.payment_status === \"paid\" ? (\n                      <Chip\n                        size=\"medium\"\n                        label={row.payment_status}\n                        color=\"primary\"\n                      />\n                    ) : (\n                      <Chip\n                        size=\"medium\"\n                        label={row.payment_status}\n                        color=\"secondary\"\n                      />\n                    )}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    <Moment format=\"MMMM Do YYYY\">\n                      {row.contract_sign_date}\n                    </Moment>\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    <Moment fromNow>{row.contract_end_date}</Moment>\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    <IconButton>\n                      <Edit\n                        fontSize=\"medium\"\n                        onClick={() => {\n                          setUpdateId(row._id);\n                          console.log(row);\n                          handleEdit(row);\n                        }}\n                      />\n                    </IconButton>\n\n                    <IconButton>\n                      <Delete\n                        fontSize=\"medium\"\n                        onClick={() => {\n                          setUpdateId(row._id);\n                          setOpenDeleteDialog(true);\n                        }}\n                      />\n                    </IconButton>\n                  </StyledTableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* table */}\n\n      <ConfirmDelete\n        handleDelete={handleDelete}\n        setOpenDeleteDialog={setOpenDeleteDialog}\n        openDeleteDialog={openDeleteDialog}\n      />\n    </Box>\n  );\n};\n\nexport default Contract;\n"]},"metadata":{},"sourceType":"module"}