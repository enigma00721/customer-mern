{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/Count.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  root: {\n    minWidth: \"275px\",\n    minHeight: \"120px\",\n    margin: \"10px\",\n    display: \"flex\",\n    padding: \"0 10px\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst Count = () => {\n  _s();\n\n  var _Object$keys;\n\n  const classes = useStyles();\n  const [count, setCount] = useState(null);\n  useLayoutEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input])(() => {\n    axios.get(\"/api/count/getDashboardData\").then(({\n      data\n    }) => {\n      setCount(data);\n      console.log(data);\n    }).catch(err => console.log(err));\n  }, []); // console.log(Array.from(count));\n\n  var arr2 = (_Object$keys = Object.keys(count)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.map(function (i) {\n    return count[i];\n  });\n  console.log(arr2);\n  const data = {\n    labels: [\"Branch\", \"Client\", \"ContactPerson\", \"Contract\"],\n    datasets: [{\n      label: \"# of count\",\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        gutterBottom: true,\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Branch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        variant: \"h4\",\n        color: \"textPrimary\",\n        children: count === null || count === void 0 ? void 0 : count.branchCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        gutterBottom: true,\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        variant: \"h4\",\n        color: \"textPrimary\",\n        children: count === null || count === void 0 ? void 0 : count.clientCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        gutterBottom: true,\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"ContactPerson\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        variant: \"h4\",\n        color: \"textPrimary\",\n        children: count === null || count === void 0 ? void 0 : count.contractCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        gutterBottom: true,\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        variant: \"h4\",\n        color: \"textPrimary\",\n        children: count === null || count === void 0 ? void 0 : count.contractCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Count, \"0pk8Gct459is3QPE9x+oEnB5Dfw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Count;\nexport default Count;\n\nvar _c;\n\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/Count.tsx"],"names":["Box","makeStyles","Paper","Typography","axios","React","useState","Doughnut","useStyles","container","display","flexDirection","root","minWidth","minHeight","margin","padding","alignItems","justifyContent","bullet","transform","title","fontSize","pos","marginBottom","Count","classes","count","setCount","useLayoutEffect","effect","cleanup","input","get","then","data","console","log","catch","err","arr2","Object","keys","map","i","labels","datasets","label","backgroundColor","borderColor","borderWidth","branchCount","clientCount","contractCount","chartData"],"mappings":"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","sourcesContent":["import { Box, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\ninterface CountType {\n  branchCount: number;\n  clientCount: number;\n  contractCount: number;\n  contactCount: number;\n}\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  root: {\n    minWidth: \"275px\",\n    minHeight: \"120px\",\n    margin: \"10px\",\n    display: \"flex\",\n    padding: \"0 10px\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\nconst Count = () => {\n  const classes = useStyles();\n  const [count, setCount] = useState<CountType>(null);\n\n  useLayoutEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input])(() => {\n    axios\n      .get(\"/api/count/getDashboardData\")\n      .then(({ data }) => {\n        setCount(data);\n        console.log(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // console.log(Array.from(count));\n  var arr2 = Object.keys(count)?.map(function (i) {\n    return count[i];\n  });\n  console.log(arr2);\n\n  const data = {\n    labels: [\"Branch\", \"Client\", \"ContactPerson\", \"Contract\"],\n    datasets: [\n      {\n        label: \"# of count\",\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  return (\n    <Box m={5} className={classes.container}>\n      <Paper className={classes.root} elevation={3}>\n        <Typography\n          color=\"textSecondary\"\n          gutterBottom\n          component=\"h1\"\n          variant=\"h5\"\n        >\n          Branch\n        </Typography>\n        <Typography component=\"span\" variant=\"h4\" color=\"textPrimary\">\n          {count?.branchCount}\n        </Typography>\n      </Paper>\n      <Paper className={classes.root} elevation={3}>\n        <Typography\n          color=\"textSecondary\"\n          gutterBottom\n          component=\"h1\"\n          variant=\"h5\"\n        >\n          Client\n        </Typography>\n        <Typography component=\"span\" variant=\"h4\" color=\"textPrimary\">\n          {count?.clientCount}\n        </Typography>\n      </Paper>\n      <Paper className={classes.root} elevation={3}>\n        <Typography\n          color=\"textSecondary\"\n          gutterBottom\n          component=\"h1\"\n          variant=\"h5\"\n        >\n          ContactPerson\n        </Typography>\n        <Typography component=\"span\" variant=\"h4\" color=\"textPrimary\">\n          {count?.contractCount}\n        </Typography>\n      </Paper>\n      <Paper className={classes.root} elevation={3}>\n        <Typography\n          color=\"textSecondary\"\n          gutterBottom\n          component=\"h1\"\n          variant=\"h5\"\n        >\n          Contract\n        </Typography>\n        <Typography component=\"span\" variant=\"h4\" color=\"textPrimary\">\n          {count?.contractCount}\n        </Typography>\n      </Paper>\n\n      <div>\n        <Doughnut data={chartData} />\n      </div>\n    </Box>\n  );\n};\n\nexport default Count;\n"]},"metadata":{},"sourceType":"module"}