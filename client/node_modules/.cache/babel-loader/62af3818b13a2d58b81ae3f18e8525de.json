{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/PrivateRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { AuthenticationContext } from \"./AuthenticationProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const valueOf = useContext(AuthenticationContext);\n  const status = valueOf.authenticationStatus;\n  return (\n    /*#__PURE__*/\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    _jsxDEV(Route, { ...rest,\n      render: props => status === \"loggedOut\" ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(PrivateRoute, \"MCS+rYh6icW0hL91FZGzsjZdTdk=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/PrivateRoute.tsx"],"names":["useContext","Redirect","Route","AuthenticationContext","PrivateRoute","component","Component","rest","valueOf","status","authenticationStatus","props"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC1D,QAAMC,OAAO,GAAGR,UAAU,CAACG,qBAAD,CAA1B;AACA,QAAMM,MAAM,GAAGD,OAAO,CAACE,oBAAvB;AACA;AAAA;AACE;AACA;AACA,YAAC,KAAD,OACMH,IADN;AAEE,MAAA,MAAM,EAAGI,KAAD,IACNF,MAAM,KAAK,WAAX,gBACE,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,gBAGE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA;AAHF;AAcD,CAjBD;;GAAMP,Y;;KAAAA,Y;AAmBN,eAAeA,YAAf","sourcesContent":["import { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { AuthenticationContext } from \"./AuthenticationProvider\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const valueOf = useContext(AuthenticationContext);\n  const status = valueOf.authenticationStatus;\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        status === \"loggedOut\" ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}