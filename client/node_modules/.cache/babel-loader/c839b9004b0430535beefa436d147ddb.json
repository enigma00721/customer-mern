{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle, FormHelperText, IconButton, MenuItem, Paper, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\"; // library\n\nimport useSWR, { useSWRConfig } from \"swr\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useSnackbar } from \"notistack\"; // utils\n\nimport fetcher from \"../../../utils/fetcher\"; // icon\n\nimport { Delete, Edit } from \"@material-ui/icons\"; // styles\n\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactPerson = () => {\n  _s();\n\n  // initial config\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    mutate\n  } = useSWRConfig(); // api constants\n\n  const CLIENT_API = \"api/client/name\";\n  const CONTACT_API = \"api/person/\"; // state\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [hasBranch, setHasBranch] = useState(false);\n  const [branch, setBranch] = useState(null);\n  const [selectClient, setSelectClient] = useState(null);\n  const [selectBranch, setSelectBranch] = useState(null);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [updateId, setUpdateId] = useState(null); // react hook form\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    shouldUnregister: true\n  }); // swr api fetch\n\n  const {\n    data: clients,\n    error: clientsError\n  } = useSWR(CLIENT_API, fetcher);\n  const {\n    data: contacts,\n    error: contactsError\n  } = useSWR(CONTACT_API, fetcher);\n  if (clientsError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 28\n  }, this);\n  if (!clients) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 24\n  }, this);\n  if (contactsError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 29\n  }, this);\n  if (!contacts) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 25\n  }, this);\n\n  const onSubmit = data => {\n    // console.log(data);\n    setSelectBranch(null);\n    if (!isEditMode) axios.post(CONTACT_API, data).then(response => {\n      console.log(response);\n      setOpenDialog(false);\n      mutate(CONTACT_API);\n    }).catch(error => console.log(error));else {\n      console.log(data);\n      axios.patch(CONTACT_API + updateId, data).then(({\n        data\n      }) => {\n        mutate(CONTACT_API);\n        setOpenDialog(false);\n        enqueueSnackbar(data.success_msg, {\n          variant: \"success\"\n        });\n      }).catch(error => enqueueSnackbar(error.message, {\n        variant: \"warning\"\n      }));\n    }\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleSelectChange = event => {\n    const id = event.target.value;\n    getBranchOfClient(id);\n  }; // fetch branch associated with a particular client\n\n\n  const getBranchOfClient = id => {\n    axios.get(\"/api/branch/client/\" + id).then(({\n      data\n    }) => {\n      console.log(data);\n\n      if (data.length) {\n        setHasBranch(true);\n        setBranch(data);\n      } else {\n        setHasBranch(false);\n        setBranch(null);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }; // FIXME: fix it after making better single form page\n  // const handleEdit = (row: EditContactPersonType) => {\n\n\n  const handleEdit = row => {\n    setHasBranch(false);\n    setIsEditMode(true);\n    setSelectClient(row.client_id._id);\n\n    if (row.branch_id) {\n      getBranchOfClient(row.client_id._id);\n      setSelectBranch(row.branch_id._id);\n    }\n\n    reset(row);\n    setOpenDialog(true);\n  };\n\n  const handleAddContact = () => {\n    reset({});\n    setOpenDialog(true);\n    setIsEditMode(false);\n    setSelectClient(null);\n    setSelectBranch(null);\n  };\n\n  const handleDelete = () => {\n    console.log(\"delete\");\n    axios.delete(\"api/person/\" + updateId).then(({\n      data\n    }) => {\n      setOpenDeleteDialog(false);\n      mutate(CONTACT_API);\n      enqueueSnackbar(data.success_msg, {\n        variant: \"success\"\n      });\n    }).catch(err => enqueueSnackbar(err.message, {\n      variant: \"warning\"\n    }));\n  };\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleAddContact,\n      children: \"Add Contact Person\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: [isEditMode ? \"Update\" : \"Add\", \" Contact Person\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            ...register(\"client_id\", {\n              required: \"Client is required!\"\n            }),\n            onChange: handleSelectChange,\n            label: \"Client\",\n            fullWidth: true,\n            defaultValue: selectClient,\n            variant: \"outlined\",\n            error: !!errors.client_id,\n            children: clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: client._id,\n              children: client.company_name\n            }, client._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: \"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\",\n            children: errors && errors.client_id && errors.client_id.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), hasBranch && /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            ...register(\"branch_id\", {\n              required: \"Branch is required!\"\n            }),\n            label: \"Branch\",\n            fullWidth: true,\n            variant: \"outlined\",\n            style: {\n              marginTop: \"20px\"\n            },\n            defaultValue: selectBranch,\n            error: !!errors.branch_id,\n            children: branch === null || branch === void 0 ? void 0 : branch.map(row => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: row._id,\n              children: row.address\n            }, row._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: \"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\",\n            children: errors && errors.branch_id && errors.branch_id.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"name\", {\n              required: \"Name is required!\"\n            }),\n            label: \"Name\",\n            type: \"text\",\n            fullWidth: true,\n            error: !!errors.name,\n            helperText: errors && errors.name && errors.name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"email\", {\n              required: \"Email Field is required!\"\n            }),\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true,\n            error: !!errors.email,\n            helperText: errors && errors.email && errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"address\", {\n              required: \"Address Field is required!\"\n            }),\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true,\n            error: !!errors.address,\n            helperText: errors && errors.address && errors.address.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"phone\", {\n              required: \"Phone Number is required!\",\n              min: {\n                value: 10,\n                message: \"Please enter a valid phone number\"\n              }\n            }),\n            label: \"Phone Number\",\n            type: \"number\",\n            fullWidth: true,\n            error: !!errors.phone,\n            helperText: errors && errors.phone && errors.phone.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: isEditMode ? \"Update\" : \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Branch Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: contacts === null || contacts === void 0 ? void 0 : contacts.map(row => {\n            var _row$branch_id;\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.client_id.company_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: ((_row$branch_id = row.branch_id) === null || _row$branch_id === void 0 ? void 0 : _row$branch_id.address) ? row.branch_id.address : /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"No Branch\",\n                  variant: \"outlined\",\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => {\n                    setUpdateId(row._id);\n                    handleEdit(row);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    fontSize: \"medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => {\n                    setUpdateId(row._id);\n                    setOpenDeleteDialog(true);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Delete, {\n                    fontSize: \"medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDelete, {\n      openDeleteDialog: openDeleteDialog,\n      setOpenDeleteDialog: setOpenDeleteDialog,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactPerson, \"8viHhsya57bEcGxojnWbx3CyXww=\", false, function () {\n  return [useSnackbar, useSWRConfig, useForm, useSWR, useSWR];\n});\n\n_c = ContactPerson;\nexport default ContactPerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactPerson\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx"],"names":["Box","Button","Chip","Dialog","DialogActions","DialogContent","DialogTitle","FormHelperText","IconButton","MenuItem","Paper","Table","TableBody","TableContainer","TableHead","TableRow","TextField","useState","useSWR","useSWRConfig","axios","useForm","useSnackbar","fetcher","Delete","Edit","StyledTableCell","ConfirmDelete","ContactPerson","enqueueSnackbar","mutate","CLIENT_API","CONTACT_API","openDialog","setOpenDialog","isEditMode","setIsEditMode","hasBranch","setHasBranch","branch","setBranch","selectClient","setSelectClient","selectBranch","setSelectBranch","openDeleteDialog","setOpenDeleteDialog","updateId","setUpdateId","register","handleSubmit","reset","formState","errors","shouldUnregister","data","clients","error","clientsError","contacts","contactsError","onSubmit","post","then","response","console","log","catch","patch","success_msg","variant","message","handleClose","handleSelectChange","event","id","target","value","getBranchOfClient","get","length","handleEdit","row","client_id","_id","branch_id","handleAddContact","handleDelete","delete","err","required","map","client","company_name","marginTop","address","name","email","min","phone"],"mappings":";;;AAAA,SACEA,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,WAPF,EAQEC,cARF,EASEC,UATF,EAUEC,QAVF,EAWEC,KAXF,EAYEC,KAZF,EAaEC,SAbF,EAcEC,cAdF,EAeEC,SAfF,EAgBEC,QAhBF,EAiBEC,SAjBF,QAkBO,mBAlBP;AAmBA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,KAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,WAA5B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CACA;;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,oBAA7B,C,CACA;;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAsBP,WAAW,EAAvC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaX,YAAY,EAA/B,CAH0B,CAK1B;;AACA,QAAMY,UAAU,GAAG,iBAAnB;AACA,QAAMC,WAAW,GAAG,aAApB,CAP0B,CAS1B;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAU,KAAV,CAA5C;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAU,KAAV,CAA5C;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAe,IAAf,CAApC;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAS,IAAT,CAAhD;AACA,QAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAS,IAAT,CAAhD;AACA,QAAM,CAAC4B,gBAAD,EAAmBC,mBAAnB,IAA0C7B,QAAQ,CAAU,KAAV,CAAxD;AACA,QAAM,CAAC8B,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAAS,IAAT,CAAxC,CAjB0B,CAkB1B;;AACA,QAAM;AACJgC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFhC,OAAO,CAAoB;AAC7BiC,IAAAA,gBAAgB,EAAE;AADW,GAApB,CALX,CAnB0B,CA4B1B;;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,OAAR;AAAiBC,IAAAA,KAAK,EAAEC;AAAxB,MAAyCxC,MAAM,CAACa,UAAD,EAAaR,OAAb,CAArD;AACA,QAAM;AAAEgC,IAAAA,IAAI,EAAEI,QAAR;AAAkBF,IAAAA,KAAK,EAAEG;AAAzB,MAA2C1C,MAAM,CAACc,WAAD,EAAcT,OAAd,CAAvD;AACA,MAAImC,YAAJ,EAAkB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAClB,MAAI,CAACF,OAAL,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,MAAII,aAAJ,EAAmB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACnB,MAAI,CAACD,QAAL,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEf,QAAME,QAAQ,GAAIN,IAAD,IAAU;AACzB;AACAX,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,QAAI,CAACT,UAAL,EACEf,KAAK,CACF0C,IADH,CACQ9B,WADR,EACqBuB,IADrB,EAEGQ,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA9B,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAJ,MAAAA,MAAM,CAACE,WAAD,CAAN;AACD,KANH,EAOGmC,KAPH,CAOUV,KAAD,IAAWQ,OAAO,CAACC,GAAR,CAAYT,KAAZ,CAPpB,EADF,KASK;AACHQ,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAnC,MAAAA,KAAK,CACFgD,KADH,CACSpC,WAAW,GAAGe,QADvB,EACiCQ,IADjC,EAEGQ,IAFH,CAEQ,CAAC;AAAER,QAAAA;AAAF,OAAD,KAAc;AAClBzB,QAAAA,MAAM,CAACE,WAAD,CAAN;AACAE,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAL,QAAAA,eAAe,CAAC0B,IAAI,CAACc,WAAN,EAAmB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAnB,CAAf;AACD,OANH,EAOGH,KAPH,CAOUV,KAAD,IACL5B,eAAe,CAAC4B,KAAK,CAACc,OAAP,EAAgB;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAhB,CARnB;AAUD;AACF,GAzBD;;AA2BA,QAAME,WAAW,GAAG,MAAM;AACxBtC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,QAAMuC,kBAAkB,GAAIC,KAAD,IAAgB;AACzC,UAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAxB;AACAC,IAAAA,iBAAiB,CAACH,EAAD,CAAjB;AACD,GAHD,CAnE0B,CAwE1B;;;AACA,QAAMG,iBAAiB,GAAIH,EAAD,IAAgB;AACxCvD,IAAAA,KAAK,CACF2D,GADH,CACO,wBAAwBJ,EAD/B,EAEGZ,IAFH,CAEQ,CAAC;AAAER,MAAAA;AAAF,KAAD,KAAc;AAClBU,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;;AACA,UAAIA,IAAI,CAACyB,MAAT,EAAiB;AACf1C,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,SAAS,CAACe,IAAD,CAAT;AACD,OAHD,MAGO;AACLjB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,KAXH,EAYG2B,KAZH,CAYUV,KAAD,IAAW;AAChBQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD,KAdH;AAeD,GAhBD,CAzE0B,CA2F1B;AACA;;;AACA,QAAMwB,UAAU,GAAIC,GAAD,IAAoD;AACrE5C,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAM,IAAAA,eAAe,CAACwC,GAAG,CAACC,SAAJ,CAAcC,GAAf,CAAf;;AACA,QAAIF,GAAG,CAACG,SAAR,EAAmB;AACjBP,MAAAA,iBAAiB,CAACI,GAAG,CAACC,SAAJ,CAAcC,GAAf,CAAjB;AACAxC,MAAAA,eAAe,CAACsC,GAAG,CAACG,SAAJ,CAAcD,GAAf,CAAf;AACD;;AACDjC,IAAAA,KAAK,CAAC+B,GAAD,CAAL;AACAhD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAVD;;AAYA,QAAMoD,gBAAgB,GAAG,MAAM;AAC7BnC,IAAAA,KAAK,CAAC,EAAD,CAAL;AACAjB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAM,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAND;;AAQA,QAAM2C,YAAY,GAAG,MAAM;AACzBtB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA9C,IAAAA,KAAK,CACFoE,MADH,CACU,gBAAgBzC,QAD1B,EAEGgB,IAFH,CAEQ,CAAC;AAAER,MAAAA;AAAF,KAAD,KAAc;AAClBT,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAhB,MAAAA,MAAM,CAACE,WAAD,CAAN;AACAH,MAAAA,eAAe,CAAC0B,IAAI,CAACc,WAAN,EAAmB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAnB,CAAf;AACD,KANH,EAOGH,KAPH,CAOUsB,GAAD,IAAS5D,eAAe,CAAC4D,GAAG,CAAClB,OAAL,EAAc;AAAED,MAAAA,OAAO,EAAE;AAAX,KAAd,CAPjC;AAQD,GAVD;;AAWAL,EAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACA,sBACE,QAAC,GAAD;AAAK,IAAA,CAAC,EAAE,CAAR;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAA2C,MAAA,OAAO,EAAEiC,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AACE,MAAA,IAAI,EAAErD,UADR;AAEE,MAAA,OAAO,EAAEuC,WAFX;AAGE,yBAAgB,mBAHlB;AAAA,8BAKE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,mBAAhB;AAAA,mBACGrC,UAAU,GAAG,QAAH,GAAc,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAQE;AAAM,QAAA,QAAQ,EAAEe,YAAY,CAACW,QAAD,CAA5B;AAAA,gCACE,QAAC,aAAD;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,MAAM,MADR;AAAA,eAEMZ,QAAQ,CAAC,WAAD,EAAc;AAAEyC,cAAAA,QAAQ,EAAE;AAAZ,aAAd,CAFd;AAGE,YAAA,QAAQ,EAAEjB,kBAHZ;AAIE,YAAA,KAAK,EAAC,QAJR;AAKE,YAAA,SAAS,MALX;AAME,YAAA,YAAY,EAAEhC,YANhB;AAOE,YAAA,OAAO,EAAC,UAPV;AAQE,YAAA,KAAK,EAAE,CAAC,CAACY,MAAM,CAAC8B,SARlB;AAAA,sBAUG3B,OAAO,CAACmC,GAAR,CAAaC,MAAD,iBACX,QAAC,QAAD;AAA2B,cAAA,KAAK,EAAEA,MAAM,CAACR,GAAzC;AAAA,wBACGQ,MAAM,CAACC;AADV,eAAeD,MAAM,CAACR,GAAtB;AAAA;AAAA;AAAA;AAAA,oBADD;AAVH;AAAA;AAAA;AAAA;AAAA,kBADF,eAiBE,QAAC,cAAD;AAAgB,YAAA,SAAS,EAAC,8DAA1B;AAAA,sBACG/B,MAAM,IAAIA,MAAM,CAAC8B,SAAjB,IAA8B9B,MAAM,CAAC8B,SAAP,CAAiBZ;AADlD;AAAA;AAAA;AAAA;AAAA,kBAjBF,EAqBGlC,SAAS,iBACR,QAAC,SAAD;AACE,YAAA,MAAM,MADR;AAAA,eAEMY,QAAQ,CAAC,WAAD,EAAc;AAAEyC,cAAAA,QAAQ,EAAE;AAAZ,aAAd,CAFd;AAGE,YAAA,KAAK,EAAC,QAHR;AAIE,YAAA,SAAS,MAJX;AAKE,YAAA,OAAO,EAAC,UALV;AAME,YAAA,KAAK,EAAE;AAAEI,cAAAA,SAAS,EAAE;AAAb,aANT;AAOE,YAAA,YAAY,EAAEnD,YAPhB;AAQE,YAAA,KAAK,EAAE,CAAC,CAACU,MAAM,CAACgC,SARlB;AAAA,sBAUG9C,MAVH,aAUGA,MAVH,uBAUGA,MAAM,CAAEoD,GAAR,CAAaT,GAAD,iBACX,QAAC,QAAD;AAAwB,cAAA,KAAK,EAAEA,GAAG,CAACE,GAAnC;AAAA,wBACGF,GAAG,CAACa;AADP,eAAeb,GAAG,CAACE,GAAnB;AAAA;AAAA;AAAA;AAAA,oBADD;AAVH;AAAA;AAAA;AAAA;AAAA,kBAtBJ,eAuCE,QAAC,cAAD;AAAgB,YAAA,SAAS,EAAC,8DAA1B;AAAA,sBACG/B,MAAM,IAAIA,MAAM,CAACgC,SAAjB,IAA8BhC,MAAM,CAACgC,SAAP,CAAiBd;AADlD;AAAA;AAAA;AAAA;AAAA,kBAvCF,eA2CE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,MAAM,EAAC,QAFT;AAAA,eAGMtB,QAAQ,CAAC,MAAD,EAAS;AAAEyC,cAAAA,QAAQ,EAAE;AAAZ,aAAT,CAHd;AAIE,YAAA,KAAK,EAAC,MAJR;AAKE,YAAA,IAAI,EAAC,MALP;AAME,YAAA,SAAS,MANX;AAOE,YAAA,KAAK,EAAE,CAAC,CAACrC,MAAM,CAAC2C,IAPlB;AAQE,YAAA,UAAU,EAAE3C,MAAM,IAAIA,MAAM,CAAC2C,IAAjB,IAAyB3C,MAAM,CAAC2C,IAAP,CAAYzB;AARnD;AAAA;AAAA;AAAA;AAAA,kBA3CF,eAqDE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,MAAM,EAAC,QAFT;AAAA,eAGMtB,QAAQ,CAAC,OAAD,EAAU;AAAEyC,cAAAA,QAAQ,EAAE;AAAZ,aAAV,CAHd;AAIE,YAAA,KAAK,EAAC,eAJR;AAKE,YAAA,IAAI,EAAC,OALP;AAME,YAAA,SAAS,MANX;AAOE,YAAA,KAAK,EAAE,CAAC,CAACrC,MAAM,CAAC4C,KAPlB;AAQE,YAAA,UAAU,EAAE5C,MAAM,IAAIA,MAAM,CAAC4C,KAAjB,IAA0B5C,MAAM,CAAC4C,KAAP,CAAa1B;AARrD;AAAA;AAAA;AAAA;AAAA,kBArDF,eA+DE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,MAAM,EAAC,QAFT;AAAA,eAGMtB,QAAQ,CAAC,SAAD,EAAY;AACtByC,cAAAA,QAAQ,EAAE;AADY,aAAZ,CAHd;AAME,YAAA,KAAK,EAAC,SANR;AAOE,YAAA,IAAI,EAAC,MAPP;AAQE,YAAA,SAAS,MARX;AASE,YAAA,KAAK,EAAE,CAAC,CAACrC,MAAM,CAAC0C,OATlB;AAUE,YAAA,UAAU,EAAE1C,MAAM,IAAIA,MAAM,CAAC0C,OAAjB,IAA4B1C,MAAM,CAAC0C,OAAP,CAAexB;AAVzD;AAAA;AAAA;AAAA;AAAA,kBA/DF,eA2EE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,MAAM,EAAC,QAFT;AAAA,eAGMtB,QAAQ,CAAC,OAAD,EAAU;AACpByC,cAAAA,QAAQ,EAAE,2BADU;AAEpBQ,cAAAA,GAAG,EAAE;AACHrB,gBAAAA,KAAK,EAAE,EADJ;AAEHN,gBAAAA,OAAO,EAAE;AAFN;AAFe,aAAV,CAHd;AAUE,YAAA,KAAK,EAAC,cAVR;AAWE,YAAA,IAAI,EAAC,QAXP;AAYE,YAAA,SAAS,MAZX;AAaE,YAAA,KAAK,EAAE,CAAC,CAAClB,MAAM,CAAC8C,KAblB;AAcE,YAAA,UAAU,EAAE9C,MAAM,IAAIA,MAAM,CAAC8C,KAAjB,IAA0B9C,MAAM,CAAC8C,KAAP,CAAa5B;AAdrD;AAAA;AAAA;AAAA;AAAA,kBA3EF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA8FE,QAAC,aAAD;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAC,WAAhC;AAA4C,YAAA,IAAI,EAAC,QAAjD;AAAA,sBACGpC,UAAU,GAAG,QAAH,GAAc;AAD3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEqC,WAAjB;AAA8B,YAAA,KAAK,EAAC,WAApC;AAAgD,YAAA,OAAO,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9FF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAsHE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAE9D,KAA3B;AAAkC,MAAA,KAAK,EAAE;AAAEoF,QAAAA,SAAS,EAAE;AAAb,OAAzC;AAAA,6BACE,QAAC,KAAD;AAAO,sBAAW,cAAlB;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAA,oCACE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,SAAD;AAAA,oBACGnC,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEgC,GAAV,CAAeT,GAAD;AAAA;;AAAA,gCACb,QAAC,QAAD;AAAwB,cAAA,KAAK,EAAE,IAA/B;AAAA,sCACE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BACGA,GAAG,CAACC,SAAJ,CAAcU;AADjB;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BACG,mBAAAX,GAAG,CAACG,SAAJ,kEAAeU,OAAf,IACCb,GAAG,CAACG,SAAJ,CAAcU,OADf,gBAGC,QAAC,IAAD;AACE,kBAAA,KAAK,EAAC,WADR;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,sBAJF,eAeE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+Bb,GAAG,CAACc;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAfF,eAgBE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+Bd,GAAG,CAACe;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAhBF,eAiBE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+Bf,GAAG,CAACiB;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAjBF,eAkBE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,0BAA+BjB,GAAG,CAACa;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAlBF,eAoBE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,MAAvB;AAAA,wCACE,QAAC,UAAD;AACE,kBAAA,OAAO,EAAE,MAAM;AACb/C,oBAAAA,WAAW,CAACkC,GAAG,CAACE,GAAL,CAAX;AACAH,oBAAAA,UAAU,CAACC,GAAD,CAAV;AACD,mBAJH;AAAA,yCAME,QAAC,IAAD;AAAM,oBAAA,QAAQ,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,wBADF,eASE,QAAC,UAAD;AACE,kBAAA,OAAO,EAAE,MAAM;AACblC,oBAAAA,WAAW,CAACkC,GAAG,CAACE,GAAL,CAAX;AACAtC,oBAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,mBAJH;AAAA,yCAME,QAAC,MAAD;AAAQ,oBAAA,QAAQ,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,wBATF;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBF;AAAA,eAAeoC,GAAG,CAACE,GAAnB;AAAA;AAAA;AAAA;AAAA,oBADa;AAAA,WAAd;AADH;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtHF,eAiLE,QAAC,aAAD;AACE,MAAA,gBAAgB,EAAEvC,gBADpB;AAEE,MAAA,mBAAmB,EAAEC,mBAFvB;AAGE,MAAA,YAAY,EAAEyC;AAHhB;AAAA;AAAA;AAAA;AAAA,YAjLF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyLD,CAtTD;;GAAM3D,a;UAEwBN,W,EACTH,Y,EAqBfE,O,EAK2CH,M,EACEA,M;;;KA9B7CU,a;AAwTN,eAAeA,aAAf","sourcesContent":["import {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormHelperText,\n  IconButton,\n  MenuItem,\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\n// library\nimport useSWR, { useSWRConfig } from \"swr\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useSnackbar } from \"notistack\";\n// utils\nimport fetcher from \"../../../utils/fetcher\";\n// icon\nimport { Delete, Edit } from \"@material-ui/icons\";\n// styles\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\nimport { ClientType, BranchType, ContactPersonType } from \"./types\";\n\nconst ContactPerson = () => {\n  // initial config\n  const { enqueueSnackbar } = useSnackbar();\n  const { mutate } = useSWRConfig();\n\n  // api constants\n  const CLIENT_API = \"api/client/name\";\n  const CONTACT_API = \"api/person/\";\n\n  // state\n  const [openDialog, setOpenDialog] = useState<boolean>(false);\n  const [isEditMode, setIsEditMode] = useState<boolean>(false);\n  const [hasBranch, setHasBranch] = useState<boolean>(false);\n  const [branch, setBranch] = useState<BranchType[]>(null);\n  const [selectClient, setSelectClient] = useState<string>(null);\n  const [selectBranch, setSelectBranch] = useState<string>(null);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false);\n  const [updateId, setUpdateId] = useState<string>(null);\n  // react hook form\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<ContactPersonType>({\n    shouldUnregister: true,\n  });\n\n  // swr api fetch\n  const { data: clients, error: clientsError } = useSWR(CLIENT_API, fetcher);\n  const { data: contacts, error: contactsError } = useSWR(CONTACT_API, fetcher);\n  if (clientsError) return <div>failed to load</div>;\n  if (!clients) return <div>loading...</div>;\n  if (contactsError) return <div>failed to load</div>;\n  if (!contacts) return <div>loading...</div>;\n\n  const onSubmit = (data) => {\n    // console.log(data);\n    setSelectBranch(null);\n    if (!isEditMode)\n      axios\n        .post(CONTACT_API, data)\n        .then((response) => {\n          console.log(response);\n          setOpenDialog(false);\n          mutate(CONTACT_API);\n        })\n        .catch((error) => console.log(error));\n    else {\n      console.log(data);\n      axios\n        .patch(CONTACT_API + updateId, data)\n        .then(({ data }) => {\n          mutate(CONTACT_API);\n          setOpenDialog(false);\n          enqueueSnackbar(data.success_msg, { variant: \"success\" });\n        })\n        .catch((error) =>\n          enqueueSnackbar(error.message, { variant: \"warning\" })\n        );\n    }\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleSelectChange = (event: any) => {\n    const id = event.target.value;\n    getBranchOfClient(id);\n  };\n\n  // fetch branch associated with a particular client\n  const getBranchOfClient = (id: string) => {\n    axios\n      .get(\"/api/branch/client/\" + id)\n      .then(({ data }) => {\n        console.log(data);\n        if (data.length) {\n          setHasBranch(true);\n          setBranch(data);\n        } else {\n          setHasBranch(false);\n          setBranch(null);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // FIXME: fix it after making better single form page\n  // const handleEdit = (row: EditContactPersonType) => {\n  const handleEdit = (row: ContactPersonType<ClientType, BranchType>) => {\n    setHasBranch(false);\n    setIsEditMode(true);\n    setSelectClient(row.client_id._id);\n    if (row.branch_id) {\n      getBranchOfClient(row.client_id._id);\n      setSelectBranch(row.branch_id._id);\n    }\n    reset(row);\n    setOpenDialog(true);\n  };\n\n  const handleAddContact = () => {\n    reset({});\n    setOpenDialog(true);\n    setIsEditMode(false);\n    setSelectClient(null);\n    setSelectBranch(null);\n  };\n\n  const handleDelete = () => {\n    console.log(\"delete\");\n    axios\n      .delete(\"api/person/\" + updateId)\n      .then(({ data }) => {\n        setOpenDeleteDialog(false);\n        mutate(CONTACT_API);\n        enqueueSnackbar(data.success_msg, { variant: \"success\" });\n      })\n      .catch((err) => enqueueSnackbar(err.message, { variant: \"warning\" }));\n  };\n  console.log(errors);\n  return (\n    <Box m={5}>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleAddContact}>\n        Add Contact Person\n      </Button>\n\n      <Dialog\n        open={openDialog}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {isEditMode ? \"Update\" : \"Add\"} Contact Person\n        </DialogTitle>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogContent>\n            <TextField\n              select\n              {...register(\"client_id\", { required: \"Client is required!\" })}\n              onChange={handleSelectChange}\n              label=\"Client\"\n              fullWidth\n              defaultValue={selectClient}\n              variant=\"outlined\"\n              error={!!errors.client_id}\n            >\n              {clients.map((client: ClientType) => (\n                <MenuItem key={client._id} value={client._id}>\n                  {client.company_name}\n                </MenuItem>\n              ))}\n            </TextField>\n            <FormHelperText className=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\">\n              {errors && errors.client_id && errors.client_id.message}\n            </FormHelperText>\n\n            {hasBranch && (\n              <TextField\n                select\n                {...register(\"branch_id\", { required: \"Branch is required!\" })}\n                label=\"Branch\"\n                fullWidth\n                variant=\"outlined\"\n                style={{ marginTop: \"20px\" }}\n                defaultValue={selectBranch}\n                error={!!errors.branch_id}\n              >\n                {branch?.map((row) => (\n                  <MenuItem key={row._id} value={row._id}>\n                    {row.address}\n                  </MenuItem>\n                ))}\n              </TextField>\n            )}\n            <FormHelperText className=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\">\n              {errors && errors.branch_id && errors.branch_id.message}\n            </FormHelperText>\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"name\", { required: \"Name is required!\" })}\n              label=\"Name\"\n              type=\"text\"\n              fullWidth\n              error={!!errors.name}\n              helperText={errors && errors.name && errors.name.message}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"email\", { required: \"Email Field is required!\" })}\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n              error={!!errors.email}\n              helperText={errors && errors.email && errors.email.message}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"address\", {\n                required: \"Address Field is required!\",\n              })}\n              label=\"Address\"\n              type=\"text\"\n              fullWidth\n              error={!!errors.address}\n              helperText={errors && errors.address && errors.address.message}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"phone\", {\n                required: \"Phone Number is required!\",\n                min: {\n                  value: 10,\n                  message: \"Please enter a valid phone number\",\n                },\n              })}\n              label=\"Phone Number\"\n              type=\"number\"\n              fullWidth\n              error={!!errors.phone}\n              helperText={errors && errors.phone && errors.phone.message}\n            />\n          </DialogContent>\n\n          <DialogActions>\n            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n              {isEditMode ? \"Update\" : \"Save\"}\n            </Button>\n            <Button onClick={handleClose} color=\"secondary\" variant=\"contained\">\n              Close\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n\n      <TableContainer component={Paper} style={{ marginTop: \"20px\" }}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"left\">Company Name</StyledTableCell>\n              <StyledTableCell align=\"left\">Branch Address</StyledTableCell>\n              <StyledTableCell align=\"left\">Name</StyledTableCell>\n              <StyledTableCell align=\"left\">Email</StyledTableCell>\n              <StyledTableCell align=\"left\">Phone</StyledTableCell>\n              <StyledTableCell align=\"left\">Address</StyledTableCell>\n              <StyledTableCell align=\"left\">Actions</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {contacts?.map((row) => (\n              <TableRow key={row._id} hover={true}>\n                <StyledTableCell align=\"left\">\n                  {row.client_id.company_name}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {row.branch_id?.address ? (\n                    row.branch_id.address\n                  ) : (\n                    <Chip\n                      label=\"No Branch\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                    />\n                  )}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">{row.name}</StyledTableCell>\n                <StyledTableCell align=\"left\">{row.email}</StyledTableCell>\n                <StyledTableCell align=\"left\">{row.phone}</StyledTableCell>\n                <StyledTableCell align=\"left\">{row.address}</StyledTableCell>\n\n                <StyledTableCell align=\"left\">\n                  <IconButton\n                    onClick={() => {\n                      setUpdateId(row._id);\n                      handleEdit(row);\n                    }}\n                  >\n                    <Edit fontSize=\"medium\" />\n                  </IconButton>\n                  <IconButton\n                    onClick={() => {\n                      setUpdateId(row._id);\n                      setOpenDeleteDialog(true);\n                    }}\n                  >\n                    <Delete fontSize=\"medium\" />\n                  </IconButton>\n                </StyledTableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <ConfirmDelete\n        openDeleteDialog={openDeleteDialog}\n        setOpenDeleteDialog={setOpenDeleteDialog}\n        handleDelete={handleDelete}\n      />\n    </Box>\n  );\n};\n\nexport default ContactPerson;\n"]},"metadata":{},"sourceType":"module"}