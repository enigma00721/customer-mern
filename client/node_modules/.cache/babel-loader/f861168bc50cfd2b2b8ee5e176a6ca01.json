{"ast":null,"code":"var _jsxFileName = \"/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle, FormHelperText, IconButton, MenuItem, Paper, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\"; // library\n\nimport useSWR, { useSWRConfig } from \"swr\";\nimport axios from \"axios\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useSnackbar } from \"notistack\"; // utils\n\nimport fetcher from \"../../../utils/fetcher\"; // icon\n\nimport { Delete, Edit } from \"@material-ui/icons\"; // styles\n\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport ConfirmDelete from \"../Partials/ConfirmDelete\"; // types\n\nimport { DevTool } from \"@hookform/devtools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactPerson = () => {\n  _s();\n\n  // initial config\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    mutate\n  } = useSWRConfig(); // api constants\n\n  const CLIENT_API = \"api/client/name\";\n  const CONTACT_API = \"api/person/\"; // state\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [hasBranch, setHasBranch] = useState(false);\n  const [branch, setBranch] = useState(null); // const [selectClient, setSelectClient] = useState<string>(null);\n  // const [selectBranch, setSelectBranch] = useState<string>(null);\n\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [updateId, setUpdateId] = useState(null);\n  const formData = {\n    client_id: \"\",\n    branch_id: \"\",\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    phone: \"\"\n  }; // react hook form\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    shouldUnregister: true,\n    defaultValues: formData\n  }); // swr api fetch\n\n  const {\n    data: clients,\n    error: clientsError\n  } = useSWR(CLIENT_API, fetcher);\n  const {\n    data: contacts,\n    error: contactsError\n  } = useSWR(CONTACT_API, fetcher);\n  if (clientsError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 28\n  }, this);\n  if (!clients) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 24\n  }, this);\n  if (contactsError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 29\n  }, this);\n  if (!contacts) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 25\n  }, this);\n  console.log(contacts);\n\n  const onSubmit = data => {\n    console.log(\"on submit\");\n    console.log(data); // setSelectBranch(null);\n    // if (!isEditMode)\n    //   axios\n    //     .post(CONTACT_API, data)\n    //     .then((response) => {\n    //       console.log(response);\n    //       mutate(CONTACT_API);\n    //     })\n    //     .catch((error) => console.log(error));\n    // else {\n    //   console.log(data);\n    //   axios\n    //     .patch(CONTACT_API + updateId, data)\n    //     .then(({ data }) => {\n    //       mutate(CONTACT_API);\n    //       setOpenDialog(false);\n    //       enqueueSnackbar(data.success_msg, { variant: \"success\" });\n    //     })\n    //     .catch((error) =>\n    //       enqueueSnackbar(error.message, { variant: \"warning\" })\n    //     );\n    // }\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n    reset({});\n  };\n\n  const handleSelectChange = event => {\n    const id = event.target.value;\n    getBranchOfClient(id);\n  }; // fetch branch associated with a particular client\n\n\n  const getBranchOfClient = id => {\n    axios.get(\"/api/branch/client/\" + id).then(({\n      data\n    }) => {\n      if (data.length) {\n        setHasBranch(true);\n        setBranch(data);\n      } else {\n        setHasBranch(false);\n        setBranch(null);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }; // const handleEdit = (row: EditContactPersonType) => {\n\n\n  const handleEdit = row => {\n    setHasBranch(false);\n    setOpenDialog(true);\n    setIsEditMode(true);\n\n    if (row.branch_id) {\n      getBranchOfClient(row.client_id._id);\n      console.log(row);\n      reset({ ...row,\n        branch_id: row.branch_id._id,\n        client_id: row.client_id._id\n      });\n    } // reset({\n    //   ...row,\n    //   client_id: row.client_id._id,\n    // });\n\n  };\n\n  const handleAddContact = () => {\n    reset({});\n    setOpenDialog(true);\n    setIsEditMode(false);\n  };\n\n  const handleDelete = () => {\n    console.log(\"delete\");\n    axios.delete(\"api/person/\" + updateId).then(({\n      data\n    }) => {\n      setOpenDeleteDialog(false);\n      mutate(CONTACT_API);\n      enqueueSnackbar(data.success_msg, {\n        variant: \"success\"\n      });\n    }).catch(err => enqueueSnackbar(err.message, {\n      variant: \"warning\"\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 5,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleAddContact,\n      children: \"Add Contact Person\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: [isEditMode ? \"Update\" : \"Add\", \" Contact Person\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            name: \"client_id\",\n            control: control // defaultValue=\"\"\n            ,\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              ...field,\n              label: \"Branch\",\n              fullWidth: true,\n              variant: \"outlined\",\n              style: {\n                marginTop: \"20px\"\n              },\n              error: !!errors.client_id,\n              children: clients.map(row => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: row._id,\n                children: row.address\n              }, row._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"client_id\",\n            control: control,\n            rules: {\n              required: \"Client is required!\"\n            },\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              ...field,\n              onChange: handleSelectChange,\n              label: \"Client\",\n              fullWidth: true,\n              variant: \"outlined\",\n              error: !!errors.client_id,\n              children: clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: client._id,\n                children: client.company_name\n              }, client._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: \"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\",\n            children: errors && errors.client_id && errors.client_id.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), hasBranch && /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"branch_id\",\n            control: control // defaultValue=\"\"\n            ,\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              ...field,\n              label: \"Branch\",\n              fullWidth: true,\n              variant: \"outlined\",\n              style: {\n                marginTop: \"20px\"\n              },\n              error: !!errors.branch_id,\n              children: branch === null || branch === void 0 ? void 0 : branch.map(row => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: row._id,\n                children: row.address\n              }, row._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: \"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\",\n            children: errors && errors.branch_id && errors.branch_id.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"name\", {\n              required: \"Name is required!\"\n            }),\n            label: \"Name\",\n            type: \"text\",\n            fullWidth: true,\n            error: !!errors.name,\n            helperText: errors && errors.name && errors.name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"email\", {\n              required: \"Email Field is required!\"\n            }),\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true,\n            error: !!errors.email,\n            helperText: errors && errors.email && errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"address\", {\n              required: \"Address Field is required!\"\n            }),\n            label: \"Address\",\n            type: \"text\",\n            fullWidth: true,\n            error: !!errors.address,\n            helperText: errors && errors.address && errors.address.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            ...register(\"phone\", {\n              required: \"Phone Number is required!\"\n            }),\n            label: \"Phone Number\",\n            type: \"text\",\n            fullWidth: true,\n            error: !!errors.phone,\n            helperText: errors && errors.phone && errors.phone.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: isEditMode ? \"Update\" : \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DevTool, {\n        control: control\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Branch Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: contacts === null || contacts === void 0 ? void 0 : contacts.map(row => {\n            var _row$branch_id;\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: \"demo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: ((_row$branch_id = row.branch_id) === null || _row$branch_id === void 0 ? void 0 : _row$branch_id.address) ? row.branch_id.address : /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"No Branch\",\n                  variant: \"outlined\",\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: row.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => {\n                    setUpdateId(row._id);\n                    handleEdit(row);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    fontSize: \"medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => {\n                    setUpdateId(row._id);\n                    setOpenDeleteDialog(true);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Delete, {\n                    fontSize: \"medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDelete, {\n      openDeleteDialog: openDeleteDialog,\n      setOpenDeleteDialog: setOpenDeleteDialog,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactPerson, \"t50DUYUdhpcx1XnLmI5NAW0HvKA=\", false, function () {\n  return [useSnackbar, useSWRConfig, useForm, useSWR, useSWR];\n});\n\n_c = ContactPerson;\nexport default ContactPerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactPerson\");","map":{"version":3,"sources":["/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx"],"names":["Box","Button","Chip","Dialog","DialogActions","DialogContent","DialogTitle","FormHelperText","IconButton","MenuItem","Paper","Table","TableBody","TableContainer","TableHead","TableRow","TextField","useState","useSWR","useSWRConfig","axios","Controller","useForm","useSnackbar","fetcher","Delete","Edit","StyledTableCell","ConfirmDelete","DevTool","ContactPerson","enqueueSnackbar","mutate","CLIENT_API","CONTACT_API","openDialog","setOpenDialog","isEditMode","setIsEditMode","hasBranch","setHasBranch","branch","setBranch","openDeleteDialog","setOpenDeleteDialog","updateId","setUpdateId","formData","client_id","branch_id","name","email","address","phone","register","handleSubmit","reset","control","formState","errors","shouldUnregister","defaultValues","data","clients","error","clientsError","contacts","contactsError","console","log","onSubmit","handleClose","handleSelectChange","event","id","target","value","getBranchOfClient","get","then","length","catch","handleEdit","row","_id","handleAddContact","handleDelete","delete","success_msg","variant","err","message","field","marginTop","map","required","client","company_name"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormHelperText,\n  IconButton,\n  MenuItem,\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\n// library\nimport useSWR, { useSWRConfig } from \"swr\";\nimport axios from \"axios\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useSnackbar } from \"notistack\";\n// utils\nimport fetcher from \"../../../utils/fetcher\";\n// icon\nimport { Delete, Edit } from \"@material-ui/icons\";\n// styles\nimport StyledTableCell from \"../Partials/StyledTableCell\";\nimport ConfirmDelete from \"../Partials/ConfirmDelete\";\n// types\nimport { BranchType, ClientType, ContactPersonType } from \"./types\";\nimport { DevTool } from \"@hookform/devtools\";\n\nconst ContactPerson = () => {\n  // initial config\n  const { enqueueSnackbar } = useSnackbar();\n  const { mutate } = useSWRConfig();\n\n  // api constants\n  const CLIENT_API = \"api/client/name\";\n  const CONTACT_API = \"api/person/\";\n\n  // state\n  const [openDialog, setOpenDialog] = useState<boolean>(false);\n  const [isEditMode, setIsEditMode] = useState<boolean>(false);\n  const [hasBranch, setHasBranch] = useState<boolean>(false);\n  const [branch, setBranch] = useState<BranchType[]>(null);\n  // const [selectClient, setSelectClient] = useState<string>(null);\n  // const [selectBranch, setSelectBranch] = useState<string>(null);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false);\n  const [updateId, setUpdateId] = useState<string>(null);\n\n  const formData = {\n    client_id: \"\",\n    branch_id: \"\",\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    phone: \"\",\n  };\n  // react hook form\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm<ContactPersonType>({\n    shouldUnregister: true,\n    defaultValues: formData,\n  });\n\n  // swr api fetch\n  const { data: clients, error: clientsError } = useSWR(CLIENT_API, fetcher);\n  const { data: contacts, error: contactsError } = useSWR(CONTACT_API, fetcher);\n  if (clientsError) return <div>failed to load</div>;\n  if (!clients) return <div>loading...</div>;\n  if (contactsError) return <div>failed to load</div>;\n  if (!contacts) return <div>loading...</div>;\n  console.log(contacts);\n\n  const onSubmit = (data) => {\n    console.log(\"on submit\");\n    console.log(data);\n    // setSelectBranch(null);\n    // if (!isEditMode)\n    //   axios\n    //     .post(CONTACT_API, data)\n    //     .then((response) => {\n    //       console.log(response);\n    //       mutate(CONTACT_API);\n    //     })\n    //     .catch((error) => console.log(error));\n    // else {\n    //   console.log(data);\n    //   axios\n    //     .patch(CONTACT_API + updateId, data)\n    //     .then(({ data }) => {\n    //       mutate(CONTACT_API);\n    //       setOpenDialog(false);\n    //       enqueueSnackbar(data.success_msg, { variant: \"success\" });\n    //     })\n    //     .catch((error) =>\n    //       enqueueSnackbar(error.message, { variant: \"warning\" })\n    //     );\n    // }\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n    reset({});\n  };\n\n  const handleSelectChange = (event: any) => {\n    const id = event.target.value;\n    getBranchOfClient(id);\n  };\n\n  // fetch branch associated with a particular client\n  const getBranchOfClient = (id: string) => {\n    axios\n      .get(\"/api/branch/client/\" + id)\n      .then(({ data }) => {\n        if (data.length) {\n          setHasBranch(true);\n          setBranch(data);\n        } else {\n          setHasBranch(false);\n          setBranch(null);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // const handleEdit = (row: EditContactPersonType) => {\n  const handleEdit = (row: ContactPersonType<ClientType, BranchType>) => {\n    setHasBranch(false);\n    setOpenDialog(true);\n    setIsEditMode(true);\n    if (row.branch_id) {\n      getBranchOfClient(row.client_id._id);\n      console.log(row);\n      reset({\n        ...row,\n        branch_id: row.branch_id._id,\n        client_id: row.client_id._id,\n      });\n    }\n    // reset({\n    //   ...row,\n    //   client_id: row.client_id._id,\n    // });\n  };\n\n  const handleAddContact = () => {\n    reset({});\n    setOpenDialog(true);\n    setIsEditMode(false);\n  };\n\n  const handleDelete = () => {\n    console.log(\"delete\");\n    axios\n      .delete(\"api/person/\" + updateId)\n      .then(({ data }) => {\n        setOpenDeleteDialog(false);\n        mutate(CONTACT_API);\n        enqueueSnackbar(data.success_msg, { variant: \"success\" });\n      })\n      .catch((err) => enqueueSnackbar(err.message, { variant: \"warning\" }));\n  };\n  return (\n    <Box m={5}>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleAddContact}>\n        Add Contact Person\n      </Button>\n      <Dialog\n        open={openDialog}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {isEditMode ? \"Update\" : \"Add\"} Contact Person\n        </DialogTitle>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogContent>\n            <Controller\n              name=\"client_id\"\n              control={control}\n              // defaultValue=\"\"\n              render={({ field }) => (\n                <TextField\n                  select\n                  {...field}\n                  label=\"Branch\"\n                  fullWidth\n                  variant=\"outlined\"\n                  style={{ marginTop: \"20px\" }}\n                  error={!!errors.client_id}\n                >\n                  {clients.map((row) => (\n                    <MenuItem key={row._id} value={row._id}>\n                      {row.address}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              )}\n            />\n            <Controller\n              name=\"client_id\"\n              control={control}\n              rules={{ required: \"Client is required!\" }}\n              render={({ field }) => (\n                <TextField\n                  select\n                  {...field}\n                  onChange={handleSelectChange}\n                  label=\"Client\"\n                  fullWidth\n                  variant=\"outlined\"\n                  error={!!errors.client_id}\n                >\n                  {clients.map((client: ClientType) => (\n                    <MenuItem key={client._id} value={client._id}>\n                      {client.company_name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              )}\n            />\n            <FormHelperText className=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\">\n              {errors && errors.client_id && errors.client_id.message}\n            </FormHelperText>\n\n            {hasBranch && (\n              <Controller\n                name=\"branch_id\"\n                control={control}\n                // defaultValue=\"\"\n                render={({ field }) => (\n                  <TextField\n                    select\n                    {...field}\n                    label=\"Branch\"\n                    fullWidth\n                    variant=\"outlined\"\n                    style={{ marginTop: \"20px\" }}\n                    error={!!errors.branch_id}\n                  >\n                    {branch?.map((row) => (\n                      <MenuItem key={row._id} value={row._id}>\n                        {row.address}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                )}\n              />\n            )}\n            <FormHelperText className=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\">\n              {errors && errors.branch_id && errors.branch_id.message}\n            </FormHelperText>\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"name\", { required: \"Name is required!\" })}\n              label=\"Name\"\n              type=\"text\"\n              fullWidth\n              error={!!errors.name}\n              helperText={errors && errors.name && errors.name.message}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"email\", { required: \"Email Field is required!\" })}\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n              error={!!errors.email}\n              helperText={errors && errors.email && errors.email.message}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"address\", {\n                required: \"Address Field is required!\",\n              })}\n              label=\"Address\"\n              type=\"text\"\n              fullWidth\n              error={!!errors.address}\n              helperText={errors && errors.address && errors.address.message}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              {...register(\"phone\", { required: \"Phone Number is required!\" })}\n              label=\"Phone Number\"\n              type=\"text\"\n              fullWidth\n              error={!!errors.phone}\n              helperText={errors && errors.phone && errors.phone.message}\n            />\n          </DialogContent>\n\n          <DialogActions>\n            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n              {isEditMode ? \"Update\" : \"Save\"}\n            </Button>\n            <Button onClick={handleClose} color=\"secondary\" variant=\"contained\">\n              Close\n            </Button>\n          </DialogActions>\n        </form>\n        <DevTool control={control} /> {/* set up the dev tool */}\n      </Dialog>\n      <TableContainer component={Paper} style={{ marginTop: \"20px\" }}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"left\">Company Name</StyledTableCell>\n              <StyledTableCell align=\"left\">Branch Address</StyledTableCell>\n              <StyledTableCell align=\"left\">Name</StyledTableCell>\n              <StyledTableCell align=\"left\">Email</StyledTableCell>\n              <StyledTableCell align=\"left\">Phone</StyledTableCell>\n              <StyledTableCell align=\"left\">Address</StyledTableCell>\n              <StyledTableCell align=\"left\">Actions</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {contacts?.map((row) => (\n              <TableRow key={row._id} hover={true}>\n                <StyledTableCell align=\"left\">\n                  {/* {row.client_id.company_name} */}\n                  demo\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {row.branch_id?.address ? (\n                    row.branch_id.address\n                  ) : (\n                    <Chip\n                      label=\"No Branch\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                    />\n                  )}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">{row.name}</StyledTableCell>\n                <StyledTableCell align=\"left\">{row.email}</StyledTableCell>\n                <StyledTableCell align=\"left\">{row.phone}</StyledTableCell>\n                <StyledTableCell align=\"left\">{row.address}</StyledTableCell>\n\n                <StyledTableCell align=\"left\">\n                  <IconButton\n                    onClick={() => {\n                      setUpdateId(row._id);\n                      handleEdit(row);\n                    }}\n                  >\n                    <Edit fontSize=\"medium\" />\n                  </IconButton>\n                  <IconButton\n                    onClick={() => {\n                      setUpdateId(row._id);\n                      setOpenDeleteDialog(true);\n                    }}\n                  >\n                    <Delete fontSize=\"medium\" />\n                  </IconButton>\n                </StyledTableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <ConfirmDelete\n        openDeleteDialog={openDeleteDialog}\n        setOpenDeleteDialog={setOpenDeleteDialog}\n        handleDelete={handleDelete}\n      />\n    </Box>\n  );\n};\n\nexport default ContactPerson;\n"]},"metadata":{},"sourceType":"module"}