[{"/home/raju/Documents/Channakya/customer/client/src/index.tsx":"1","/home/raju/Documents/Channakya/customer/client/src/App.tsx":"2","/home/raju/Documents/Channakya/customer/client/src/pages/Login.tsx":"3","/home/raju/Documents/Channakya/customer/client/src/pages/Register.tsx":"4","/home/raju/Documents/Channakya/customer/client/src/pages/LoginStyles.tsx":"5","/home/raju/Documents/Channakya/customer/client/src/pages/RegisterStyles.tsx":"6","/home/raju/Documents/Channakya/customer/client/src/pages/Dashboard.tsx":"7","/home/raju/Documents/Channakya/customer/client/src/components/Sidebar/Sidebar.tsx":"8","/home/raju/Documents/Channakya/customer/client/src/pages/DashbaordStyles.tsx":"9","/home/raju/Documents/Channakya/customer/client/src/components/Sidebar/SidebarStyles.tsx":"10","/home/raju/Documents/Channakya/customer/client/src/components/Navbar/Navbar.tsx":"11","/home/raju/Documents/Channakya/customer/client/src/components/Navbar/NavbarStyles.tsx":"12","/home/raju/Documents/Channakya/customer/client/src/AuthenticationProvider.tsx":"13","/home/raju/Documents/Channakya/customer/client/src/components/Content/Client/Client.tsx":"14","/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx":"15","/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx":"16","/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx":"17","/home/raju/Documents/Channakya/customer/client/src/components/Content/Client/ClientStyles.tsx":"18","/home/raju/Documents/Channakya/customer/client/src/components/Content/Partials/ConfirmDelete.tsx":"19","/home/raju/Documents/Channakya/customer/client/src/components/Content/Partials/StyledTableCell.tsx":"20","/home/raju/Documents/Channakya/customer/client/src/utils/fetcher.tsx":"21","/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/ReactHookFormSelect.tsx":"22","/home/raju/Documents/Channakya/customer/client/src/components/Content/Profile/Profile.tsx":"23","/home/raju/Documents/Channakya/customer/client/src/components/Content/Count.tsx":"24","/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/ReactForm.tsx":"25","/home/raju/Documents/Channakya/customer/client/src/PublicRoute.tsx":"26","/home/raju/Documents/Channakya/customer/client/src/PrivateRoute.tsx":"27"},{"size":685,"mtime":1636950765438,"results":"28","hashOfConfig":"29"},{"size":918,"mtime":1637640079554,"results":"30","hashOfConfig":"29"},{"size":3295,"mtime":1637732154332,"results":"31","hashOfConfig":"29"},{"size":6166,"mtime":1636520736009,"results":"32","hashOfConfig":"29"},{"size":658,"mtime":1636446818123,"results":"33","hashOfConfig":"29"},{"size":597,"mtime":1635930127364,"results":"34","hashOfConfig":"29"},{"size":2079,"mtime":1637322957545,"results":"35","hashOfConfig":"29"},{"size":3744,"mtime":1637565235253,"results":"36","hashOfConfig":"29"},{"size":575,"mtime":1637567634231,"results":"37","hashOfConfig":"29"},{"size":500,"mtime":1637565416518,"results":"38","hashOfConfig":"29"},{"size":3441,"mtime":1637565767192,"results":"39","hashOfConfig":"29"},{"size":1486,"mtime":1637321490718,"results":"40","hashOfConfig":"29"},{"size":731,"mtime":1637639532569,"results":"41","hashOfConfig":"29"},{"size":8797,"mtime":1637564172898,"results":"42","hashOfConfig":"29"},{"size":11130,"mtime":1637740087621,"results":"43","hashOfConfig":"29"},{"size":7507,"mtime":1637732608215,"results":"44","hashOfConfig":"29"},{"size":5463,"mtime":1637737527792,"results":"45","hashOfConfig":"29"},{"size":322,"mtime":1636690425944,"results":"46","hashOfConfig":"29"},{"size":1003,"mtime":1636614890420,"results":"47","hashOfConfig":"29"},{"size":354,"mtime":1637224640290,"results":"48","hashOfConfig":"29"},{"size":189,"mtime":1636694782225,"results":"49","hashOfConfig":"29"},{"size":758,"mtime":1637126074836,"results":"50","hashOfConfig":"29"},{"size":4680,"mtime":1637567914525,"results":"51","hashOfConfig":"29"},{"size":3777,"mtime":1637731869923,"results":"52","hashOfConfig":"29"},{"size":6299,"mtime":1637732223961,"results":"53","hashOfConfig":"29"},{"size":369,"mtime":1637581404917,"results":"54","hashOfConfig":"29"},{"size":363,"mtime":1637581409137,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1339os4",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/raju/Documents/Channakya/customer/client/src/index.tsx",[],["112","113"],"/home/raju/Documents/Channakya/customer/client/src/App.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/pages/Login.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/pages/Register.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/pages/LoginStyles.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/pages/RegisterStyles.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/pages/Dashboard.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Sidebar/Sidebar.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/pages/DashbaordStyles.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Sidebar/SidebarStyles.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Navbar/Navbar.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Navbar/NavbarStyles.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/AuthenticationProvider.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Content/Client/Client.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Content/ContactPerson/ContactPerson.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/Branch.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/Contract.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Content/Client/ClientStyles.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Content/Partials/ConfirmDelete.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Content/Partials/StyledTableCell.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/utils/fetcher.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Content/Branch/ReactHookFormSelect.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Content/Profile/Profile.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Content/Count.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/components/Content/Contract/ReactForm.tsx",["114"],"import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormHelperText,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\n\nimport { Controller, useForm } from \"react-hook-form\";\nimport moment from \"moment\";\nimport { ContractType } from \"./types\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useSWRConfig } from \"swr\";\nimport { useSnackbar } from \"notistack\";\n// dev tool for hook form\nimport { DevTool } from \"@hookform/devtools\";\n\nconst ReactForm = ({\n  openDialog,\n  setOpenDialog,\n  isEditMode,\n  setIsEditMode,\n  clients,\n  toEditData,\n  setToEditData,\n  updateId,\n}) => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  // swr config\n  const { mutate } = useSWRConfig();\n  const CONTRACT_API = \"api/contract/\";\n\n  // date today and one year after\n  const signDate: string = moment().format(\"yyyy-MM-DD\").toString();\n  const endDate: string = moment().add(1, \"y\").format(\"yyyy-MM-DD\").toString();\n\n  // hook form default date values\n  const defaultValues = {\n    contract_sign_date: signDate,\n    contract_end_date: endDate,\n    client_id: toEditData?.client_id._id || undefined,\n    payment_status: toEditData?.payment_status || undefined,\n  };\n\n  // hook form\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm<ContractType>({\n    defaultValues: defaultValues,\n  });\n\n  useEffect(() => {\n    if (isEditMode) reset({ ...defaultValues });\n  }, [isEditMode, reset]);\n\n  const handleClose = () => {\n    setIsEditMode(false);\n    setOpenDialog(false);\n    setToEditData(null);\n    reset();\n  };\n\n  const onSubmit = (data: ContractType) => {\n    console.log(\"ob submit\");\n    console.log(data);\n    if (!isEditMode)\n      axios\n        .post(CONTRACT_API, data)\n        .then(({ data }) => {\n          mutate(CONTRACT_API);\n          setOpenDialog(false);\n          reset();\n          enqueueSnackbar(data.success_msg, { variant: \"success\" });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    else {\n      console.log(data);\n      axios\n        .patch(CONTRACT_API + updateId, data)\n        .then(({ data }) => {\n          mutate(CONTRACT_API);\n          setOpenDialog(false);\n          setIsEditMode(false);\n          reset();\n          enqueueSnackbar(data.success_msg, { variant: \"success\" });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  return (\n    <Dialog\n      open={openDialog}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">\n        {isEditMode ? \"Update Contract\" : \"Add Contract\"}\n      </DialogTitle>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogContent>\n          <Controller\n            name=\"client_id\"\n            control={control}\n            rules={{ required: \"Client is required!\" }}\n            // defaultValue={defaultValues?.client_id}\n            render={({ field }) => (\n              <TextField\n                select\n                {...field}\n                style={{ marginBottom: \"10px\" }}\n                label=\"Client\"\n                fullWidth\n                variant=\"outlined\"\n                error={!!errors.client_id}\n              >\n                {clients &&\n                  clients.map((client) => (\n                    <MenuItem key={client._id} value={client._id}>\n                      {client.company_name}\n                    </MenuItem>\n                  ))}\n              </TextField>\n            )}\n          />\n          <FormHelperText className=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\">\n            {errors && errors.client_id && errors.client_id.message}\n          </FormHelperText>\n\n          <Controller\n            name=\"payment_status\"\n            rules={{ required: \"Payment Status is required!\" }}\n            control={control}\n            // defaultValue={defaultValues.payment_status}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                select\n                label=\"Payment Status\"\n                fullWidth\n                variant=\"outlined\"\n                error={!!errors.payment_status}\n              >\n                <MenuItem value=\"paid\">Paid</MenuItem>\n                <MenuItem value=\"notpaid\">Not Paid</MenuItem>\n              </TextField>\n            )}\n          />\n          <FormHelperText className=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error\">\n            {errors && errors.payment_status && errors.payment_status.message}\n          </FormHelperText>\n\n          <TextField\n            {...register(\"contract_sign_date\", {\n              required: \"Contract Sign Date is required!\",\n            })}\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            label=\"Contract Sign Date\"\n            type=\"date\"\n            error={!!errors.contract_sign_date}\n            helperText={\n              errors &&\n              errors.contract_sign_date &&\n              errors.contract_sign_date.message\n            }\n          />\n          <TextField\n            {...register(\"contract_end_date\", {\n              required: \"Contract End Date is required!\",\n            })}\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            label=\"Contract End Date\"\n            type=\"date\"\n            error={!!errors.contract_end_date}\n            helperText={\n              errors &&\n              errors.contract_end_date &&\n              errors.contract_end_date.message\n            }\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {}}\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            {isEditMode ? \"Update\" : \"Save\"}\n          </Button>\n          <Button\n            onClick={handleClose}\n            // onClick={() => {\n            //   setOpenDialog(false);\n            //   reset({});\n            // }}\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </form>\n      <DevTool control={control} /> {/* set up the dev tool */}\n    </Dialog>\n  );\n};\n\nexport default ReactForm;\n","/home/raju/Documents/Channakya/customer/client/src/PublicRoute.tsx",[],"/home/raju/Documents/Channakya/customer/client/src/PrivateRoute.tsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":63,"column":6,"nodeType":"121","endLine":63,"endColumn":25,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'defaultValues'. Either include it or remove the dependency array.","ArrayExpression",["125"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [defaultValues, isEditMode, reset]",{"range":"128","text":"129"},[1458,1477],"[defaultValues, isEditMode, reset]"]